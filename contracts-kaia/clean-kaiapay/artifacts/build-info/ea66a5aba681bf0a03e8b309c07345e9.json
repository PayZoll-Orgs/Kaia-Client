{"id":"ea66a5aba681bf0a03e8b309c07345e9","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/BulkPayroll.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title BulkPayroll\n * @dev Enhanced bulk payment contract with failure isolation\n * @notice Handles bulk ETH and ERC20 transfers with individual failure handling\n */\ncontract BulkPayroll is ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n\n    constructor() Ownable(msg.sender) {}\n\n    /// @dev Maximum recipients per batch to prevent gas limit issues\n    uint256 public constant MAX_RECIPIENTS = 200;\n    \n    /// @dev Gas limit for ETH transfers to prevent griefing\n    uint256 public constant GAS_LIMIT = 50000;\n\n    /// @dev Mapping for failed transfers: recipient => token => amount\n    mapping(address => mapping(address => uint256)) public failedTransfers;\n\n    /// @dev Custom errors\n    error LengthMismatch();\n    error InsufficientBalance();\n    error InsufficientAllowance();\n    error TransferError();\n    error RefundFailed();\n    error TooManyRecipients();\n    error InvalidInput();\n\n    /// @dev Events\n    event BulkTransferExecuted(\n        address indexed sender,\n        address indexed token,\n        uint256 totalRecipients,\n        uint256 totalAmount,\n        uint256 successCount,\n        uint256 failCount\n    );\n\n    event TransferFailed(\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event FailedTransferClaimed(\n        address indexed recipient,\n        address token,\n        uint256 amount\n    );\n\n    /**\n     * @notice Executes a bulk transfer of tokens/Native currency with failure isolation\n     * @dev Failed transfers are stored for later claiming\n     * @param token ERC20 token address or address(0) for Native currency\n     * @param recipients Array of recipient addresses\n     * @param amounts Array of corresponding transfer amounts\n     */\n    function bulkTransfer(\n        address token,\n        address[] calldata recipients,\n        uint256[] calldata amounts\n    ) external payable nonReentrant {\n        uint256 length = recipients.length;\n        \n        // Input validation\n        if (length == 0) revert InvalidInput();\n        if (length > MAX_RECIPIENTS) revert TooManyRecipients();\n        if (length != amounts.length) revert LengthMismatch();\n\n        uint256 totalAmount;\n        for (uint256 i; i < length;) {\n            if (recipients[i] == address(0) || amounts[i] == 0) revert InvalidInput();\n            totalAmount += amounts[i];\n            unchecked { ++i; }\n        }\n\n        if (token == address(0)) {\n            _handleNativeTransfer(totalAmount, recipients, amounts);\n        } else {\n            _handleERC20Transfer(token, totalAmount, recipients, amounts);\n        }\n    }\n\n    /**\n     * @notice Claim failed transfers\n     * @param token Token to claim (address(0) for ETH)\n     */\n    function claimFailedTransfer(address token) external nonReentrant {\n        uint256 amount = failedTransfers[msg.sender][token];\n        if (amount == 0) revert InvalidInput();\n\n        failedTransfers[msg.sender][token] = 0;\n\n        bool success = _attemptTransfer(msg.sender, token, amount);\n        \n        if (success) {\n            emit FailedTransferClaimed(msg.sender, token, amount);\n        } else {\n            failedTransfers[msg.sender][token] = amount; // Restore balance\n            revert TransferError();\n        }\n    }\n\n    /**\n     * @dev Handle native currency transfers with failure isolation\n     */\n    function _handleNativeTransfer(\n        uint256 totalAmount,\n        address[] calldata recipients,\n        uint256[] calldata amounts\n    ) private {\n        if (msg.value < totalAmount) revert InsufficientBalance();\n\n        uint256 successCount = 0;\n        uint256 failCount = 0;\n\n        for (uint256 i; i < recipients.length;) {\n            if (_attemptTransfer(recipients[i], address(0), amounts[i])) {\n                successCount++;\n            } else {\n                failCount++;\n                failedTransfers[recipients[i]][address(0)] += amounts[i];\n                emit TransferFailed(recipients[i], address(0), amounts[i]);\n            }\n            unchecked { ++i; }\n        }\n\n        emit BulkTransferExecuted(msg.sender, address(0), recipients.length, totalAmount, successCount, failCount);\n        _refundExcessNative(totalAmount);\n    }\n\n    /**\n     * @dev Handle ERC20 transfers with failure isolation\n     */\n    function _handleERC20Transfer(\n        address token,\n        uint256 totalAmount,\n        address[] calldata recipients,\n        uint256[] calldata amounts\n    ) private {\n        IERC20 tokenContract = IERC20(token);\n        uint256 allowance = tokenContract.allowance(msg.sender, address(this));\n        if (allowance < totalAmount) revert InsufficientAllowance();\n\n        // Transfer total amount to contract first\n        tokenContract.safeTransferFrom(msg.sender, address(this), totalAmount);\n\n        uint256 successCount = 0;\n        uint256 failCount = 0;\n\n        for (uint256 i; i < recipients.length;) {\n            if (_attemptTransfer(recipients[i], token, amounts[i])) {\n                successCount++;\n            } else {\n                failCount++;\n                failedTransfers[recipients[i]][token] += amounts[i];\n                emit TransferFailed(recipients[i], token, amounts[i]);\n            }\n            unchecked { ++i; }\n        }\n\n        emit BulkTransferExecuted(msg.sender, token, recipients.length, totalAmount, successCount, failCount);\n    }\n\n    /**\n     * @dev Attempt transfer with gas limit protection\n     */\n    function _attemptTransfer(\n        address recipient,\n        address token,\n        uint256 amount\n    ) internal returns (bool success) {\n        if (token == address(0)) {\n            (success, ) = recipient.call{value: amount, gas: GAS_LIMIT}(\"\");\n        } else {\n            try IERC20(token).transfer(recipient, amount) {\n                success = true;\n            } catch {\n                success = false;\n            }\n        }\n    }\n\n    /**\n     * @dev Refund excess native currency\n     */\n    function _refundExcessNative(uint256 totalAmount) private {\n        uint256 remainder = msg.value - totalAmount;\n        if (remainder > 0) {\n            (bool success,) = msg.sender.call{value: remainder, gas: GAS_LIMIT}(\"\");\n            if (!success) revert RefundFailed();\n        }\n    }\n\n    /**\n     * @notice Get failed transfer amount for a recipient\n     */\n    function getFailedAmount(address recipient, address token) external view returns (uint256) {\n        return failedTransfers[recipient][token];\n    }\n\n    /**\n     * @notice Emergency withdrawal for owner (only failed transfers)\n     */\n    function emergencyWithdraw(address token) external onlyOwner {\n        if (token == address(0)) {\n            payable(owner()).transfer(address(this).balance);\n        } else {\n            IERC20(token).safeTransfer(owner(), IERC20(token).balanceOf(address(this)));\n        }\n    }\n\n    // Accept ETH\n    receive() external payable {}\n}\n"},"contracts/DummyUSDT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title DummyUSDT\n * @dev A simple ERC20 token for testing purposes with faucet functionality\n * @notice Compatible with Kaia testnet, includes built-in faucet for easy testing\n */\ncontract DummyUSDT is ERC20, Ownable {\n\n    /// @dev Faucet configuration\n    uint256 public constant FAUCET_AMOUNT = 1000 * 10**18; // 1000 tokens\n    uint256 public constant FAUCET_COOLDOWN = 24 hours;\n    \n    /// @dev Mapping to track last faucet claim time\n    mapping(address => uint256) public lastFaucetClaim;\n\n    /// @dev Events\n    event FaucetClaimed(address indexed user, uint256 amount);\n    event FaucetFunded(uint256 amount);\n\n    /// @dev Custom errors\n    error FaucetCooldown();\n    error FaucetEmpty();\n\n    /**\n     * @dev Constructor - creates initial supply and sets up faucet\n     * @param initialSupply Initial token supply (without decimals)\n     */\n    constructor(uint256 initialSupply) ERC20(\"Dummy USDT\", \"DUSDT\") Ownable(msg.sender) {\n        // Mint initial supply to owner\n        _mint(msg.sender, initialSupply * 10**decimals());\n        \n        // Fund faucet with 10% of initial supply\n        uint256 faucetFunding = (initialSupply * 10**decimals()) / 10;\n        _mint(address(this), faucetFunding);\n        \n        emit FaucetFunded(faucetFunding);\n    }\n\n    /**\n     * @notice Claim tokens from faucet (once per 24 hours)\n     * @dev Anyone can call this to get test tokens\n     */\n    function faucet() external {\n        // Check cooldown\n        if (block.timestamp < lastFaucetClaim[msg.sender] + FAUCET_COOLDOWN) {\n            revert FaucetCooldown();\n        }\n        \n        // Check faucet balance\n        if (balanceOf(address(this)) < FAUCET_AMOUNT) {\n            revert FaucetEmpty();\n        }\n        \n        // Update claim time before transfer (reentrancy protection)\n        lastFaucetClaim[msg.sender] = block.timestamp;\n        \n        // Transfer tokens\n        _transfer(address(this), msg.sender, FAUCET_AMOUNT);\n        \n        emit FaucetClaimed(msg.sender, FAUCET_AMOUNT);\n    }\n\n    /**\n     * @notice Mint new tokens (only owner)\n     * @param to Address to mint tokens to\n     * @param amount Amount to mint (with decimals)\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Fund the faucet (only owner)\n     * @param amount Amount to fund faucet with\n     */\n    function fundFaucet(uint256 amount) external onlyOwner {\n        _transfer(msg.sender, address(this), amount);\n        emit FaucetFunded(amount);\n    }\n\n    /**\n     * @notice Get faucet balance\n     */\n    function getFaucetBalance() external view returns (uint256) {\n        return balanceOf(address(this));\n    }\n\n    /**\n     * @notice Get time until next faucet claim for user\n     * @param user Address to check\n     */\n    function getTimeUntilNextClaim(address user) external view returns (uint256) {\n        uint256 nextClaim = lastFaucetClaim[user] + FAUCET_COOLDOWN;\n        if (block.timestamp >= nextClaim) {\n            return 0;\n        }\n        return nextClaim - block.timestamp;\n    }\n\n    /**\n     * @notice Check if user can claim from faucet\n     * @param user Address to check\n     */\n    function canClaimFaucet(address user) external view returns (bool) {\n        return block.timestamp >= lastFaucetClaim[user] + FAUCET_COOLDOWN \n               && balanceOf(address(this)) >= FAUCET_AMOUNT;\n    }\n\n    /**\n     * @notice Emergency withdrawal of faucet funds (only owner)\n     */\n    function withdrawFaucetFunds() external onlyOwner {\n        uint256 balance = balanceOf(address(this));\n        if (balance > 0) {\n            _transfer(address(this), owner(), balance);\n        }\n    }\n}\n"},"contracts/InvoiceSubscription.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n// Chainlink Automation interface\ninterface AutomationCompatibleInterface {\n    function checkUpkeep(bytes calldata checkData) external view returns (bool upkeepNeeded, bytes memory performData);\n    function performUpkeep(bytes calldata performData) external;\n}\n\n/**\n * @title InvoiceSubscription\n * @dev Enhanced contract for invoice payments and subscription management with Chainlink Automation\n * @notice Handles one-time invoices and subscription-based payments via EIP-712 signatures\n * Features automatic escrow release via Chainlink Automation when invoices are fully funded\n */\ncontract InvoiceSubscription is ReentrancyGuard, Ownable, Pausable, EIP712, AutomationCompatibleInterface {\n    using SafeERC20 for IERC20;\n    using ECDSA for bytes32;\n\n    /// @dev Invoice structure\n    struct Invoice {\n        address seller;\n        uint256 invoiceAmount;\n        address token; // address(0) for ETH\n        uint256 deadline;\n        uint256 totalContributed;\n        bool released;\n        bool refunded;\n        mapping(address => uint256) contributions;\n        address[] contributors;\n    }\n\n    /// @dev Subscription consent structure for EIP-712\n    struct SubscriptionConsent {\n        address buyer;\n        address seller;\n        address token;\n        uint256 amountPerInterval;\n        uint256 intervalSeconds;\n        uint256 startTimestamp;\n        uint256 endTimestamp;\n        uint256 nonce;\n    }\n\n    /// @dev Active subscription tracking\n    struct ActiveSubscription {\n        address buyer;\n        address seller;\n        address token;\n        uint256 amountPerInterval;\n        uint256 intervalSeconds;\n        uint256 nextDue;\n        uint256 endTimestamp;\n        bool active;\n        uint256 totalPaid;\n    }\n\n    /// @dev EIP-712 type hash for subscription consent\n    bytes32 public constant SUBSCRIPTION_CONSENT_TYPEHASH = keccak256(\n        \"SubscriptionConsent(address buyer,address seller,address token,uint256 amountPerInterval,uint256 intervalSeconds,uint256 startTimestamp,uint256 endTimestamp,uint256 nonce)\"\n    );\n\n    /// @dev Mapping from invoice ID to invoice data\n    mapping(bytes32 => Invoice) public invoices;\n    \n    /// @dev Mapping from consent nonce to used status\n    mapping(address => mapping(uint256 => bool)) public usedNonces;\n    \n    /// @dev Mapping from subscription key to active subscription\n    mapping(bytes32 => ActiveSubscription) public subscriptions;\n    \n    /// @dev Array to track all invoice IDs for automation checks\n    bytes32[] public allInvoiceIds;\n    \n    /// @dev Mapping to check if invoice ID is already tracked\n    mapping(bytes32 => bool) public invoiceTracked;\n\n    /// @dev Custom errors\n    error InvalidInvoice();\n    error InvalidAmount();\n    error InvoiceExpired();\n    error InvoiceAlreadyReleased();\n    error InvoiceNotExpired();\n    error NoContribution();\n    error TransferFailed();\n    error InvalidSignature();\n    error NonceUsed();\n    error SubscriptionExpired();\n    error SubscriptionNotDue();\n    error InvalidConsent();\n\n    /// @dev Events\n    event InvoiceCreated(\n        bytes32 indexed invoiceId,\n        address indexed seller,\n        uint256 invoiceAmount,\n        address token,\n        uint256 deadline\n    );\n\n    event InvoiceFunded(\n        bytes32 indexed invoiceId,\n        address indexed contributor,\n        uint256 amount,\n        uint256 totalContributed\n    );\n\n    event InvoiceReleased(\n        bytes32 indexed invoiceId,\n        address indexed seller,\n        uint256 amount\n    );\n\n    event InvoiceRefunded(\n        bytes32 indexed invoiceId,\n        address indexed contributor,\n        uint256 amount\n    );\n\n    event SubscriptionCreated(\n        bytes32 indexed subscriptionKey,\n        address indexed buyer,\n        address indexed seller,\n        uint256 amountPerInterval,\n        uint256 intervalSeconds\n    );\n\n    event SubscriptionPayment(\n        bytes32 indexed subscriptionKey,\n        address indexed buyer,\n        address indexed seller,\n        uint256 amount,\n        uint256 nextDue\n    );\n\n    event AutomationTriggered(\n        bytes32 indexed invoiceId,\n        uint256 timestamp\n    );\n\n    constructor() EIP712(\"InvoiceSubscription\", \"1\") Ownable(msg.sender) {}\n\n    /**\n     * @notice Create a new invoice\n     * @param seller Address that will receive the payment\n     * @param invoiceAmount Total amount required\n     * @param token Token address (address(0) for ETH)\n     * @param deadline Payment deadline timestamp\n     */\n    function createInvoice(\n        address seller,\n        uint256 invoiceAmount,\n        address token,\n        uint256 deadline\n    ) external whenNotPaused returns (bytes32 invoiceId) {\n        if (seller == address(0) || invoiceAmount == 0) revert InvalidInvoice();\n        if (deadline <= block.timestamp) revert InvalidInvoice();\n\n        invoiceId = keccak256(abi.encodePacked(seller, invoiceAmount, token, deadline, block.timestamp));\n        \n        Invoice storage invoice = invoices[invoiceId];\n        invoice.seller = seller;\n        invoice.invoiceAmount = invoiceAmount;\n        invoice.token = token;\n        invoice.deadline = deadline;\n\n        // Add to tracking for Chainlink Automation\n        if (!invoiceTracked[invoiceId]) {\n            allInvoiceIds.push(invoiceId);\n            invoiceTracked[invoiceId] = true;\n        }\n\n        emit InvoiceCreated(invoiceId, seller, invoiceAmount, token, deadline);\n    }\n\n    /**\n     * @notice Fund an invoice (partial or full payment)\n     * @param invoiceId The invoice to fund\n     */\n    function fundInvoice(bytes32 invoiceId) external payable nonReentrant whenNotPaused {\n        Invoice storage invoice = invoices[invoiceId];\n        if (invoice.seller == address(0)) revert InvalidInvoice();\n        if (invoice.released || invoice.refunded) revert InvoiceAlreadyReleased();\n        if (block.timestamp > invoice.deadline) revert InvoiceExpired();\n\n        uint256 amount;\n        if (invoice.token == address(0)) {\n            amount = msg.value;\n        } else {\n            amount = IERC20(invoice.token).allowance(msg.sender, address(this));\n            IERC20(invoice.token).safeTransferFrom(msg.sender, address(this), amount);\n        }\n\n        if (amount == 0) revert InvalidAmount();\n\n        // Update contribution tracking\n        if (invoice.contributions[msg.sender] == 0) {\n            invoice.contributors.push(msg.sender);\n        }\n        invoice.contributions[msg.sender] += amount;\n        invoice.totalContributed += amount;\n\n        emit InvoiceFunded(invoiceId, msg.sender, amount, invoice.totalContributed);\n\n        // Auto-release if fully funded (backup to Chainlink Automation)\n        if (invoice.totalContributed >= invoice.invoiceAmount) {\n            _releaseInvoice(invoiceId);\n        }\n    }\n\n    /**\n     * @notice Create subscription via EIP-712 signature\n     * @param consent The subscription consent data\n     * @param signature The signed consent\n     */\n    function createSubscriptionWithConsent(\n        SubscriptionConsent calldata consent,\n        bytes calldata signature\n    ) external nonReentrant whenNotPaused {\n        // Verify signature\n        bytes32 structHash = keccak256(abi.encode(\n            SUBSCRIPTION_CONSENT_TYPEHASH,\n            consent.buyer,\n            consent.seller,\n            consent.token,\n            consent.amountPerInterval,\n            consent.intervalSeconds,\n            consent.startTimestamp,\n            consent.endTimestamp,\n            consent.nonce\n        ));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n        address signer = hash.recover(signature);\n        \n        if (signer != consent.buyer) revert InvalidSignature();\n        if (usedNonces[consent.buyer][consent.nonce]) revert NonceUsed();\n        if (block.timestamp > consent.endTimestamp) revert SubscriptionExpired();\n\n        // Mark nonce as used\n        usedNonces[consent.buyer][consent.nonce] = true;\n\n        // Create subscription\n        bytes32 subscriptionKey = keccak256(abi.encodePacked(\n            consent.buyer, \n            consent.seller, \n            consent.token,\n            consent.nonce\n        ));\n\n        ActiveSubscription storage subscription = subscriptions[subscriptionKey];\n        subscription.buyer = consent.buyer;\n        subscription.seller = consent.seller;\n        subscription.token = consent.token;\n        subscription.amountPerInterval = consent.amountPerInterval;\n        subscription.intervalSeconds = consent.intervalSeconds;\n        subscription.nextDue = consent.startTimestamp;\n        subscription.endTimestamp = consent.endTimestamp;\n        subscription.active = true;\n\n        emit SubscriptionCreated(\n            subscriptionKey,\n            consent.buyer,\n            consent.seller,\n            consent.amountPerInterval,\n            consent.intervalSeconds\n        );\n    }\n\n    /**\n     * @notice Execute subscription payment\n     * @param subscriptionKey The subscription to process\n     */\n    function pullSubscriptionPayment(bytes32 subscriptionKey) external payable nonReentrant whenNotPaused {\n        ActiveSubscription storage subscription = subscriptions[subscriptionKey];\n        \n        if (!subscription.active) revert InvalidConsent();\n        if (block.timestamp > subscription.endTimestamp) revert SubscriptionExpired();\n        if (block.timestamp < subscription.nextDue) revert SubscriptionNotDue();\n\n        // Process payment\n        if (subscription.token == address(0)) {\n            // ETH payment - buyer must send ETH with transaction\n            if (msg.value < subscription.amountPerInterval) revert InvalidAmount();\n            \n            (bool success,) = subscription.seller.call{value: subscription.amountPerInterval}(\"\");\n            if (!success) revert TransferFailed();\n            \n            // Refund excess\n            if (msg.value > subscription.amountPerInterval) {\n                (bool refundSuccess,) = msg.sender.call{value: msg.value - subscription.amountPerInterval}(\"\");\n                if (!refundSuccess) revert TransferFailed();\n            }\n        } else {\n            // ERC20 payment\n            IERC20(subscription.token).safeTransferFrom(\n                subscription.buyer,\n                subscription.seller,\n                subscription.amountPerInterval\n            );\n        }\n\n        // Update subscription state\n        subscription.nextDue += subscription.intervalSeconds;\n        subscription.totalPaid += subscription.amountPerInterval;\n\n        emit SubscriptionPayment(\n            subscriptionKey,\n            subscription.buyer,\n            subscription.seller,\n            subscription.amountPerInterval,\n            subscription.nextDue\n        );\n    }\n\n    /**\n     * @notice Request refund for expired invoice\n     * @param invoiceId The invoice to refund\n     */\n    function requestRefund(bytes32 invoiceId) external nonReentrant {\n        Invoice storage invoice = invoices[invoiceId];\n        if (invoice.seller == address(0)) revert InvalidInvoice();\n        if (invoice.released || invoice.refunded) revert InvoiceAlreadyReleased();\n        if (block.timestamp <= invoice.deadline) revert InvoiceNotExpired();\n\n        uint256 contribution = invoice.contributions[msg.sender];\n        if (contribution == 0) revert NoContribution();\n\n        invoice.contributions[msg.sender] = 0;\n        invoice.refunded = true;\n\n        // Transfer refund\n        if (invoice.token == address(0)) {\n            (bool success,) = msg.sender.call{value: contribution}(\"\");\n            if (!success) revert TransferFailed();\n        } else {\n            IERC20(invoice.token).safeTransfer(msg.sender, contribution);\n        }\n\n        emit InvoiceRefunded(invoiceId, msg.sender, contribution);\n    }\n\n    /**\n     * @dev Internal function to release invoice payment\n     */\n    function _releaseInvoice(bytes32 invoiceId) internal {\n        Invoice storage invoice = invoices[invoiceId];\n        if (invoice.released || invoice.refunded) return;\n\n        invoice.released = true;\n\n        // Transfer payment to seller\n        if (invoice.token == address(0)) {\n            (bool success,) = invoice.seller.call{value: invoice.totalContributed}(\"\");\n            if (!success) revert TransferFailed();\n        } else {\n            IERC20(invoice.token).safeTransfer(invoice.seller, invoice.totalContributed);\n        }\n\n        emit InvoiceReleased(invoiceId, invoice.seller, invoice.totalContributed);\n    }\n\n    /**\n     * @notice Chainlink Automation: Check if any invoices need to be automatically released\n     * @param checkData Additional data (not used in this implementation)\n     * @return upkeepNeeded True if upkeep is needed\n     * @return performData Encoded invoice IDs that need to be released\n     */\n    function checkUpkeep(bytes calldata checkData) \n        external \n        view \n        override \n        returns (bool upkeepNeeded, bytes memory performData) \n    {\n        checkData; // Silence unused parameter warning\n        \n        bytes32[] memory invoicesToRelease = new bytes32[](allInvoiceIds.length);\n        uint256 count = 0;\n        \n        // Check all invoices to see which ones are ready for release\n        for (uint256 i = 0; i < allInvoiceIds.length; i++) {\n            bytes32 invoiceId = allInvoiceIds[i];\n            Invoice storage invoice = invoices[invoiceId];\n            \n            // Check if invoice is fully funded but not yet released\n            if (!invoice.released && \n                !invoice.refunded && \n                invoice.totalContributed >= invoice.invoiceAmount &&\n                block.timestamp <= invoice.deadline) {\n                invoicesToRelease[count] = invoiceId;\n                count++;\n            }\n        }\n        \n        // If we found invoices to release, return true with the data\n        if (count > 0) {\n            upkeepNeeded = true;\n            \n            // Create array with only the invoices that need release\n            bytes32[] memory finalInvoices = new bytes32[](count);\n            for (uint256 i = 0; i < count; i++) {\n                finalInvoices[i] = invoicesToRelease[i];\n            }\n            \n            performData = abi.encode(finalInvoices);\n        } else {\n            upkeepNeeded = false;\n            performData = \"\";\n        }\n    }\n\n    /**\n     * @notice Chainlink Automation: Perform the upkeep by releasing funds for ready invoices\n     * @param performData Encoded invoice IDs to release\n     */\n    function performUpkeep(bytes calldata performData) external override {\n        // Decode the invoice IDs\n        bytes32[] memory invoicesToRelease = abi.decode(performData, (bytes32[]));\n        \n        // Release funds for each invoice\n        for (uint256 i = 0; i < invoicesToRelease.length; i++) {\n            bytes32 invoiceId = invoicesToRelease[i];\n            Invoice storage invoice = invoices[invoiceId];\n            \n            // Double-check the conditions before releasing\n            if (!invoice.released && \n                !invoice.refunded && \n                invoice.totalContributed >= invoice.invoiceAmount &&\n                block.timestamp <= invoice.deadline) {\n                _releaseInvoice(invoiceId);\n                emit AutomationTriggered(invoiceId, block.timestamp);\n            }\n        }\n    }\n\n    // View functions\n    function getInvoice(bytes32 invoiceId) external view returns (\n        address seller,\n        uint256 invoiceAmount,\n        address token,\n        uint256 deadline,\n        uint256 totalContributed,\n        bool released,\n        bool refunded\n    ) {\n        Invoice storage invoice = invoices[invoiceId];\n        return (\n            invoice.seller,\n            invoice.invoiceAmount,\n            invoice.token,\n            invoice.deadline,\n            invoice.totalContributed,\n            invoice.released,\n            invoice.refunded\n        );\n    }\n\n    function getContribution(bytes32 invoiceId, address contributor) external view returns (uint256) {\n        return invoices[invoiceId].contributions[contributor];\n    }\n\n    function getTotalInvoiceCount() external view returns (uint256) {\n        return allInvoiceIds.length;\n    }\n\n    function getInvoiceIdAtIndex(uint256 index) external view returns (bytes32) {\n        require(index < allInvoiceIds.length, \"Index out of bounds\");\n        return allInvoiceIds[index];\n    }\n\n    // Admin functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}\n"},"contracts/SplitBilling.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title SplitBilling  \n * @dev Enhanced contract for splitting payments with deadline management\n * @notice Allows payment splitting among recipients with deadline tracking and failure isolation\n */\ncontract SplitBilling is ReentrancyGuard {\n    \n    // Constants\n    uint256 public constant BASIS_POINTS = 10000;\n    uint256 public constant MAX_RECIPIENTS = 20;\n    uint256 public constant GAS_LIMIT = 50000;\n    address public constant ETH_TOKEN = address(0);\n\n    // Structs\n    struct SplitRequest {\n        address payer;\n        address token;\n        uint256 totalAmount;\n        uint256 deadline;\n        bool completed;\n        uint256 successCount;\n        uint256 failCount;\n        address[] recipients;\n        uint256[] shares;\n        mapping(address => bool) hasPaid;\n        mapping(address => uint256) expectedAmounts;\n    }\n\n    // Storage\n    mapping(address => mapping(address => uint256)) public failedTransfers; // recipient => token => amount\n    mapping(uint256 => SplitRequest) public splitRequests;\n    uint256 public splitCounter;\n\n    // Events\n    event SplitCreated(\n        uint256 indexed splitId,\n        address indexed payer,\n        address token,\n        uint256 totalAmount,\n        uint256 deadline,\n        address[] recipients,\n        uint256[] shares\n    );\n\n    event SplitExecuted(\n        uint256 indexed splitId,\n        address indexed payer,\n        address token,\n        uint256 totalAmount,\n        uint256 successCount,\n        uint256 failCount\n    );\n\n    event TransferFailed(\n        uint256 indexed splitId,\n        address indexed recipient,\n        address token,\n        uint256 amount\n    );\n\n    event FailedTransferClaimed(\n        address indexed recipient,\n        address token,\n        uint256 amount\n    );\n\n    event UnpaidRecipientAlert(\n        uint256 indexed splitId,\n        address indexed recipient,\n        uint256 deadline\n    );\n\n    event RecipientPaid(\n        uint256 indexed splitId,\n        address indexed recipient,\n        address token,\n        uint256 amount\n    );\n\n    // Custom errors\n    error InvalidInput();\n    error ClaimTransferFailed();\n    error SplitExpired();\n    error SplitNotFound();\n    error AlreadyPaid();\n    error InvalidAmount();\n\n    /**\n     * @dev Create a split payment request with deadline\n     * @param recipients Array of recipient addresses (max 20)\n     * @param shares Array of shares in basis points (must sum to 10000)\n     * @param token Token address (address(0) for ETH)\n     * @param deadline Unix timestamp deadline\n     */\n    function createSplit(\n        address[] calldata recipients,\n        uint256[] calldata shares,\n        address token,\n        uint256 deadline\n    ) external payable nonReentrant returns (uint256 splitId) {\n        // Input validation\n        if (recipients.length == 0 || recipients.length > MAX_RECIPIENTS) revert InvalidInput();\n        if (recipients.length != shares.length) revert InvalidInput();\n        if (deadline <= block.timestamp) revert InvalidInput();\n        \n        uint256 totalAmount = token == ETH_TOKEN ? msg.value : 0;\n        if (totalAmount == 0 && token == ETH_TOKEN) revert InvalidInput();\n        \n        uint256 totalShares = 0;\n        for (uint256 i = 0; i < shares.length; i++) {\n            if (recipients[i] == address(0) || shares[i] == 0) revert InvalidInput();\n            totalShares += shares[i];\n        }\n        if (totalShares != BASIS_POINTS) revert InvalidInput();\n\n        // Handle ERC20 transfer to contract\n        if (token != ETH_TOKEN) {\n            totalAmount = _getERC20Amount(token);\n            IERC20(token).transferFrom(msg.sender, address(this), totalAmount);\n        }\n\n        // Create split request\n        splitId = ++splitCounter;\n        SplitRequest storage split = splitRequests[splitId];\n        split.payer = msg.sender;\n        split.token = token;\n        split.totalAmount = totalAmount;\n        split.deadline = deadline;\n        split.recipients = recipients;\n        split.shares = shares;\n        \n        // Calculate expected amounts for each recipient\n        for (uint256 i = 0; i < recipients.length; i++) {\n            split.expectedAmounts[recipients[i]] = (totalAmount * shares[i]) / BASIS_POINTS;\n        }\n\n        emit SplitCreated(splitId, msg.sender, token, totalAmount, deadline, recipients, shares);\n        \n        // Execute split immediately\n        _executeSplit(splitId);\n    }\n\n    /**\n     * @dev Execute split with failure isolation - can be called by anyone after creation\n     * @param splitId The ID of the split to execute\n     */\n    function executeSplit(uint256 splitId) external nonReentrant {\n        if (splitId == 0 || splitId > splitCounter) revert SplitNotFound();\n        if (splitRequests[splitId].completed) revert AlreadyPaid();\n        if (block.timestamp > splitRequests[splitId].deadline) revert SplitExpired();\n        \n        _executeSplit(splitId);\n    }\n\n    /**\n     * @dev Check for unpaid recipients after deadline and emit alerts\n     * @param splitId The ID of the split to check\n     */\n    function checkUnpaidRecipients(uint256 splitId) external {\n        if (splitId == 0 || splitId > splitCounter) revert SplitNotFound();\n        \n        SplitRequest storage split = splitRequests[splitId];\n        if (block.timestamp <= split.deadline) revert InvalidInput();\n        \n        for (uint256 i = 0; i < split.recipients.length; i++) {\n            address recipient = split.recipients[i];\n            if (!split.hasPaid[recipient]) {\n                emit UnpaidRecipientAlert(splitId, recipient, split.deadline);\n            }\n        }\n    }\n\n    /**\n     * @dev Claim failed transfers\n     * @param token Token to claim (address(0) for ETH)\n     */\n    function claimFailedTransfer(address token) external nonReentrant {\n        uint256 amount = failedTransfers[msg.sender][token];\n        if (amount == 0) revert InvalidInput();\n\n        failedTransfers[msg.sender][token] = 0;\n\n        bool success;\n        if (token == ETH_TOKEN) {\n            (success, ) = msg.sender.call{value: amount, gas: GAS_LIMIT}(\"\");\n        } else {\n            try IERC20(token).transfer(msg.sender, amount) {\n                success = true;\n            } catch {\n                success = false;\n            }\n        }\n\n        if (success) {\n            emit FailedTransferClaimed(msg.sender, token, amount);\n        } else {\n            failedTransfers[msg.sender][token] = amount; // Restore balance\n            revert ClaimTransferFailed();\n        }\n    }\n\n    /**\n     * @dev Execute split with individual failure isolation\n     */\n    function _executeSplit(uint256 splitId) internal {\n        SplitRequest storage split = splitRequests[splitId];\n        \n        uint256 successCount = 0;\n        uint256 failCount = 0;\n        uint256 remaining = split.totalAmount;\n\n        for (uint256 i = 0; i < split.recipients.length; i++) {\n            address recipient = split.recipients[i];\n            uint256 amount = (i == split.recipients.length - 1) \n                ? remaining \n                : split.expectedAmounts[recipient];\n            \n            if (i < split.recipients.length - 1) remaining -= amount;\n\n            if (_attemptTransfer(recipient, split.token, amount)) {\n                successCount++;\n                split.hasPaid[recipient] = true;\n                emit RecipientPaid(splitId, recipient, split.token, amount);\n            } else {\n                failCount++;\n                failedTransfers[recipient][split.token] += amount;\n                emit TransferFailed(splitId, recipient, split.token, amount);\n            }\n        }\n\n        split.successCount = successCount;\n        split.failCount = failCount;\n        split.completed = true;\n\n        emit SplitExecuted(splitId, split.payer, split.token, split.totalAmount, successCount, failCount);\n    }\n\n    /**\n     * @dev Attempt transfer with gas limit protection\n     */\n    function _attemptTransfer(\n        address recipient,\n        address token,\n        uint256 amount\n    ) internal returns (bool success) {\n        if (token == ETH_TOKEN) {\n            (success, ) = recipient.call{value: amount, gas: GAS_LIMIT}(\"\");\n        } else {\n            try IERC20(token).transfer(recipient, amount) {\n                success = true;\n            } catch {\n                success = false;\n            }\n        }\n    }\n\n    /**\n     * @dev Get ERC20 transfer amount from allowance\n     */\n    function _getERC20Amount(address token) internal view returns (uint256) {\n        return IERC20(token).allowance(msg.sender, address(this));\n    }\n\n    /**\n     * @dev Get failed transfer amount\n     */\n    function getFailedAmount(address recipient, address token) external view returns (uint256) {\n        return failedTransfers[recipient][token];\n    }\n\n    /**\n     * @dev Get split request details\n     */\n    function getSplitDetails(uint256 splitId) external view returns (\n        address payer,\n        address token,\n        uint256 totalAmount,\n        uint256 deadline,\n        bool completed,\n        uint256 successCount,\n        uint256 failCount,\n        address[] memory recipients,\n        uint256[] memory shares\n    ) {\n        if (splitId == 0 || splitId > splitCounter) revert SplitNotFound();\n        \n        SplitRequest storage split = splitRequests[splitId];\n        return (\n            split.payer,\n            split.token,\n            split.totalAmount,\n            split.deadline,\n            split.completed,\n            split.successCount,\n            split.failCount,\n            split.recipients,\n            split.shares\n        );\n    }\n\n    /**\n     * @dev Check if recipient has been paid in a split\n     */\n    function hasRecipientPaid(uint256 splitId, address recipient) external view returns (bool) {\n        if (splitId == 0 || splitId > splitCounter) revert SplitNotFound();\n        return splitRequests[splitId].hasPaid[recipient];\n    }\n\n    // Accept ETH\n    receive() external payable {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1512],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1513,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1512],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[4157],"IERC20":[992]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4157,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,4157,992],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[926,935]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4157]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":4158,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":993,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[262]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":262,"linearizedBaseContracts":[262],"name":"IERC5267","nameLocation":"144:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"159:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":242,"name":"EIP712DomainChanged","nameLocation":"254:19:4","nodeType":"EventDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"273:2:4"},"src":"248:28:4"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"282:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"448:2:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"fields","nameLocation":"518:6:4","nodeType":"VariableDeclaration","scope":261,"src":"511:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"name","nameLocation":"552:4:4","nodeType":"VariableDeclaration","scope":261,"src":"538:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"version","nameLocation":"584:7:4","nodeType":"VariableDeclaration","scope":261,"src":"570:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"chainId","nameLocation":"613:7:4","nodeType":"VariableDeclaration","scope":261,"src":"605:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:4","nodeType":"VariableDeclaration","scope":261,"src":"634:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"salt","nameLocation":"681:4:4","nodeType":"VariableDeclaration","scope":261,"src":"673:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"extensions","nameLocation":"716:10:4","nodeType":"VariableDeclaration","scope":261,"src":"699:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ArrayTypeName","src":"699:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:4"},"scope":262,"src":"427:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":263,"src":"134:605:4","usedErrors":[],"usedEvents":[242]}],"src":"107:633:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[399],"IERC20Errors":[304],"IERC721Errors":[352]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":274,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":274,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":274,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":274,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":279,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":279,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":284,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":284,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":293,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":293,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":293,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":293,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":298,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":298,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":303,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":303,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":400,"src":"280:1764:5","usedErrors":[274,279,284,293,298,303],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":352,"linearizedBaseContracts":[352],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":310,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":310,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":315,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":315,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":324,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":324,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":324,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":324,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":329,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":329,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":334,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":334,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":341,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":341,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":341,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":346,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":346,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":351,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":351,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":400,"src":"2190:2092:5","usedErrors":[310,315,324,329,334,341,346,351],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":399,"linearizedBaseContracts":[399],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":364,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":369,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":369,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":374,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":374,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":381,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":381,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":381,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":386,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":386,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":391,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":391,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":398,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":398,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":398,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":400,"src":"4430:2107:5","usedErrors":[364,369,374,381,386,391,398],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1512],"ERC20":[914],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1018]},"id":915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":993,"src":"131:36:6","symbolAliases":[{"foreign":{"id":402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1019,"src":"168:63:6","symbolAliases":[{"foreign":{"id":404,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1513,"src":"232:48:6","symbolAliases":[{"foreign":{"id":406,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":400,"src":"281:65:6","symbolAliases":[{"foreign":{"id":408,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":411,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"1133:7:6"},"id":412,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":413,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1142:6:6"},"id":414,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":415,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1018,"src":"1150:14:6"},"id":416,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":417,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"1166:12:6"},"id":418,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914,304,1018,992,1512],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":422,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":914,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":428,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":914,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":427,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":426,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":430,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":914,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":432,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":914,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":914,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":450,"nodeType":"Block","src":"1638:57:6","statements":[{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":443,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1656:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":445,"nodeType":"ExpressionStatement","src":"1648:13:6"},{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1671:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":447,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"1681:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":449,"nodeType":"ExpressionStatement","src":"1671:17:6"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1425:152:6","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":451,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"name_","nameLocation":"1608:5:6","nodeType":"VariableDeclaration","scope":451,"src":"1594:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":436,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:6","nodeType":"VariableDeclaration","scope":451,"src":"1615:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:6"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1638:0:6"},"scope":914,"src":"1582:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1005],"body":{"id":459,"nodeType":"Block","src":"1820:29:6","statements":[{"expression":{"id":457,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1837:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"1830:12:6"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1701:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:6","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1773:2:6"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"1805:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:6"},"scope":914,"src":"1760:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1011],"body":{"id":468,"nodeType":"Block","src":"2024:31:6","statements":[{"expression":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2041:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":465,"id":467,"nodeType":"Return","src":"2034:14:6"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1855:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:6","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1977:2:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"2009:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:6"},"scope":914,"src":"1962:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1017],"body":{"id":477,"nodeType":"Block","src":"2744:26:6","statements":[{"expression":{"hexValue":"3138","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":474,"id":476,"nodeType":"Return","src":"2754:9:6"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2061:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:6","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"2705:2:6"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2737:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":472,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:6"},"scope":914,"src":"2688:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[941],"body":{"id":486,"nodeType":"Block","src":"2864:36:6","statements":[{"expression":{"id":484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2881:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"2874:19:6"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2776:22:6","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"2823:2:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"2855:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:6"},"scope":914,"src":"2803:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":499,"nodeType":"Block","src":"3007:42:6","statements":[{"expression":{"baseExpression":{"id":495,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3024:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3034:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":498,"nodeType":"Return","src":"3017:25:6"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2906:22:6","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:6","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"account","nameLocation":"2960:7:6","nodeType":"VariableDeclaration","scope":500,"src":"2952:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"2998:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:6"},"scope":914,"src":"2933:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[959],"body":{"id":523,"nodeType":"Block","src":"3319:103:6","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"owner","nameLocation":"3337:5:6","nodeType":"VariableDeclaration","scope":523,"src":"3329:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3345:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:6"},{"expression":{"arguments":[{"id":516,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3377:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3384:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3388:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3367:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"3367:27:6"},{"expression":{"hexValue":"74727565","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":509,"id":522,"nodeType":"Return","src":"3404:11:6"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"3055:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:6","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"to","nameLocation":"3270:2:6","nodeType":"VariableDeclaration","scope":524,"src":"3262:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"value","nameLocation":"3282:5:6","nodeType":"VariableDeclaration","scope":524,"src":"3274:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:6"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"3313:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:6"},"scope":914,"src":"3244:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":540,"nodeType":"Block","src":"3544:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":534,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3561:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":536,"indexExpression":{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3573:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":537,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3580:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":533,"id":539,"nodeType":"Return","src":"3554:34:6"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"3428:22:6","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:6","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3482:5:6","nodeType":"VariableDeclaration","scope":541,"src":"3474:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"3497:7:6","nodeType":"VariableDeclaration","scope":541,"src":"3489:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:6"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"3535:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:6"},"scope":914,"src":"3455:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[979],"body":{"id":564,"nodeType":"Block","src":"3981:107:6","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"3999:5:6","nodeType":"VariableDeclaration","scope":564,"src":"3991:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4007:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:6"},{"expression":{"arguments":[{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4038:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4054:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"4029:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"4029:31:6"},{"expression":{"hexValue":"74727565","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":550,"id":563,"nodeType":"Return","src":"4070:11:6"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3601:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"spender","nameLocation":"3927:7:6","nodeType":"VariableDeclaration","scope":565,"src":"3919:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"3944:5:6","nodeType":"VariableDeclaration","scope":565,"src":"3936:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3975:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:6"},"scope":914,"src":"3902:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[991],"body":{"id":596,"nodeType":"Block","src":"4773:151:6","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"spender","nameLocation":"4791:7:6","nodeType":"VariableDeclaration","scope":596,"src":"4783:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4801:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:6"},{"expression":{"arguments":[{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4839:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4845:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4854:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4823:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"4823:37:6"},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4880:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4886:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4890:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4870:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"4870:26:6"},{"expression":{"hexValue":"74727565","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":576,"id":595,"nodeType":"Return","src":"4906:11:6"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"4094:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:6","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"from","nameLocation":"4710:4:6","nodeType":"VariableDeclaration","scope":597,"src":"4702:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"4724:2:6","nodeType":"VariableDeclaration","scope":597,"src":"4716:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"value","nameLocation":"4736:5:6","nodeType":"VariableDeclaration","scope":597,"src":"4728:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4767:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:6"},"scope":914,"src":"4680:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5366:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5380:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:6","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":621,"nodeType":"IfStatement","src":"5376:86:6","trueBody":{"id":620,"nodeType":"Block","src":"5400:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:6","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":613,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5421:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"RevertStatement","src":"5414:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5475:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"5471:86:6","trueBody":{"id":635,"nodeType":"Block","src":"5493:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5514:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"5507:39:6"}]}},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5574:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5580:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5584:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5566:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5566:24:6"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4930:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:6","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5324:4:6","nodeType":"VariableDeclaration","scope":644,"src":"5316:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5338:2:6","nodeType":"VariableDeclaration","scope":644,"src":"5330:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"5350:5:6","nodeType":"VariableDeclaration","scope":644,"src":"5342:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:6"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5366:0:6"},"scope":914,"src":"5297:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"5987:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6001:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:6","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":691,"nodeType":"Block","src":"6175:362:6","statements":[{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:6","nodeType":"VariableDeclaration","scope":691,"src":"6189:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":670,"initialValue":{"baseExpression":{"id":667,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6211:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":669,"indexExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6221:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6244:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6258:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"6240:115:6","trueBody":{"id":680,"nodeType":"Block","src":"6265:90:6","statements":[{"errorCall":{"arguments":[{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6315:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6321:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6334:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":674,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6290:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"RevertStatement","src":"6283:57:6"}]}},{"id":690,"nodeType":"UncheckedBlock","src":"6368:159:6","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6475:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":684,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6485:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6493:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6507:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"6475:37:6"}]}]},"id":692,"nodeType":"IfStatement","src":"5997:540:6","trueBody":{"id":664,"nodeType":"Block","src":"6021:148:6","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6137:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6153:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"6137:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6551:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:6","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":712,"nodeType":"Block","src":"6766:206:6","statements":[{"id":711,"nodeType":"UncheckedBlock","src":"6780:182:6","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":705,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6925:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":707,"indexExpression":{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6935:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6942:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"6925:22:6"}]}]},"id":713,"nodeType":"IfStatement","src":"6547:425:6","trueBody":{"id":704,"nodeType":"Block","src":"6569:191:6","statements":[{"id":703,"nodeType":"UncheckedBlock","src":"6583:167:6","statements":[{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":699,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6714:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6730:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"6714:21:6"}]}]}},{"eventCall":{"arguments":[{"id":715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6996:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7002:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7006:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6987:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"EmitStatement","src":"6982:30:6"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5603:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"from","nameLocation":"5937:4:6","nodeType":"VariableDeclaration","scope":721,"src":"5929:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"to","nameLocation":"5951:2:6","nodeType":"VariableDeclaration","scope":721,"src":"5943:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"5963:5:6","nodeType":"VariableDeclaration","scope":721,"src":"5955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"5987:0:6"},"scope":914,"src":"5912:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"7418:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7432:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:6","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"7428:91:6","trueBody":{"id":742,"nodeType":"Block","src":"7455:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:6","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7476:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"RevertStatement","src":"7469:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7548:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7557:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7528:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"7528:35:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"7025:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"7385:7:6","nodeType":"VariableDeclaration","scope":754,"src":"7377:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"7402:5:6","nodeType":"VariableDeclaration","scope":754,"src":"7394:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7418:0:6"},"scope":914,"src":"7362:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"7944:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"7958:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:6","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":776,"nodeType":"IfStatement","src":"7954:89:6","trueBody":{"id":775,"nodeType":"Block","src":"7981:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:6","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8002:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"RevertStatement","src":"7995:37:6"}]}},{"expression":{"arguments":[{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8060:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:6","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"8081:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8052:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"8052:35:6"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"7576:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:6","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"account","nameLocation":"7911:7:6","nodeType":"VariableDeclaration","scope":787,"src":"7903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"value","nameLocation":"7928:5:6","nodeType":"VariableDeclaration","scope":787,"src":"7920:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:6"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"7944:0:6"},"scope":914,"src":"7888:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"8704:54:6","statements":[{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8723:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8730:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8739:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"8714:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"8714:37:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"8100:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"8656:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8648:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"spender","nameLocation":"8671:7:6","nodeType":"VariableDeclaration","scope":805,"src":"8663:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"value","nameLocation":"8688:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8680:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"8704:0:6"},"scope":914,"src":"8630:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"9703:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9717:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:6","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"9713:89:6","trueBody":{"id":830,"nodeType":"Block","src":"9738:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:6","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9759:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"RevertStatement","src":"9752:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9815:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:6","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"9811:90:6","trueBody":{"id":845,"nodeType":"Block","src":"9838:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"9859:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"RevertStatement","src":"9852:38:6"}]}},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":847,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"9910:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":850,"indexExpression":{"id":848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9922:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":851,"indexExpression":{"id":849,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9929:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9940:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"9910:35:6"},{"condition":{"id":855,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"9959:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"9955:76:6","trueBody":{"id":862,"nodeType":"Block","src":"9970:61:6","statements":[{"eventCall":{"arguments":[{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9998:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10005:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10014:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9989:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"EmitStatement","src":"9984:36:6"}]}}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"8764:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:6","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"9631:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9623:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"9646:7:6","nodeType":"VariableDeclaration","scope":865,"src":"9638:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"9663:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9655:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:6","nodeType":"VariableDeclaration","scope":865,"src":"9670:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"9703:0:6"},"scope":914,"src":"9605:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"10408:387:6","statements":[{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:6","nodeType":"VariableDeclaration","scope":912,"src":"10418:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":878,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10455:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10462:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10445:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10484:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:6","memberName":"max","nodeType":"MemberAccess","src":"10503:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"10480:309:6","trueBody":{"id":910,"nodeType":"Block","src":"10522:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10540:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10559:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":899,"nodeType":"IfStatement","src":"10536:130:6","trueBody":{"id":898,"nodeType":"Block","src":"10566:100:6","statements":[{"errorCall":{"arguments":[{"id":893,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10618:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10627:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10645:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10591:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"RevertStatement","src":"10584:67:6"}]}},{"id":909,"nodeType":"UncheckedBlock","src":"10679:100:6","statements":[{"expression":{"arguments":[{"id":901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10716:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10723:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10732:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10751:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":900,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"10707:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"10707:57:6"}]}]}}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"10043:271:6","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"owner","nameLocation":"10352:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"spender","nameLocation":"10367:7:6","nodeType":"VariableDeclaration","scope":913,"src":"10359:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"value","nameLocation":"10384:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10376:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"10408:0:6"},"scope":914,"src":"10319:476:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":915,"src":"1106:9691:6","usedErrors":[274,279,284,293,298,303],"usedEvents":[926,935]}],"src":"105:10693:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":916,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"133:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":992,"linearizedBaseContracts":[992],"name":"IERC20","nameLocation":"215:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"228:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":926,"name":"Transfer","nameLocation":"397:8:7","nodeType":"EventDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:7","nodeType":"VariableDeclaration","scope":926,"src":"406:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:7","nodeType":"VariableDeclaration","scope":926,"src":"428:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:7","nodeType":"VariableDeclaration","scope":926,"src":"448:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:7"},"src":"391:72:7"},{"anonymous":false,"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"469:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":935,"name":"Approval","nameLocation":"628:8:7","nodeType":"EventDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:7","nodeType":"VariableDeclaration","scope":935,"src":"637:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":935,"src":"660:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:7","nodeType":"VariableDeclaration","scope":935,"src":"685:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:7"},"src":"622:78:7"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"706:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"796:2:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"822:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:7"},"scope":992,"src":"776:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"837:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:7","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"account","nameLocation":"940:7:7","nodeType":"VariableDeclaration","scope":949,"src":"932:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"972:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:7"},"scope":992,"src":"913:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"987:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:7","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"to","nameLocation":"1231:2:7","nodeType":"VariableDeclaration","scope":959,"src":"1223:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"1243:5:7","nodeType":"VariableDeclaration","scope":959,"src":"1235:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:7"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:7"},"scope":992,"src":"1205:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1280:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"owner","nameLocation":"1576:5:7","nodeType":"VariableDeclaration","scope":969,"src":"1568:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"spender","nameLocation":"1591:7:7","nodeType":"VariableDeclaration","scope":969,"src":"1583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"1623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:7"},"scope":992,"src":"1549:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"1638:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":979,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"spender","nameLocation":"2335:7:7","nodeType":"VariableDeclaration","scope":979,"src":"2327:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"value","nameLocation":"2352:5:7","nodeType":"VariableDeclaration","scope":979,"src":"2344:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:7"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"2377:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:7"},"scope":992,"src":"2310:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2389:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"from","nameLocation":"2721:4:7","nodeType":"VariableDeclaration","scope":991,"src":"2713:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"2735:2:7","nodeType":"VariableDeclaration","scope":991,"src":"2727:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"value","nameLocation":"2747:5:7","nodeType":"VariableDeclaration","scope":991,"src":"2739:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"2772:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:7"},"scope":992,"src":"2691:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":993,"src":"205:2575:7","usedErrors":[],"usedEvents":[926,935]}],"src":"106:2675:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[992],"IERC20Metadata":[1018]},"id":1019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1019,"sourceUnit":993,"src":"151:37:8","symbolAliases":[{"foreign":{"id":995,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"159:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":998,"name":"IERC20","nameLocations":["306:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"306:6:8"},"id":999,"nodeType":"InheritanceSpecifier","src":"306:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"190:87:8","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1018,"linearizedBaseContracts":[1018,992],"name":"IERC20Metadata","nameLocation":"288:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"319:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"391:2:8"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"417:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1002,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:8"},"scope":1018,"src":"378:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"438:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1011,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:8","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"514:2:8"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"540:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:8"},"scope":1018,"src":"499:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"561:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1017,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:8","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"648:2:8"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"674:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1014,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:8"},"scope":1018,"src":"631:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1019,"src":"278:405:8","usedErrors":[],"usedEvents":[926,935]}],"src":"125:559:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[992],"SafeERC20":[1482]},"id":1483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1020,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1483,"sourceUnit":993,"src":"141:37:9","symbolAliases":[{"foreign":{"id":1021,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"149:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1483,"sourceUnit":230,"src":"179:58:9","symbolAliases":[{"foreign":{"id":1023,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"239:458:9","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1482,"linearizedBaseContracts":[1482],"name":"SafeERC20","nameLocation":"706:9:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"722:65:9","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1030,"name":"SafeERC20FailedOperation","nameLocation":"798:24:9","nodeType":"ErrorDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"token","nameLocation":"831:5:9","nodeType":"VariableDeclaration","scope":1030,"src":"823:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:9"},"src":"792:46:9"},{"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"844:71:9","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1039,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:9","nodeType":"ErrorDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"spender","nameLocation":"967:7:9","nodeType":"VariableDeclaration","scope":1039,"src":"959:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:9","nodeType":"VariableDeclaration","scope":1039,"src":"976:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:9","nodeType":"VariableDeclaration","scope":1039,"src":"1002:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:9"},"src":"920:109:9"},{"body":{"id":1062,"nodeType":"Block","src":"1291:88:9","statements":[{"expression":{"arguments":[{"id":1051,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1321:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1054,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1343:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"1343:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1360:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"1364:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1052,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1050,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1301:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"1301:71:9"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1035:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:9","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"token","nameLocation":"1248:5:9","nodeType":"VariableDeclaration","scope":1063,"src":"1241:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1042,"nodeType":"UserDefinedTypeName","pathNode":{"id":1041,"name":"IERC20","nameLocations":["1241:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1241:6:9"},"referencedDeclaration":992,"src":"1241:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"1263:2:9","nodeType":"VariableDeclaration","scope":1063,"src":"1255:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"value","nameLocation":"1275:5:9","nodeType":"VariableDeclaration","scope":1063,"src":"1267:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:9"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"1291:0:9"},"scope":1482,"src":"1219:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"1708:98:9","statements":[{"expression":{"arguments":[{"id":1077,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"1738:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1080,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"1760:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"1760:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1082,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"1781:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"1787:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"1791:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1078,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1076,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1718:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"1718:81:9"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"1385:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:9","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"token","nameLocation":"1651:5:9","nodeType":"VariableDeclaration","scope":1090,"src":"1644:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1066,"nodeType":"UserDefinedTypeName","pathNode":{"id":1065,"name":"IERC20","nameLocations":["1644:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1644:6:9"},"referencedDeclaration":992,"src":"1644:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"from","nameLocation":"1666:4:9","nodeType":"VariableDeclaration","scope":1090,"src":"1658:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"1680:2:9","nodeType":"VariableDeclaration","scope":1090,"src":"1672:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"value","nameLocation":"1692:5:9","nodeType":"VariableDeclaration","scope":1090,"src":"1684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:9"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"1708:0:9"},"scope":1482,"src":"1618:188:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"2033:99:9","statements":[{"expression":{"arguments":[{"id":1104,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2074:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2096:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"2096:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1109,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2113:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2117:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1105,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1103,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2050:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1102,"id":1114,"nodeType":"Return","src":"2043:82:9"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"1812:126:9","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:9","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"token","nameLocation":"1975:5:9","nodeType":"VariableDeclaration","scope":1116,"src":"1968:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1093,"nodeType":"UserDefinedTypeName","pathNode":{"id":1092,"name":"IERC20","nameLocations":["1968:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1968:6:9"},"referencedDeclaration":992,"src":"1968:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"to","nameLocation":"1990:2:9","nodeType":"VariableDeclaration","scope":1116,"src":"1982:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"value","nameLocation":"2002:5:9","nodeType":"VariableDeclaration","scope":1116,"src":"1994:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:9"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"2027:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1100,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:9"},"scope":1482,"src":"1943:189:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1144,"nodeType":"Block","src":"2381:109:9","statements":[{"expression":{"arguments":[{"id":1132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2422:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2444:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"2444:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2465:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2471:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2475:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1131,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2398:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1130,"id":1143,"nodeType":"Return","src":"2391:92:9"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"2138:130:9","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:9","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"token","nameLocation":"2309:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"2302:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1119,"nodeType":"UserDefinedTypeName","pathNode":{"id":1118,"name":"IERC20","nameLocations":["2302:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2302:6:9"},"referencedDeclaration":992,"src":"2302:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"from","nameLocation":"2324:4:9","nodeType":"VariableDeclaration","scope":1145,"src":"2316:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"to","nameLocation":"2338:2:9","nodeType":"VariableDeclaration","scope":1145,"src":"2330:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1145,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:9"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1128,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1482,"src":"2273:217:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"3232:139:9","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:9","nodeType":"VariableDeclaration","scope":1175,"src":"3242:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"arguments":[{"arguments":[{"id":1162,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1482","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1482","typeString":"library SafeERC20"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:9","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3296:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1158,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3265:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"3265:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:9"},{"expression":{"arguments":[{"id":1168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3327:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1169,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3334:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3343:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3358:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1167,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3314:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"3314:50:9"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"2496:645:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:9","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"token","nameLocation":"3184:5:9","nodeType":"VariableDeclaration","scope":1176,"src":"3177:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"IERC20","nameLocations":["3177:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"3177:6:9"},"referencedDeclaration":992,"src":"3177:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"spender","nameLocation":"3199:7:9","nodeType":"VariableDeclaration","scope":1176,"src":"3191:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"value","nameLocation":"3216:5:9","nodeType":"VariableDeclaration","scope":1176,"src":"3208:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:9"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"3232:0:9"},"scope":1482,"src":"3146:225:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1218,"nodeType":"Block","src":"4137:370:9","statements":[{"id":1217,"nodeType":"UncheckedBlock","src":"4147:354:9","statements":[{"assignments":[1188],"declarations":[{"constant":false,"id":1188,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:9","nodeType":"VariableDeclaration","scope":1217,"src":"4171:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"arguments":[{"id":1193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1482","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1482","typeString":"library SafeERC20"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:9","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4229:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1189,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4198:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4198:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4255:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1199,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4274:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"IfStatement","src":"4251:160:9","trueBody":{"id":1207,"nodeType":"Block","src":"4293:118:9","statements":[{"errorCall":{"arguments":[{"id":1202,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4351:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4360:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1204,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4378:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1201,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4318:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"RevertStatement","src":"4311:85:9"}]}},{"expression":{"arguments":[{"id":1210,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4437:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4444:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4453:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1213,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4472:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"4424:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"4424:66:9"}]}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"3377:657:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:9","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"token","nameLocation":"4077:5:9","nodeType":"VariableDeclaration","scope":1219,"src":"4070:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1179,"nodeType":"UserDefinedTypeName","pathNode":{"id":1178,"name":"IERC20","nameLocations":["4070:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"4070:6:9"},"referencedDeclaration":992,"src":"4070:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"spender","nameLocation":"4092:7:9","nodeType":"VariableDeclaration","scope":1219,"src":"4084:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:9","nodeType":"VariableDeclaration","scope":1219,"src":"4101:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:9"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"4137:0:9"},"scope":1482,"src":"4039:468:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"5161:303:9","statements":[{"assignments":[1231],"declarations":[{"constant":false,"id":1231,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:9","nodeType":"VariableDeclaration","scope":1265,"src":"5171:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1230,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1240,"initialValue":{"arguments":[{"expression":{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5214:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"5214:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1236,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5239:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1232,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:9"},{"condition":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:9","subExpression":{"arguments":[{"id":1242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5286:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1243,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5293:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1241,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5262:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"5257:201:9","trueBody":{"id":1263,"nodeType":"Block","src":"5308:150:9","statements":[{"expression":{"arguments":[{"id":1247,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5342:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1250,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5364:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"5364:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1252,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"5380:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1248,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1246,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"5322:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"5322:71:9"},{"expression":{"arguments":[{"id":1259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"5427:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1260,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5434:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1258,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"5407:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"5407:40:9"}]}}]},"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"4513:566:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:9","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"token","nameLocation":"5113:5:9","nodeType":"VariableDeclaration","scope":1266,"src":"5106:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1222,"nodeType":"UserDefinedTypeName","pathNode":{"id":1221,"name":"IERC20","nameLocations":["5106:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"5106:6:9"},"referencedDeclaration":992,"src":"5106:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"spender","nameLocation":"5128:7:9","nodeType":"VariableDeclaration","scope":1266,"src":"5120:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"value","nameLocation":"5145:5:9","nodeType":"VariableDeclaration","scope":1266,"src":"5137:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:9"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"5161:0:9"},"scope":1482,"src":"5084:380:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1308,"nodeType":"Block","src":"5911:219:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5925:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:9","memberName":"code","nodeType":"MemberAccess","src":"5925:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:9","memberName":"length","nodeType":"MemberAccess","src":"5925:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:9","subExpression":{"arguments":[{"id":1293,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6034:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6038:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1295,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6045:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1291,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6012:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:9","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"6007:117:9","trueBody":{"id":1305,"nodeType":"Block","src":"6052:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1301,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6106:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:9","typeDescriptions":{}}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1298,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6073:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"RevertStatement","src":"6066:47:9"}]}},"id":1307,"nodeType":"IfStatement","src":"5921:203:9","trueBody":{"id":1290,"nodeType":"Block","src":"5946:55:9","statements":[{"expression":{"arguments":[{"id":1285,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"5973:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5980:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5984:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5960:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"5960:30:9"}]}}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"5470:333:9","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:9","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"token","nameLocation":"5849:5:9","nodeType":"VariableDeclaration","scope":1309,"src":"5840:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1269,"nodeType":"UserDefinedTypeName","pathNode":{"id":1268,"name":"IERC1363","nameLocations":["5840:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:9"},"referencedDeclaration":229,"src":"5840:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"to","nameLocation":"5864:2:9","nodeType":"VariableDeclaration","scope":1309,"src":"5856:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"value","nameLocation":"5876:5:9","nodeType":"VariableDeclaration","scope":1309,"src":"5868:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"data","nameLocation":"5896:4:9","nodeType":"VariableDeclaration","scope":1309,"src":"5883:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1275,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:9"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"5911:0:9"},"scope":1482,"src":"5808:322:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"6649:239:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"6663:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:9","memberName":"code","nodeType":"MemberAccess","src":"6663:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:9","memberName":"length","nodeType":"MemberAccess","src":"6663:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:9","subExpression":{"arguments":[{"id":1339,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6786:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"6792:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6803:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1337,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6760:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:9","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1353,"nodeType":"IfStatement","src":"6755:127:9","trueBody":{"id":1352,"nodeType":"Block","src":"6810:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6864:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:9","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1345,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6831:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"RevertStatement","src":"6824:47:9"}]}},"id":1354,"nodeType":"IfStatement","src":"6659:223:9","trueBody":{"id":1336,"nodeType":"Block","src":"6684:65:9","statements":[{"expression":{"arguments":[{"id":1330,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6715:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1331,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6722:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"6728:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6732:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1329,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6698:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"ExpressionStatement","src":"6698:40:9"}]}}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"6136:341:9","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:9","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"token","nameLocation":"6536:5:9","nodeType":"VariableDeclaration","scope":1356,"src":"6527:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"IERC1363","nameLocations":["6527:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:9"},"referencedDeclaration":229,"src":"6527:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"from","nameLocation":"6559:4:9","nodeType":"VariableDeclaration","scope":1356,"src":"6551:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"to","nameLocation":"6581:2:9","nodeType":"VariableDeclaration","scope":1356,"src":"6573:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"value","nameLocation":"6601:5:9","nodeType":"VariableDeclaration","scope":1356,"src":"6593:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"data","nameLocation":"6629:4:9","nodeType":"VariableDeclaration","scope":1356,"src":"6616:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:9"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"6649:0:9"},"scope":1482,"src":"6482:406:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"7655:218:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7669:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:9","memberName":"code","nodeType":"MemberAccess","src":"7669:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:9","memberName":"length","nodeType":"MemberAccess","src":"7669:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:9","subExpression":{"arguments":[{"id":1383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7777:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7781:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1385,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"7788:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7756:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:9","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"7751:116:9","trueBody":{"id":1395,"nodeType":"Block","src":"7795:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1391,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7849:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:9","typeDescriptions":{}}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1388,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"7816:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"RevertStatement","src":"7809:47:9"}]}},"id":1397,"nodeType":"IfStatement","src":"7665:202:9","trueBody":{"id":1380,"nodeType":"Block","src":"7690:55:9","statements":[{"expression":{"arguments":[{"id":1375,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7717:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7724:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7704:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"7704:30:9"}]}}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"6894:654:9","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"token","nameLocation":"7593:5:9","nodeType":"VariableDeclaration","scope":1399,"src":"7584:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1359,"nodeType":"UserDefinedTypeName","pathNode":{"id":1358,"name":"IERC1363","nameLocations":["7584:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:9"},"referencedDeclaration":229,"src":"7584:8:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"to","nameLocation":"7608:2:9","nodeType":"VariableDeclaration","scope":1399,"src":"7600:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"value","nameLocation":"7620:5:9","nodeType":"VariableDeclaration","scope":1399,"src":"7612:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"data","nameLocation":"7640:4:9","nodeType":"VariableDeclaration","scope":1399,"src":"7627:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1365,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:9"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[],"src":"7655:0:9"},"scope":1482,"src":"7553:320:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1439,"nodeType":"Block","src":"8440:650:9","statements":[{"assignments":[1409],"declarations":[{"constant":false,"id":1409,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:9","nodeType":"VariableDeclaration","scope":1439,"src":"8450:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1410,"nodeType":"VariableDeclarationStatement","src":"8450:18:9"},{"assignments":[1412],"declarations":[{"constant":false,"id":1412,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:9","nodeType":"VariableDeclaration","scope":1439,"src":"8478:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1413,"nodeType":"VariableDeclarationStatement","src":"8478:19:9"},{"AST":{"nodeType":"YulBlock","src":"8532:396:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:9","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:9"},"nodeType":"YulFunctionCall","src":"8566:5:9"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:9","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:9"},"nodeType":"YulFunctionCall","src":"8583:15:9"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:9"},"nodeType":"YulFunctionCall","src":"8600:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:9","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:9"},"nodeType":"YulFunctionCall","src":"8561:60:9"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:9","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:9"},"nodeType":"YulFunctionCall","src":"8711:11:9"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:9","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:9","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:9"},"nodeType":"YulFunctionCall","src":"8762:16:9"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:9"},"nodeType":"YulFunctionCall","src":"8739:40:9"},"nodeType":"YulExpressionStatement","src":"8739:40:9"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:9"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:9"},"nodeType":"YulFunctionCall","src":"8808:16:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:9"},"nodeType":"YulFunctionCall","src":"8796:29:9"},"nodeType":"YulExpressionStatement","src":"8796:29:9"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:9"},"nodeType":"YulFunctionCall","src":"8666:15:9"},"nodeType":"YulIf","src":"8663:176:9"},{"nodeType":"YulAssignment","src":"8852:30:9","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:9"},"nodeType":"YulFunctionCall","src":"8866:16:9"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:9"}]},{"nodeType":"YulAssignment","src":"8895:23:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:9","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:9"},"nodeType":"YulFunctionCall","src":"8910:8:9"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1405,"isOffset":false,"isSlot":false,"src":"8587:4:9","valueSize":1},{"declaration":1405,"isOffset":false,"isSlot":false,"src":"8606:4:9","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"8852:10:9","valueSize":1},{"declaration":1412,"isOffset":false,"isSlot":false,"src":"8895:11:9","valueSize":1},{"declaration":1403,"isOffset":false,"isSlot":false,"src":"8573:5:9","valueSize":1}],"flags":["memory-safe"],"id":1414,"nodeType":"InlineAssembly","src":"8507:421:9"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"8942:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"8994:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:9","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1420,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"8968:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:9","typeDescriptions":{}}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:9","memberName":"code","nodeType":"MemberAccess","src":"8960:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:9","memberName":"length","nodeType":"MemberAccess","src":"8960:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1438,"nodeType":"IfStatement","src":"8938:146:9","trueBody":{"id":1437,"nodeType":"Block","src":"9012:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"9066:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:9","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"9033:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"RevertStatement","src":"9026:47:9"}]}}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"7879:486:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1440,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:9","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"token","nameLocation":"8406:5:9","nodeType":"VariableDeclaration","scope":1440,"src":"8399:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1402,"nodeType":"UserDefinedTypeName","pathNode":{"id":1401,"name":"IERC20","nameLocations":["8399:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"8399:6:9"},"referencedDeclaration":992,"src":"8399:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"data","nameLocation":"8426:4:9","nodeType":"VariableDeclaration","scope":1440,"src":"8413:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:9"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"8440:0:9"},"scope":1482,"src":"8370:720:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1480,"nodeType":"Block","src":"9681:391:9","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"success","nameLocation":"9696:7:9","nodeType":"VariableDeclaration","scope":1480,"src":"9691:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1451,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1453,"nodeType":"VariableDeclarationStatement","src":"9691:12:9"},{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:9","nodeType":"VariableDeclaration","scope":1480,"src":"9713:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1456,"nodeType":"VariableDeclarationStatement","src":"9713:18:9"},{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:9","nodeType":"VariableDeclaration","scope":1480,"src":"9741:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1459,"nodeType":"VariableDeclarationStatement","src":"9741:19:9"},{"AST":{"nodeType":"YulBlock","src":"9795:174:9","statements":[{"nodeType":"YulAssignment","src":"9809:71:9","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:9"},"nodeType":"YulFunctionCall","src":"9825:5:9"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:9","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:9"},"nodeType":"YulFunctionCall","src":"9842:15:9"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:9"},"nodeType":"YulFunctionCall","src":"9859:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:9","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:9"},"nodeType":"YulFunctionCall","src":"9820:60:9"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:9"}]},{"nodeType":"YulAssignment","src":"9893:30:9","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:9"},"nodeType":"YulFunctionCall","src":"9907:16:9"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:9"}]},{"nodeType":"YulAssignment","src":"9936:23:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:9","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:9"},"nodeType":"YulFunctionCall","src":"9951:8:9"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1446,"isOffset":false,"isSlot":false,"src":"9846:4:9","valueSize":1},{"declaration":1446,"isOffset":false,"isSlot":false,"src":"9865:4:9","valueSize":1},{"declaration":1455,"isOffset":false,"isSlot":false,"src":"9893:10:9","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"9936:11:9","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"9809:7:9","valueSize":1},{"declaration":1444,"isOffset":false,"isSlot":false,"src":"9832:5:9","valueSize":1}],"flags":["memory-safe"],"id":1460,"nodeType":"InlineAssembly","src":"9770:199:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9985:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"9997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"10048:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:9","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"10023:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:9","typeDescriptions":{}}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:9","memberName":"code","nodeType":"MemberAccess","src":"10015:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:9","memberName":"length","nodeType":"MemberAccess","src":"10015:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1450,"id":1479,"nodeType":"Return","src":"9978:87:9"}]},"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"9096:491:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:9","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"token","nameLocation":"9632:5:9","nodeType":"VariableDeclaration","scope":1481,"src":"9625:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1443,"nodeType":"UserDefinedTypeName","pathNode":{"id":1442,"name":"IERC20","nameLocations":["9625:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"9625:6:9"},"referencedDeclaration":992,"src":"9625:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"data","nameLocation":"9652:4:9","nodeType":"VariableDeclaration","scope":1481,"src":"9639:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1445,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:9"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"9675:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1448,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:9"},"scope":1482,"src":"9592:480:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1483,"src":"698:9376:9","usedErrors":[1030,1039],"usedEvents":[]}],"src":"115:9960:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1512]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1512,"linearizedBaseContracts":[1512],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1493,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1489,"id":1492,"nodeType":"Return","src":"728:17:10"}]},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1512,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1498,"id":1501,"nodeType":"Return","src":"835:15:10"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1496,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1512,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1507,"id":1509,"nodeType":"Return","src":"945:8:10"}]},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1512,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1513,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1564]},"id":1565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"125:489:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1564,"linearizedBaseContracts":[1564],"name":"Panic","nameLocation":"665:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"677:36:11","text":"@dev generic / unspecified error"},"id":1519,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:11","nodeType":"VariableDeclaration","scope":1564,"src":"718:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"764:37:11","text":"@dev used by the assert() builtin"},"id":1523,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:11","nodeType":"VariableDeclaration","scope":1564,"src":"806:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"851:41:11","text":"@dev arithmetic underflow or overflow"},"id":1527,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:11","nodeType":"VariableDeclaration","scope":1564,"src":"897:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"950:35:11","text":"@dev division or modulo by zero"},"id":1531,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:11","nodeType":"VariableDeclaration","scope":1564,"src":"990:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1045:30:11","text":"@dev enum conversion error"},"id":1535,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:11","nodeType":"VariableDeclaration","scope":1564,"src":"1080:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1140:36:11","text":"@dev invalid encoding in storage"},"id":1539,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:11","nodeType":"VariableDeclaration","scope":1564,"src":"1181:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"1242:24:11","text":"@dev empty array pop"},"id":1543,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:11","nodeType":"VariableDeclaration","scope":1564,"src":"1271:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"1325:35:11","text":"@dev array out of bounds access"},"id":1547,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:11","nodeType":"VariableDeclaration","scope":1564,"src":"1365:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"1423:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":1551,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:11","nodeType":"VariableDeclaration","scope":1564,"src":"1493:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"1546:42:11","text":"@dev calling invalid internal function"},"id":1555,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:11","nodeType":"VariableDeclaration","scope":1564,"src":"1593:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1562,"nodeType":"Block","src":"1819:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:11"},"nodeType":"YulFunctionCall","src":"1868:24:11"},"nodeType":"YulExpressionStatement","src":"1868:24:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:11","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:11"},"nodeType":"YulFunctionCall","src":"1905:18:11"},"nodeType":"YulExpressionStatement","src":"1905:18:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:11","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:11"},"nodeType":"YulFunctionCall","src":"1936:18:11"},"nodeType":"YulExpressionStatement","src":"1936:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1558,"isOffset":false,"isSlot":false,"src":"1918:4:11","valueSize":1}],"flags":["memory-safe"],"id":1561,"nodeType":"InlineAssembly","src":"1829:135:11"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1658:113:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:11","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"code","nameLocation":"1799:4:11","nodeType":"VariableDeclaration","scope":1563,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:11"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[],"src":"1819:0:11"},"scope":1564,"src":"1776:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1565,"src":"657:1315:11","usedErrors":[],"usedEvents":[]}],"src":"99:1874:11"},"id":11},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1512],"Pausable":[1672]},"id":1673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1566,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":1513,"src":"128:45:12","symbolAliases":[{"foreign":{"id":1567,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"136:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1570,"name":"Context","nameLocations":["645:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"645:7:12"},"id":1571,"nodeType":"InheritanceSpecifier","src":"645:7:12"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"175:439:12","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1672,"linearizedBaseContracts":[1672,1512],"name":"Pausable","nameLocation":"633:8:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1573,"mutability":"mutable","name":"_paused","nameLocation":"672:7:12","nodeType":"VariableDeclaration","scope":1672,"src":"659:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1572,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"686:73:12","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1578,"name":"Paused","nameLocation":"770:6:12","nodeType":"EventDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:12","nodeType":"VariableDeclaration","scope":1578,"src":"777:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:12"},"src":"764:30:12"},{"anonymous":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"800:70:12","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1583,"name":"Unpaused","nameLocation":"881:8:12","nodeType":"EventDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:12","nodeType":"VariableDeclaration","scope":1583,"src":"890:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:12"},"src":"875:32:12"},{"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"913:76:12","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1586,"name":"EnforcedPause","nameLocation":"1000:13:12","nodeType":"ErrorDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"1013:2:12"},"src":"994:22:12"},{"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"1022:80:12","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1589,"name":"ExpectedPause","nameLocation":"1113:13:12","nodeType":"ErrorDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[],"src":"1126:2:12"},"src":"1107:22:12"},{"body":{"id":1596,"nodeType":"Block","src":"1340:47:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1350:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"1350:19:12"},{"id":1595,"nodeType":"PlaceholderStatement","src":"1379:1:12"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"1135:175:12","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1597,"name":"whenNotPaused","nameLocation":"1324:13:12","nodeType":"ModifierDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"1337:2:12"},"src":"1315:72:12","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"1587:44:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1600,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1597:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"ExpressionStatement","src":"1597:16:12"},{"id":1603,"nodeType":"PlaceholderStatement","src":"1623:1:12"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"1393:167:12","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1605,"name":"whenPaused","nameLocation":"1574:10:12","nodeType":"ModifierDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"1584:2:12"},"src":"1565:66:12","virtual":false,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"1779:31:12","statements":[{"expression":{"id":1611,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"1796:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1610,"id":1612,"nodeType":"Return","src":"1789:14:12"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"1637:84:12","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:12","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"1741:2:12"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"1773:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1608,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:12"},"scope":1672,"src":"1726:84:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1625,"nodeType":"Block","src":"1929:77:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1618,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1943:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1624,"nodeType":"IfStatement","src":"1939:61:12","trueBody":{"id":1623,"nodeType":"Block","src":"1953:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1620,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"1974:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1622,"nodeType":"RevertStatement","src":"1967:22:12"}]}}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1816:57:12","text":" @dev Throws if the contract is paused."},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:12","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1904:2:12"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"1929:0:12"},"scope":1672,"src":"1878:128:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1638,"nodeType":"Block","src":"2126:78:12","statements":[{"condition":{"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:12","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1630,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2141:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1637,"nodeType":"IfStatement","src":"2136:62:12","trueBody":{"id":1636,"nodeType":"Block","src":"2151:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1633,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2172:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"RevertStatement","src":"2165:22:12"}]}}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"2012:61:12","text":" @dev Throws if the contract is not paused."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:12","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"2101:2:12"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"2126:0:12"},"scope":1672,"src":"2078:126:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1654,"nodeType":"Block","src":"2388:66:12","statements":[{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2398:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"ExpressionStatement","src":"2398:14:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1650,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2434:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1649,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2427:6:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"EmitStatement","src":"2422:25:12"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"2210:124:12","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1655,"implemented":true,"kind":"function","modifiers":[{"id":1643,"kind":"modifierInvocation","modifierName":{"id":1642,"name":"whenNotPaused","nameLocations":["2374:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"2374:13:12"},"nodeType":"ModifierInvocation","src":"2374:13:12"}],"name":"_pause","nameLocation":"2348:6:12","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"2354:2:12"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"2388:0:12"},"scope":1672,"src":"2339:115:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"2634:69:12","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"nodeType":"ExpressionStatement","src":"2644:15:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1666,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2683:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2674:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"EmitStatement","src":"2669:27:12"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2460:121:12","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1671,"implemented":true,"kind":"function","modifiers":[{"id":1659,"kind":"modifierInvocation","modifierName":{"id":1658,"name":"whenPaused","nameLocations":["2623:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"2623:10:12"},"nodeType":"ModifierInvocation","src":"2623:10:12"}],"name":"_unpause","nameLocation":"2595:8:12","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[],"src":"2634:0:12"},"scope":1672,"src":"2586:117:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1673,"src":"615:2090:12","usedErrors":[1586,1589],"usedEvents":[1578,1583]}],"src":"102:2604:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1741]},"id":1742,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"135:894:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1741,"linearizedBaseContracts":[1741],"name":"ReentrancyGuard","nameLocation":"1048:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1678,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:13","nodeType":"VariableDeclaration","scope":1741,"src":"1818:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1681,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:13","nodeType":"VariableDeclaration","scope":1741,"src":"1864:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1683,"mutability":"mutable","name":"_status","nameLocation":"1923:7:13","nodeType":"VariableDeclaration","scope":1741,"src":"1907:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1937:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1686,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:13","nodeType":"ErrorDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"src":"1994:37:13"},{"body":{"id":1693,"nodeType":"Block","src":"2051:38:13","statements":[{"expression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1689,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1690,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2071:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1692,"nodeType":"ExpressionStatement","src":"2061:21:13"}]},"id":1694,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"2048:2:13"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"2051:0:13"},"scope":1741,"src":"2037:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"2490:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1697,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2500:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"2500:21:13"},{"id":1700,"nodeType":"PlaceholderStatement","src":"2531:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1701,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2542:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1703,"nodeType":"ExpressionStatement","src":"2542:20:13"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"2095:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1705,"name":"nonReentrant","nameLocation":"2475:12:13","nodeType":"ModifierDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"2487:2:13"},"src":"2466:103:13","virtual":false,"visibility":"internal"},{"body":{"id":1720,"nodeType":"Block","src":"2614:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1708,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1709,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1715,"nodeType":"IfStatement","src":"2698:86:13","trueBody":{"id":1714,"nodeType":"Block","src":"2722:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1711,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2743:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"RevertStatement","src":"2736:37:13"}]}},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1716,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1717,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"2858:17:13"}]},"id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:13","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"2603:2:13"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"2614:0:13"},"scope":1741,"src":"2575:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1728,"nodeType":"Block","src":"2926:170:13","statements":[{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1725,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3078:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1727,"nodeType":"ExpressionStatement","src":"3068:21:13"}]},"id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:13","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"2915:2:13"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"2926:0:13"},"scope":1741,"src":"2888:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1739,"nodeType":"Block","src":"3339:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1736,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1734,"id":1738,"nodeType":"Return","src":"3349:25:13"}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"3102:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"3307:2:13"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"3333:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1732,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:13"},"scope":1741,"src":"3275:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1742,"src":"1030:2353:13","usedErrors":[1686],"usedEvents":[]}],"src":"109:3275:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1747],"ShortStrings":[1958],"StorageSlot":[2082]},"id":1959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1743,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1745,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1959,"sourceUnit":2083,"src":"132:46:14","symbolAliases":[{"foreign":{"id":1744,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1747,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":1746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1958,"linearizedBaseContracts":[1958],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1751,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":1958,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1755,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":1755,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1752,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":1757,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":1800,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":1800,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1766,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1772,"initialValue":{"arguments":[{"id":1770,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1773,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1782,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":1781,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":1778,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1777,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1780,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1791,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1794,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1783,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"type(ShortString)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"functionReturnParameters":1765,"id":1799,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":1801,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1759,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1763,"nodeType":"UserDefinedTypeName","pathNode":{"id":1762,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"1773:11:14"},"referencedDeclaration":1747,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":1958,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"2152:304:14","statements":[{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":1826,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1815,"initialValue":{"arguments":[{"id":1813,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"id":1812,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":1826,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1816,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1822,"initialValue":{"arguments":[{"hexValue":"3332","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nodeType":"YulBlock","src":"2349:81:14","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:14"},"nodeType":"YulFunctionCall","src":"2363:16:14"},"nodeType":"YulExpressionStatement","src":"2363:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:14"},"nodeType":"YulFunctionCall","src":"2399:14:14"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:14"},"nodeType":"YulFunctionCall","src":"2392:28:14"},"nodeType":"YulExpressionStatement","src":"2392:28:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1811,"isOffset":false,"isSlot":false,"src":"2375:3:14","valueSize":1},{"declaration":1805,"isOffset":false,"isSlot":false,"src":"2415:4:14","valueSize":1},{"declaration":1817,"isOffset":false,"isSlot":false,"src":"2370:3:14","valueSize":1},{"declaration":1817,"isOffset":false,"isSlot":false,"src":"2403:3:14","valueSize":1}],"flags":["memory-safe"],"id":1823,"nodeType":"InlineAssembly","src":"2324:106:14"},{"expression":{"id":1824,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2446:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1809,"id":1825,"nodeType":"Return","src":"2439:10:14"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":1827,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"2096:11:14"},"referencedDeclaration":1747,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1807,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":1958,"src":"2078:378:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"2598:175:14","statements":[{"assignments":[1837],"declarations":[{"constant":false,"id":1837,"mutability":"mutable","name":"result","nameLocation":"2616:6:14","nodeType":"VariableDeclaration","scope":1858,"src":"2608:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1847,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1842,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2652:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"expression":{"id":1840,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2633:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"type(ShortString)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:14","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"2675:69:14","trueBody":{"id":1854,"nodeType":"Block","src":"2692:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1851,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2713:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"RevertStatement","src":"2706:27:14"}]}},{"expression":{"id":1856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1835,"id":1857,"nodeType":"Return","src":"2753:13:14"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"2462:61:14","text":" @dev Return the length of a `ShortString`."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:14","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:14","nodeType":"VariableDeclaration","scope":1859,"src":"2548:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1830,"nodeType":"UserDefinedTypeName","pathNode":{"id":1829,"name":"ShortString","nameLocations":["2548:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"2548:11:14"},"referencedDeclaration":1747,"src":"2548:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:14"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"2589:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:14"},"scope":1958,"src":"2528:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"2996:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3016:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1870,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:14","typeDescriptions":{}}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:14","memberName":"length","nodeType":"MemberAccess","src":"3010:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1896,"nodeType":"Block","src":"3094:127:14","statements":[{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1885,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3134:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1882,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"3108:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2082_$","typeString":"type(library StorageSlot)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"3108:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1979_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1979_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1978,"src":"3108:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3149:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1890,"nodeType":"ExpressionStatement","src":"3108:46:14"},{"expression":{"arguments":[{"id":1893,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3192:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1891,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"3175:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"type(ShortString)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"functionReturnParameters":1869,"id":1895,"nodeType":"Return","src":"3168:42:14"}]},"id":1897,"nodeType":"IfStatement","src":"3006:215:14","trueBody":{"id":1881,"nodeType":"Block","src":"3036:52:14","statements":[{"expression":{"arguments":[{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3071:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1877,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3057:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"functionReturnParameters":1869,"id":1880,"nodeType":"Return","src":"3050:27:14"}]}}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"2779:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:14","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"value","nameLocation":"2936:5:14","nodeType":"VariableDeclaration","scope":1899,"src":"2922:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1861,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"store","nameLocation":"2958:5:14","nodeType":"VariableDeclaration","scope":1899,"src":"2943:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1863,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:14"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"2983:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1867,"nodeType":"UserDefinedTypeName","pathNode":{"id":1866,"name":"ShortString","nameLocations":["2983:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"2983:11:14"},"referencedDeclaration":1747,"src":"2983:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:14"},"scope":1958,"src":"2887:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1925,"nodeType":"Block","src":"3477:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3510:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"expression":{"id":1910,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"3491:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"type(ShortString)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1914,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3520:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1923,"nodeType":"Block","src":"3592:37:14","statements":[{"expression":{"id":1921,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3613:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1909,"id":1922,"nodeType":"Return","src":"3606:12:14"}]},"id":1924,"nodeType":"IfStatement","src":"3487:142:14","trueBody":{"id":1920,"nodeType":"Block","src":"3539:47:14","statements":[{"expression":{"arguments":[{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3569:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"id":1916,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"3560:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1909,"id":1919,"nodeType":"Return","src":"3553:22:14"}]}}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"3233:130:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:14","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"value","nameLocation":"3410:5:14","nodeType":"VariableDeclaration","scope":1926,"src":"3398:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"ShortString","nameLocations":["3398:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"3398:11:14"},"referencedDeclaration":1747,"src":"3398:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"store","nameLocation":"3432:5:14","nodeType":"VariableDeclaration","scope":1926,"src":"3417:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1904,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:14"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1926,"src":"3462:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:14"},"scope":1958,"src":"3368:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"4125:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"4158:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"expression":{"id":1937,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4139:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"type(ShortString)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1941,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4168:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1954,"nodeType":"Block","src":"4242:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":1950,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4269:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:14","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:14","memberName":"length","nodeType":"MemberAccess","src":"4263:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":1953,"nodeType":"Return","src":"4256:26:14"}]},"id":1955,"nodeType":"IfStatement","src":"4135:158:14","trueBody":{"id":1947,"nodeType":"Block","src":"4187:49:14","statements":[{"expression":{"arguments":[{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"4219:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}],"id":1943,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4208:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1747_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1936,"id":1946,"nodeType":"Return","src":"4201:24:14"}]}}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"3641:374:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:14","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"value","nameLocation":"4064:5:14","nodeType":"VariableDeclaration","scope":1957,"src":"4052:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":1929,"nodeType":"UserDefinedTypeName","pathNode":{"id":1928,"name":"ShortString","nameLocations":["4052:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"4052:11:14"},"referencedDeclaration":1747,"src":"4052:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"store","nameLocation":"4086:5:14","nodeType":"VariableDeclaration","scope":1957,"src":"4071:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:14"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"4116:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:14"},"scope":1958,"src":"4020:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1959,"src":"1255:3046:14","usedErrors":[1755,1757],"usedEvents":[]}],"src":"106:4196:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2082]},"id":2083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1960,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2082,"linearizedBaseContracts":[2082],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1964,"members":[{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":1964,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2082,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1967,"members":[{"constant":false,"id":1966,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":1967,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":2082,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1970,"members":[{"constant":false,"id":1969,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":1970,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":2082,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1973,"members":[{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":1973,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":2082,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1976,"members":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":1976,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1974,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":2082,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1979,"members":[{"constant":false,"id":1978,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":1979,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1977,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":2082,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1982,"members":[{"constant":false,"id":1981,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":1982,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1980,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":2082,"src":"1756:45:15","visibility":"public"},{"body":{"id":1992,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:15","statements":[{"nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1989,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":1985,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":1991,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":1993,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":1993,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1964_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1964,"src":"1960:11:15"},"referencedDeclaration":1964,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1964_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":2082,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:15","statements":[{"nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2000,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":2002,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":2004,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":2004,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1967_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1999,"nodeType":"UserDefinedTypeName","pathNode":{"id":1998,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1967,"src":"2220:11:15"},"referencedDeclaration":1967,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1967_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":2082,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:15","statements":[{"nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2011,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":2007,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":2013,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":2015,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":2015,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1970_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2010,"nodeType":"UserDefinedTypeName","pathNode":{"id":2009,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"2480:11:15"},"referencedDeclaration":1970,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1970_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":2082,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:15","statements":[{"nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2022,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":2018,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":2024,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":2026,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":2026,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1973_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1973,"src":"2740:11:15"},"referencedDeclaration":1973,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1973_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":2082,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:15","statements":[{"nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2033,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":2029,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":2035,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":2037,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":2037,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1976_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2032,"nodeType":"UserDefinedTypeName","pathNode":{"id":2031,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1976,"src":"2998:10:15"},"referencedDeclaration":1976,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1976_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":2082,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:15","statements":[{"nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2044,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":2040,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":2046,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":2048,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":2048,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1979_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2043,"nodeType":"UserDefinedTypeName","pathNode":{"id":2042,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1979,"src":"3255:10:15"},"referencedDeclaration":1979,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1979_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":2082,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:15","statements":[{"nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2055,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":2051,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2057,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":2059,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2050,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":2059,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1979_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1979,"src":"3536:10:15"},"referencedDeclaration":1979,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1979_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":2082,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:15","statements":[{"nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2066,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":2068,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":2070,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":2070,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1982_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"3797:9:15"},"referencedDeclaration":1982,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1982_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":2082,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:15","statements":[{"nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2077,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":2073,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2079,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":2081,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2072,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":2081,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1982_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"4073:9:15"},"referencedDeclaration":1982,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1982_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":2082,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2083,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5778],"SafeCast":[7543],"SignedMath":[7687],"Strings":[3484]},"id":3485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2084,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3485,"sourceUnit":5779,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2085,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3485,"sourceUnit":7544,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2087,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3485,"sourceUnit":7688,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2089,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3484,"linearizedBaseContracts":[3484],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2093,"libraryName":{"id":2092,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7543,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2096,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3484,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2094,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2099,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3484,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2097,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2135,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":3484,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2142,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":2142,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":2142,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2145,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2148,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":2195,"nodeType":"Block","src":"1379:563:16","statements":[{"id":2194,"nodeType":"UncheckedBlock","src":"1389:547:16","statements":[{"assignments":[2157],"declarations":[{"constant":false,"id":2157,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":2194,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2164,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2158,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5778_$","typeString":"type(library Math)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5610,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[2166],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":2194,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2171,"initialValue":{"arguments":[{"id":2169,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2167,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":2194,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2174,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nodeType":"YulBlock","src":"1570:69:16","statements":[{"nodeType":"YulAssignment","src":"1588:37:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:16"},"nodeType":"YulFunctionCall","src":"1599:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:30:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2166,"isOffset":false,"isSlot":false,"src":"1603:6:16","valueSize":1},{"declaration":2157,"isOffset":false,"isSlot":false,"src":"1618:6:16","valueSize":1},{"declaration":2173,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":2175,"nodeType":"InlineAssembly","src":"1545:94:16"},{"body":{"id":2190,"nodeType":"Block","src":"1665:234:16","statements":[{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:16","subExpression":{"id":2177,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"1683:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"1683:5:16"},{"AST":{"nodeType":"YulBlock","src":"1731:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:16"},"nodeType":"YulFunctionCall","src":"1771:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:16"},"nodeType":"YulFunctionCall","src":"1766:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:16"},"nodeType":"YulFunctionCall","src":"1753:46:16"},"nodeType":"YulExpressionStatement","src":"1753:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2096,"isOffset":false,"isSlot":false,"src":"1787:10:16","valueSize":1},{"declaration":2173,"isOffset":false,"isSlot":false,"src":"1761:3:16","valueSize":1},{"declaration":2151,"isOffset":false,"isSlot":false,"src":"1775:5:16","valueSize":1}],"flags":["memory-safe"],"id":2180,"nodeType":"InlineAssembly","src":"1706:111:16"},{"expression":{"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2184,"nodeType":"ExpressionStatement","src":"1834:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1867:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"1863:21:16","trueBody":{"id":2188,"nodeType":"Break","src":"1879:5:16"}}]},"condition":{"hexValue":"74727565","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2191,"nodeType":"WhileStatement","src":"1652:247:16"},{"expression":{"id":2192,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1919:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2155,"id":2193,"nodeType":"Return","src":"1912:13:16"}]}]},"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":2196,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2153,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":3484,"src":"1308:634:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2221,"nodeType":"Block","src":"2118:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2149:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:16","trueExpression":{"hexValue":"2d","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2195:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2214,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"2180:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7687_$","typeString":"type(library SignedMath)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7686,"src":"2180:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"2171:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2204,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:16","typeDescriptions":{}}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2203,"id":2220,"nodeType":"Return","src":"2128:75:16"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"1948:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:16","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"value","nameLocation":"2073:5:16","nodeType":"VariableDeclaration","scope":2222,"src":"2066:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2198,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:16"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2222,"src":"2103:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2201,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:16"},"scope":3484,"src":"2042:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"2389:100:16","statements":[{"id":2240,"nodeType":"UncheckedBlock","src":"2399:84:16","statements":[{"expression":{"arguments":[{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2442:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2461:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"2449:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5778_$","typeString":"type(library Math)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5721,"src":"2449:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2230,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2242,2325,2345],"referencedDeclaration":2325,"src":"2430:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2229,"id":2239,"nodeType":"Return","src":"2423:49:16"}]}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"2216:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:16","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"value","nameLocation":"2344:5:16","nodeType":"VariableDeclaration","scope":2242,"src":"2336:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:16"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"2374:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2227,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:16"},"scope":3484,"src":"2315:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2324,"nodeType":"Block","src":"2702:435:16","statements":[{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:16","nodeType":"VariableDeclaration","scope":2324,"src":"2712:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2255,"initialValue":{"id":2254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"2733:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:16"},{"assignments":[2257],"declarations":[{"constant":false,"id":2257,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:16","nodeType":"VariableDeclaration","scope":2324,"src":"2748:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2256,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2266,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2261,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2784:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:16"},{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2267,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2805:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2269,"indexExpression":{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2272,"nodeType":"ExpressionStatement","src":"2805:15:16"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2273,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2830:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2275,"indexExpression":{"hexValue":"31","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2278,"nodeType":"ExpressionStatement","src":"2830:15:16"},{"body":{"id":2307,"nodeType":"Block","src":"2900:95:16","statements":[{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2293,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2914:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2295,"indexExpression":{"id":2294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2296,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2926:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2300,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2937:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2302,"nodeType":"ExpressionStatement","src":"2914:40:16"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2303,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2968:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ExpressionStatement","src":"2968:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2308,"initializationExpression":{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"i","nameLocation":"2868:1:16","nodeType":"VariableDeclaration","scope":2308,"src":"2860:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2282,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2876:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:16"},"loopExpression":{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:16","subExpression":{"id":2290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"2897:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"2895:3:16"},"nodeType":"ForStatement","src":"2855:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3008:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"IfStatement","src":"3004:96:16","trueBody":{"id":2317,"nodeType":"Block","src":"3025:75:16","statements":[{"errorCall":{"arguments":[{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2314,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3082:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2312,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"3046:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2316,"nodeType":"RevertStatement","src":"3039:50:16"}]}},{"expression":{"arguments":[{"id":2321,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"3123:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:16","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2251,"id":2323,"nodeType":"Return","src":"3109:21:16"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"2495:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:16","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"value","nameLocation":"2641:5:16","nodeType":"VariableDeclaration","scope":2325,"src":"2633:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"length","nameLocation":"2656:6:16","nodeType":"VariableDeclaration","scope":2325,"src":"2648:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:16"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"2687:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:16"},"scope":3484,"src":"2612:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"3369:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2338,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"3414:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2336,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:16","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:16","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2341,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"3422:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2333,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2242,2325,2345],"referencedDeclaration":2325,"src":"3386:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2332,"id":2343,"nodeType":"Return","src":"3379:58:16"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"3143:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:16","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"addr","nameLocation":"3325:4:16","nodeType":"VariableDeclaration","scope":2345,"src":"3317:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:16"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"3354:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2330,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:16"},"scope":3484,"src":"3296:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2409,"nodeType":"Block","src":"3701:642:16","statements":[{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:16","nodeType":"VariableDeclaration","scope":2409,"src":"3711:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2353,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2361,"initialValue":{"arguments":[{"arguments":[{"id":2358,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"3751:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2357,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2242,2325,2345],"referencedDeclaration":2345,"src":"3739:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2355,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:16"},{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:16","nodeType":"VariableDeclaration","scope":2409,"src":"3842:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"nodeType":"VariableDeclarationStatement","src":"3842:17:16"},{"AST":{"nodeType":"YulBlock","src":"3894:78:16","statements":[{"nodeType":"YulAssignment","src":"3908:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:16"},"nodeType":"YulFunctionCall","src":"3939:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:16"},"nodeType":"YulFunctionCall","src":"3929:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:16"},"nodeType":"YulFunctionCall","src":"3921:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"3943:6:16","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"3908:9:16","valueSize":1}],"flags":["memory-safe"],"id":2365,"nodeType":"InlineAssembly","src":"3869:103:16"},{"body":{"id":2402,"nodeType":"Block","src":"4015:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4121:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2383,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"4150:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2385,"indexExpression":{"id":2384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4157:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2381,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:16","typeDescriptions":{}}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2397,"nodeType":"IfStatement","src":"4117:150:16","trueBody":{"id":2396,"nodeType":"Block","src":"4167:100:16","statements":[{"expression":{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2390,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"4235:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2392,"indexExpression":{"id":2391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4242:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2395,"nodeType":"ExpressionStatement","src":"4235:17:16"}]}},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4280:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"4280:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4003:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"initializationExpression":{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"i","nameLocation":"3995:1:16","nodeType":"VariableDeclaration","scope":2403,"src":"3987:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2369,"initialValue":{"hexValue":"3431","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:16"},"loopExpression":{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:16","subExpression":{"id":2373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4012:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"4010:3:16"},"nodeType":"ForStatement","src":"3982:324:16"},{"expression":{"arguments":[{"id":2406,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"4329:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2404,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:16","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2352,"id":2408,"nodeType":"Return","src":"4315:21:16"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"3450:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:16","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"addr","nameLocation":"3657:4:16","nodeType":"VariableDeclaration","scope":2410,"src":"3649:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:16"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"3686:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2350,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:16"},"scope":3484,"src":"3620:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2446,"nodeType":"Block","src":"4498:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4521:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2420,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:16","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:16","memberName":"length","nodeType":"MemberAccess","src":"4515:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4540:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:16","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:16","memberName":"length","nodeType":"MemberAccess","src":"4534:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4569:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2432,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:16","typeDescriptions":{}}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4592:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:16","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2419,"id":2445,"nodeType":"Return","src":"4508:87:16"}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"4349:66:16","text":" @dev Returns true if the two strings are equal."},"id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:16","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"a","nameLocation":"4449:1:16","nodeType":"VariableDeclaration","scope":2447,"src":"4435:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2412,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"b","nameLocation":"4466:1:16","nodeType":"VariableDeclaration","scope":2447,"src":"4452:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2414,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:16"},"returnParameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"4492:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2417,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:16"},"scope":3484,"src":"4420:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"4899:64:16","statements":[{"expression":{"arguments":[{"id":2456,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4926:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2460,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4942:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2458,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:16","typeDescriptions":{}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:16","memberName":"length","nodeType":"MemberAccess","src":"4936:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2455,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2466,2497],"referencedDeclaration":2497,"src":"4916:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2454,"id":2464,"nodeType":"Return","src":"4909:47:16"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"4608:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:16","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"input","nameLocation":"4860:5:16","nodeType":"VariableDeclaration","scope":2466,"src":"4846:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2449,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:16"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"4890:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:16"},"scope":3484,"src":"4827:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2496,"nodeType":"Block","src":"5368:153:16","statements":[{"assignments":[2479,2481],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"success","nameLocation":"5384:7:16","nodeType":"VariableDeclaration","scope":2496,"src":"5379:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2478,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"value","nameLocation":"5401:5:16","nodeType":"VariableDeclaration","scope":2496,"src":"5393:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2483,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"5423:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2484,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5430:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2485,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5437:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2518,2555],"referencedDeclaration":2555,"src":"5410:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:16"},{"condition":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:16","subExpression":{"id":2488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"5456:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2493,"nodeType":"IfStatement","src":"5451:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2490,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"5472:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"RevertStatement","src":"5465:27:16"}},{"expression":{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5509:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2477,"id":2495,"nodeType":"Return","src":"5502:12:16"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"4969:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:16","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"input","nameLocation":"5301:5:16","nodeType":"VariableDeclaration","scope":2497,"src":"5287:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2468,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"begin","nameLocation":"5316:5:16","nodeType":"VariableDeclaration","scope":2497,"src":"5308:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"end","nameLocation":"5331:3:16","nodeType":"VariableDeclaration","scope":2497,"src":"5323:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:16"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"5359:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:16"},"scope":3484,"src":"5268:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"5842:83:16","statements":[{"expression":{"arguments":[{"id":2508,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5888:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2512,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5904:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:16","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:16","memberName":"length","nodeType":"MemberAccess","src":"5898:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2507,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"5859:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2506,"id":2516,"nodeType":"Return","src":"5852:66:16"}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"5527:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:16","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"input","nameLocation":"5783:5:16","nodeType":"VariableDeclaration","scope":2518,"src":"5769:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:16"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"success","nameLocation":"5818:7:16","nodeType":"VariableDeclaration","scope":2518,"src":"5813:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"value","nameLocation":"5835:5:16","nodeType":"VariableDeclaration","scope":2518,"src":"5827:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:16"},"scope":3484,"src":"5747:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2554,"nodeType":"Block","src":"6327:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6341:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2535,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"6353:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:16","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:16","memberName":"length","nodeType":"MemberAccess","src":"6347:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"6370:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2540,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6378:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2547,"nodeType":"IfStatement","src":"6337:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2531,"id":2546,"nodeType":"Return","src":"6383:17:16"}},{"expression":{"arguments":[{"id":2549,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"6446:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2550,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"6453:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2551,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6460:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6417:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2531,"id":2553,"nodeType":"Return","src":"6410:54:16"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"5931:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:16","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"input","nameLocation":"6219:5:16","nodeType":"VariableDeclaration","scope":2555,"src":"6205:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2520,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"begin","nameLocation":"6242:5:16","nodeType":"VariableDeclaration","scope":2555,"src":"6234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"end","nameLocation":"6265:3:16","nodeType":"VariableDeclaration","scope":2555,"src":"6257:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:16"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"success","nameLocation":"6303:7:16","nodeType":"VariableDeclaration","scope":2555,"src":"6298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"value","nameLocation":"6320:5:16","nodeType":"VariableDeclaration","scope":2555,"src":"6312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:16"},"scope":3484,"src":"6174:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"6874:347:16","statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:16","nodeType":"VariableDeclaration","scope":2624,"src":"6884:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2575,"initialValue":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"6912:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:16","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:16"},{"assignments":[2577],"declarations":[{"constant":false,"id":2577,"mutability":"mutable","name":"result","nameLocation":"6937:6:16","nodeType":"VariableDeclaration","scope":2624,"src":"6929:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2579,"initialValue":{"hexValue":"30","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:16"},{"body":{"id":2618,"nodeType":"Block","src":"6995:189:16","statements":[{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"chr","nameLocation":"7015:3:16","nodeType":"VariableDeclaration","scope":2618,"src":"7009:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2590,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2596,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"7064:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"7072:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2595,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"7041:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2593,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:16","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2592,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"7021:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"7094:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2609,"nodeType":"IfStatement","src":"7090:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2568,"id":2608,"nodeType":"Return","src":"7103:17:16"}},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7134:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"7134:12:16"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7160:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2615,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"7170:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"7160:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2585,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6985:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"initializationExpression":{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"i","nameLocation":"6970:1:16","nodeType":"VariableDeclaration","scope":2619,"src":"6962:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"initialValue":{"id":2582,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"6974:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:16"},"loopExpression":{"expression":{"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:16","subExpression":{"id":2587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"6992:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2589,"nodeType":"ExpressionStatement","src":"6990:3:16"},"nodeType":"ForStatement","src":"6957:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7207:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2568,"id":2623,"nodeType":"Return","src":"7193:21:16"}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"6477:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:16","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"input","nameLocation":"6767:5:16","nodeType":"VariableDeclaration","scope":2625,"src":"6753:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"begin","nameLocation":"6790:5:16","nodeType":"VariableDeclaration","scope":2625,"src":"6782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"end","nameLocation":"6813:3:16","nodeType":"VariableDeclaration","scope":2625,"src":"6805:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:16"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"success","nameLocation":"6850:7:16","nodeType":"VariableDeclaration","scope":2625,"src":"6845:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2564,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"6867:5:16","nodeType":"VariableDeclaration","scope":2625,"src":"6859:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:16"},"scope":3484,"src":"6706:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2643,"nodeType":"Block","src":"7518:63:16","statements":[{"expression":{"arguments":[{"id":2634,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7544:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2638,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7560:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:16","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:16","memberName":"length","nodeType":"MemberAccess","src":"7554:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2644,2675],"referencedDeclaration":2675,"src":"7535:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2632,"id":2642,"nodeType":"Return","src":"7528:46:16"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"7227:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:16","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"input","nameLocation":"7480:5:16","nodeType":"VariableDeclaration","scope":2644,"src":"7466:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2627,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:16"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2644,"src":"7510:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2630,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:16"},"scope":3484,"src":"7448:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"7986:151:16","statements":[{"assignments":[2657,2659],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"success","nameLocation":"8002:7:16","nodeType":"VariableDeclaration","scope":2674,"src":"7997:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2656,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"value","nameLocation":"8018:5:16","nodeType":"VariableDeclaration","scope":2674,"src":"8011:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2658,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2661,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"8039:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2662,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"8053:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2660,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2696,2738],"referencedDeclaration":2738,"src":"8027:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:16"},{"condition":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:16","subExpression":{"id":2666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"8072:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2671,"nodeType":"IfStatement","src":"8067:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2668,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"8088:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2670,"nodeType":"RevertStatement","src":"8081:27:16"}},{"expression":{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"8125:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2655,"id":2673,"nodeType":"Return","src":"8118:12:16"}]},"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"7587:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:16","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"input","nameLocation":"7920:5:16","nodeType":"VariableDeclaration","scope":2675,"src":"7906:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2646,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"begin","nameLocation":"7935:5:16","nodeType":"VariableDeclaration","scope":2675,"src":"7927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"end","nameLocation":"7950:3:16","nodeType":"VariableDeclaration","scope":2675,"src":"7942:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:16"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"7978:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2653,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:16"},"scope":3484,"src":"7888:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2695,"nodeType":"Block","src":"8528:82:16","statements":[{"expression":{"arguments":[{"id":2686,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"8573:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2690,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"8589:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:16","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:16","memberName":"length","nodeType":"MemberAccess","src":"8583:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"8545:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2684,"id":2694,"nodeType":"Return","src":"8538:65:16"}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"8143:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:16","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"input","nameLocation":"8470:5:16","nodeType":"VariableDeclaration","scope":2696,"src":"8456:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:16"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"success","nameLocation":"8505:7:16","nodeType":"VariableDeclaration","scope":2696,"src":"8500:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2680,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"value","nameLocation":"8521:5:16","nodeType":"VariableDeclaration","scope":2696,"src":"8514:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2682,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:16"},"scope":3484,"src":"8435:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2701,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:16","nodeType":"VariableDeclaration","scope":3484,"src":"8616:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2737,"nodeType":"Block","src":"9132:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"9146:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2718,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"9158:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2716,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:16","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:16","memberName":"length","nodeType":"MemberAccess","src":"9152:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"9175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2723,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"9183:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"9142:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2714,"id":2729,"nodeType":"Return","src":"9188:17:16"}},{"expression":{"arguments":[{"id":2732,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"9250:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2733,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"9257:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2734,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"9264:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"9222:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2714,"id":2736,"nodeType":"Return","src":"9215:53:16"}]},"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"8673:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:16","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"input","nameLocation":"9025:5:16","nodeType":"VariableDeclaration","scope":2738,"src":"9011:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2703,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"begin","nameLocation":"9048:5:16","nodeType":"VariableDeclaration","scope":2738,"src":"9040:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"end","nameLocation":"9071:3:16","nodeType":"VariableDeclaration","scope":2738,"src":"9063:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:16"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"success","nameLocation":"9109:7:16","nodeType":"VariableDeclaration","scope":2738,"src":"9104:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"value","nameLocation":"9125:5:16","nodeType":"VariableDeclaration","scope":2738,"src":"9118:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2712,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:16"},"scope":3484,"src":"8981:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2858,"nodeType":"Block","src":"9675:812:16","statements":[{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:16","nodeType":"VariableDeclaration","scope":2858,"src":"9685:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2752,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"id":2756,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"9713:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2754,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:16","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:16"},{"assignments":[2760],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"sign","nameLocation":"9783:4:16","nodeType":"VariableDeclaration","scope":2858,"src":"9776:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2759,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2776,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"9799:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2771,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9847:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2772,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9855:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2770,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9824:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2768,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:16","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2764,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:16","typeDescriptions":{}}},"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:16"},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:16","nodeType":"VariableDeclaration","scope":2858,"src":"9943:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2777,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2785,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"9963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2780,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:16","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:16"},{"assignments":[2787],"declarations":[{"constant":false,"id":2787,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:16","nodeType":"VariableDeclaration","scope":2858,"src":"9992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2794,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10012:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2789,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:16","typeDescriptions":{}}},"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:16"},{"assignments":[2796],"declarations":[{"constant":false,"id":2796,"mutability":"mutable","name":"offset","nameLocation":"10049:6:16","nodeType":"VariableDeclaration","scope":2858,"src":"10041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2803,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"10059:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2798,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"10075:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"10058:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:16"},{"assignments":[2805,2807],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:16","nodeType":"VariableDeclaration","scope":2858,"src":"10109:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2804,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:16","nodeType":"VariableDeclaration","scope":2858,"src":"10126:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2815,"initialValue":{"arguments":[{"id":2809,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"10159:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10166:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2811,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"10174:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2813,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"10182:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2518,2555],"referencedDeclaration":2555,"src":"10146:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"10201:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"10215:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2818,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"10226:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"10343:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2837,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"10357:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"10373:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2840,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"10385:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2751,"id":2855,"nodeType":"Return","src":"10463:17:16"},"id":2856,"nodeType":"IfStatement","src":"10339:141:16","trueBody":{"id":2851,"nodeType":"Block","src":"10401:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2845,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:16","memberName":"min","nodeType":"MemberAccess","src":"10429:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2751,"id":2850,"nodeType":"Return","src":"10415:31:16"}]}},"id":2857,"nodeType":"IfStatement","src":"10197:283:16","trueBody":{"id":2835,"nodeType":"Block","src":"10242:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2822,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"10270:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2830,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"10312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2828,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:16","typeDescriptions":{}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:16","trueExpression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:16","subExpression":{"arguments":[{"id":2825,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"10293:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2823,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:16","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2751,"id":2834,"nodeType":"Return","src":"10256:66:16"}]}}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"9281:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2859,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:16","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"input","nameLocation":"9569:5:16","nodeType":"VariableDeclaration","scope":2859,"src":"9555:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2740,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"begin","nameLocation":"9592:5:16","nodeType":"VariableDeclaration","scope":2859,"src":"9584:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"end","nameLocation":"9615:3:16","nodeType":"VariableDeclaration","scope":2859,"src":"9607:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:16"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"success","nameLocation":"9652:7:16","nodeType":"VariableDeclaration","scope":2859,"src":"9647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2747,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"value","nameLocation":"9668:5:16","nodeType":"VariableDeclaration","scope":2859,"src":"9661:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2749,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:16"},"scope":3484,"src":"9509:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2877,"nodeType":"Block","src":"10832:67:16","statements":[{"expression":{"arguments":[{"id":2868,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10862:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2872,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10878:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2870,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:16","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:16","memberName":"length","nodeType":"MemberAccess","src":"10872:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2867,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2878,2909],"referencedDeclaration":2909,"src":"10849:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2866,"id":2876,"nodeType":"Return","src":"10842:50:16"}]},"documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"10493:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2878,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:16","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"input","nameLocation":"10793:5:16","nodeType":"VariableDeclaration","scope":2878,"src":"10779:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2861,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:16"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"10823:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:16"},"scope":3484,"src":"10757:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"11320:156:16","statements":[{"assignments":[2891,2893],"declarations":[{"constant":false,"id":2891,"mutability":"mutable","name":"success","nameLocation":"11336:7:16","nodeType":"VariableDeclaration","scope":2908,"src":"11331:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2890,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"value","nameLocation":"11353:5:16","nodeType":"VariableDeclaration","scope":2908,"src":"11345:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[{"id":2895,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"11378:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2896,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"11385:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2897,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"11392:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2930,2967],"referencedDeclaration":2967,"src":"11362:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:16"},{"condition":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:16","subExpression":{"id":2900,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"11411:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"11406:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2902,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"11427:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2904,"nodeType":"RevertStatement","src":"11420:27:16"}},{"expression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"11464:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2889,"id":2907,"nodeType":"Return","src":"11457:12:16"}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"10905:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:16","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"input","nameLocation":"11253:5:16","nodeType":"VariableDeclaration","scope":2909,"src":"11239:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2880,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"begin","nameLocation":"11268:5:16","nodeType":"VariableDeclaration","scope":2909,"src":"11260:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"end","nameLocation":"11283:3:16","nodeType":"VariableDeclaration","scope":2909,"src":"11275:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:16"},"returnParameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2909,"src":"11311:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:16"},"scope":3484,"src":"11217:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"11803:86:16","statements":[{"expression":{"arguments":[{"id":2920,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"11852:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2924,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"11868:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:16","typeDescriptions":{}}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:16","memberName":"length","nodeType":"MemberAccess","src":"11862:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2919,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"11820:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2918,"id":2928,"nodeType":"Return","src":"11813:69:16"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"11482:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:16","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"input","nameLocation":"11744:5:16","nodeType":"VariableDeclaration","scope":2930,"src":"11730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2911,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:16"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"success","nameLocation":"11779:7:16","nodeType":"VariableDeclaration","scope":2930,"src":"11774:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2914,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"value","nameLocation":"11796:5:16","nodeType":"VariableDeclaration","scope":2930,"src":"11788:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:16"},"scope":3484,"src":"11705:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2966,"nodeType":"Block","src":"12297:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"12311:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"12323:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2945,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:16","typeDescriptions":{}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:16","memberName":"length","nodeType":"MemberAccess","src":"12317:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"12340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2952,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"12348:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"12307:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2943,"id":2958,"nodeType":"Return","src":"12353:17:16"}},{"expression":{"arguments":[{"id":2961,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"12419:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2962,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"12426:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2963,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"12433:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2960,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"12387:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2943,"id":2965,"nodeType":"Return","src":"12380:57:16"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"11895:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:16","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"input","nameLocation":"12189:5:16","nodeType":"VariableDeclaration","scope":2967,"src":"12175:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2932,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"begin","nameLocation":"12212:5:16","nodeType":"VariableDeclaration","scope":2967,"src":"12204:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"end","nameLocation":"12235:3:16","nodeType":"VariableDeclaration","scope":2967,"src":"12227:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:16"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"success","nameLocation":"12273:7:16","nodeType":"VariableDeclaration","scope":2967,"src":"12268:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2939,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"value","nameLocation":"12290:5:16","nodeType":"VariableDeclaration","scope":2967,"src":"12282:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:16"},"scope":3484,"src":"12141:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"12853:881:16","statements":[{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:16","nodeType":"VariableDeclaration","scope":3069,"src":"12863:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2981,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"id":2985,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"12891:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2983,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:16","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:16"},{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:16","nodeType":"VariableDeclaration","scope":3069,"src":"12945:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2988,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3009,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"12963:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"12969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2999,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"13013:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3000,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"13021:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2998,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"12990:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2996,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:16","typeDescriptions":{}}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3003,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:16","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:16"},{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"offset","nameLocation":"13133:6:16","nodeType":"VariableDeclaration","scope":3069,"src":"13125:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3012,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"13142:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"13142:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:16"},{"assignments":[3019],"declarations":[{"constant":false,"id":3019,"mutability":"mutable","name":"result","nameLocation":"13183:6:16","nodeType":"VariableDeclaration","scope":3069,"src":"13175:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3021,"initialValue":{"hexValue":"30","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:16"},{"body":{"id":3063,"nodeType":"Block","src":"13250:447:16","statements":[{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"chr","nameLocation":"13270:3:16","nodeType":"VariableDeclaration","scope":3063,"src":"13264:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3034,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3045,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3040,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"13319:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"13327:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3039,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"13296:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3037,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:16","typeDescriptions":{}}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3036,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"13276:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"13349:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"13345:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2980,"id":3052,"nodeType":"Return","src":"13359:17:16"}},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"13390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"13390:12:16"},{"id":3062,"nodeType":"UncheckedBlock","src":"13416:271:16","statements":[{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"13659:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3059,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"13669:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"13659:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"13236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3029,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"13240:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3064,"initializationExpression":{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"i","nameLocation":"13216:1:16","nodeType":"VariableDeclaration","scope":3064,"src":"13208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"13220:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3025,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"13228:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:16"},"loopExpression":{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:16","subExpression":{"id":3031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"13247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ExpressionStatement","src":"13245:3:16"},"nodeType":"ForStatement","src":"13203:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"13720:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2980,"id":3068,"nodeType":"Return","src":"13706:21:16"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"12450:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:16","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"input","nameLocation":"12746:5:16","nodeType":"VariableDeclaration","scope":3070,"src":"12732:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"begin","nameLocation":"12769:5:16","nodeType":"VariableDeclaration","scope":3070,"src":"12761:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"end","nameLocation":"12792:3:16","nodeType":"VariableDeclaration","scope":3070,"src":"12784:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:16"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"success","nameLocation":"12829:7:16","nodeType":"VariableDeclaration","scope":3070,"src":"12824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2976,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"value","nameLocation":"12846:5:16","nodeType":"VariableDeclaration","scope":3070,"src":"12838:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:16"},"scope":3484,"src":"12682:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3088,"nodeType":"Block","src":"14032:67:16","statements":[{"expression":{"arguments":[{"id":3079,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"14062:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3083,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"14078:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3081,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:16","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:16","memberName":"length","nodeType":"MemberAccess","src":"14072:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3089,3120],"referencedDeclaration":3120,"src":"14049:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3077,"id":3087,"nodeType":"Return","src":"14042:50:16"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"13740:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:16","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"input","nameLocation":"13993:5:16","nodeType":"VariableDeclaration","scope":3089,"src":"13979:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3072,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:16"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3089,"src":"14023:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:16"},"scope":3484,"src":"13957:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3119,"nodeType":"Block","src":"14472:165:16","statements":[{"assignments":[3102,3104],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"success","nameLocation":"14488:7:16","nodeType":"VariableDeclaration","scope":3119,"src":"14483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3101,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"value","nameLocation":"14505:5:16","nodeType":"VariableDeclaration","scope":3119,"src":"14497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3110,"initialValue":{"arguments":[{"id":3106,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"14530:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3107,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"14537:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3108,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"14544:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3105,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3141,3245],"referencedDeclaration":3245,"src":"14514:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:16"},{"condition":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:16","subExpression":{"id":3111,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"14563:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"14558:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3113,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"14579:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"RevertStatement","src":"14572:36:16"}},{"expression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"14625:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3100,"id":3118,"nodeType":"Return","src":"14618:12:16"}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"14105:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3120,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:16","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"input","nameLocation":"14405:5:16","nodeType":"VariableDeclaration","scope":3120,"src":"14391:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3091,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"begin","nameLocation":"14420:5:16","nodeType":"VariableDeclaration","scope":3120,"src":"14412:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"end","nameLocation":"14435:3:16","nodeType":"VariableDeclaration","scope":3120,"src":"14427:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:16"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"14463:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:16"},"scope":3484,"src":"14369:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"14944:70:16","statements":[{"expression":{"arguments":[{"id":3131,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"14977:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3135,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"14993:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:16","typeDescriptions":{}}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:16","memberName":"length","nodeType":"MemberAccess","src":"14987:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3141,3245],"referencedDeclaration":3245,"src":"14961:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3129,"id":3139,"nodeType":"Return","src":"14954:53:16"}]},"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"14643:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:16","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"input","nameLocation":"14885:5:16","nodeType":"VariableDeclaration","scope":3141,"src":"14871:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3122,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:16"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"success","nameLocation":"14920:7:16","nodeType":"VariableDeclaration","scope":3141,"src":"14915:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3125,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"value","nameLocation":"14937:5:16","nodeType":"VariableDeclaration","scope":3141,"src":"14929:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:16"},"scope":3484,"src":"14846:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3244,"nodeType":"Block","src":"15407:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"15421:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3158,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"15433:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3156,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:16","typeDescriptions":{}}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:16","memberName":"length","nodeType":"MemberAccess","src":"15427:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15450:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3163,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"15458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"nodeType":"IfStatement","src":"15417:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:16","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3154,"id":3172,"nodeType":"Return","src":"15463:26:16"}},{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:16","nodeType":"VariableDeclaration","scope":3244,"src":"15500:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3174,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3198,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"15518:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15524:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3187,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"15574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:16","typeDescriptions":{}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3189,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15582:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3184,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"15545:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3182,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:16","typeDescriptions":{}}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3192,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:16","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:16"},{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:16","nodeType":"VariableDeclaration","scope":3244,"src":"15686:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3208,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3202,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"15716:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"15716:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"15803:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3210,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15809:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3212,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"15818:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3242,"nodeType":"Block","src":"16083:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:16","typeDescriptions":{}}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3154,"id":3241,"nodeType":"Return","src":"16097:26:16"}]},"id":3243,"nodeType":"IfStatement","src":"15799:335:16","trueBody":{"id":3234,"nodeType":"Block","src":"15834:243:16","statements":[{"assignments":[3215,3217],"declarations":[{"constant":false,"id":3215,"mutability":"mutable","name":"s","nameLocation":"15955:1:16","nodeType":"VariableDeclaration","scope":3234,"src":"15950:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3214,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"v","nameLocation":"15966:1:16","nodeType":"VariableDeclaration","scope":3234,"src":"15958:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3223,"initialValue":{"arguments":[{"id":3219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16003:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"16010:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"16017:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"15971:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:16"},{"expression":{"components":[{"id":3224,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"16043:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3229,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"16062:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3227,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:16","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:16","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3154,"id":3233,"nodeType":"Return","src":"16035:31:16"}]}}]},"documentation":{"id":3142,"nodeType":"StructuredDocumentation","src":"15020:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:16","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"input","nameLocation":"15299:5:16","nodeType":"VariableDeclaration","scope":3245,"src":"15285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3143,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"begin","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":3245,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"end","nameLocation":"15345:3:16","nodeType":"VariableDeclaration","scope":3245,"src":"15337:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:16"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"success","nameLocation":"15383:7:16","nodeType":"VariableDeclaration","scope":3245,"src":"15378:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3150,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"value","nameLocation":"15400:5:16","nodeType":"VariableDeclaration","scope":3245,"src":"15392:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:16"},"scope":3484,"src":"15251:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3304,"nodeType":"Block","src":"16209:461:16","statements":[{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"value","nameLocation":"16225:5:16","nodeType":"VariableDeclaration","scope":3304,"src":"16219:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3252,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3258,"initialValue":{"arguments":[{"id":3256,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"16239:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3254,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:16","typeDescriptions":{}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:16"},{"id":3301,"nodeType":"UncheckedBlock","src":"16403:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16431:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16445:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16491:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16505:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16552:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16566:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3293,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:16","memberName":"max","nodeType":"MemberAccess","src":"16615:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3251,"id":3297,"nodeType":"Return","src":"16608:22:16"},"id":3298,"nodeType":"IfStatement","src":"16548:82:16","trueBody":{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16578:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3291,"nodeType":"ExpressionStatement","src":"16578:11:16"}},"id":3299,"nodeType":"IfStatement","src":"16487:143:16","trueBody":{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16518:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3280,"nodeType":"ExpressionStatement","src":"16518:11:16"}},"id":3300,"nodeType":"IfStatement","src":"16427:203:16","trueBody":{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16457:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3269,"nodeType":"ExpressionStatement","src":"16457:11:16"}}]},{"expression":{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"16658:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3251,"id":3303,"nodeType":"Return","src":"16651:12:16"}]},"id":3305,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:16","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"chr","nameLocation":"16175:3:16","nodeType":"VariableDeclaration","scope":3305,"src":"16168:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3246,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:16"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"16202:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3249,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:16"},"scope":3484,"src":"16146:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3470,"nodeType":"Block","src":"17336:1331:16","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:16","nodeType":"VariableDeclaration","scope":3470,"src":"17346:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3319,"initialValue":{"arguments":[{"id":3317,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"17374:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3315,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:16","typeDescriptions":{}}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:16"},{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"output","nameLocation":"17403:6:16","nodeType":"VariableDeclaration","scope":3470,"src":"17390:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3320,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3329,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3325,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"17426:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:16","memberName":"length","nodeType":"MemberAccess","src":"17426:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:16"},{"assignments":[3331],"declarations":[{"constant":false,"id":3331,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:16","nodeType":"VariableDeclaration","scope":3470,"src":"17473:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3333,"initialValue":{"hexValue":"30","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:16"},{"body":{"id":3462,"nodeType":"Block","src":"17548:854:16","statements":[{"assignments":[3345],"declarations":[{"constant":false,"id":3345,"mutability":"mutable","name":"char","nameLocation":"17569:4:16","nodeType":"VariableDeclaration","scope":3462,"src":"17562:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3344,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3353,"initialValue":{"arguments":[{"arguments":[{"id":3349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"17606:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"17614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3348,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"17583:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3346,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:16","typeDescriptions":{}}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"17637:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3358,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"17672:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3356,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:16","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3460,"nodeType":"Block","src":"18330:62:16","statements":[{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3453,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"18348:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3456,"indexExpression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:16","subExpression":{"id":3454,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"18355:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3457,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"18373:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3459,"nodeType":"ExpressionStatement","src":"18348:29:16"}]},"id":3461,"nodeType":"IfStatement","src":"17631:761:16","trueBody":{"id":3452,"nodeType":"Block","src":"17687:637:16","statements":[{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3367,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3370,"indexExpression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:16","subExpression":{"id":3368,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"17712:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3373,"nodeType":"ExpressionStatement","src":"17705:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"17756:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"17825:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"17894:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"17963:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"18032:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"18101:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"18171:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3445,"nodeType":"IfStatement","src":"18167:143:16","trueBody":{"id":3444,"nodeType":"Block","src":"18185:125:16","statements":[{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3437,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"18263:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3440,"indexExpression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:16","subExpression":{"id":3438,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"18270:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3443,"nodeType":"ExpressionStatement","src":"18263:28:16"}]}},"id":3446,"nodeType":"IfStatement","src":"18097:213:16","trueBody":{"expression":{"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3427,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"18115:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3430,"indexExpression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:16","subExpression":{"id":3428,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"18122:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3433,"nodeType":"ExpressionStatement","src":"18115:29:16"}},"id":3447,"nodeType":"IfStatement","src":"18028:282:16","trueBody":{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3417,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"18046:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3420,"indexExpression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:16","subExpression":{"id":3418,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"18053:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3423,"nodeType":"ExpressionStatement","src":"18046:28:16"}},"id":3448,"nodeType":"IfStatement","src":"17959:351:16","trueBody":{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3407,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"17977:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3410,"indexExpression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:16","subExpression":{"id":3408,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"17984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3413,"nodeType":"ExpressionStatement","src":"17977:28:16"}},"id":3449,"nodeType":"IfStatement","src":"17890:420:16","trueBody":{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3397,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"17908:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3400,"indexExpression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:16","subExpression":{"id":3398,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"17915:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3403,"nodeType":"ExpressionStatement","src":"17908:28:16"}},"id":3450,"nodeType":"IfStatement","src":"17821:489:16","trueBody":{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3387,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"17839:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3390,"indexExpression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:16","subExpression":{"id":3388,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"17846:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3393,"nodeType":"ExpressionStatement","src":"17839:28:16"}},"id":3451,"nodeType":"IfStatement","src":"17752:558:16","trueBody":{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3377,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"17770:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3380,"indexExpression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:16","subExpression":{"id":3378,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"17777:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3383,"nodeType":"ExpressionStatement","src":"17770:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"17524:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3338,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"17528:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:16","memberName":"length","nodeType":"MemberAccess","src":"17528:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3463,"initializationExpression":{"assignments":[3335],"declarations":[{"constant":false,"id":3335,"mutability":"mutable","name":"i","nameLocation":"17521:1:16","nodeType":"VariableDeclaration","scope":3463,"src":"17513:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"nodeType":"VariableDeclarationStatement","src":"17513:9:16"},"loopExpression":{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:16","subExpression":{"id":3341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"17545:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"17543:3:16"},"nodeType":"ForStatement","src":"17508:894:16"},{"AST":{"nodeType":"YulBlock","src":"18500:129:16","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:16"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:16"},"nodeType":"YulFunctionCall","src":"18514:28:16"},"nodeType":"YulExpressionStatement","src":"18514:28:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:16"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:16"},"nodeType":"YulFunctionCall","src":"18594:21:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:16"},"nodeType":"YulFunctionCall","src":"18587:29:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:16"},"nodeType":"YulFunctionCall","src":"18580:37:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:16"},"nodeType":"YulFunctionCall","src":"18568:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:16"},"nodeType":"YulFunctionCall","src":"18555:64:16"},"nodeType":"YulExpressionStatement","src":"18555:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3321,"isOffset":false,"isSlot":false,"src":"18521:6:16","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"18572:6:16","valueSize":1},{"declaration":3331,"isOffset":false,"isSlot":false,"src":"18529:12:16","valueSize":1},{"declaration":3331,"isOffset":false,"isSlot":false,"src":"18598:12:16","valueSize":1}],"flags":["memory-safe"],"id":3464,"nodeType":"InlineAssembly","src":"18475:154:16"},{"expression":{"arguments":[{"id":3467,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"18653:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3465,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:16","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3312,"id":3469,"nodeType":"Return","src":"18639:21:16"}]},"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"16676:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3471,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:16","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"input","nameLocation":"17291:5:16","nodeType":"VariableDeclaration","scope":3471,"src":"17277:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3307,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:16"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3471,"src":"17321:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3310,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:16"},"scope":3484,"src":"17257:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3482,"nodeType":"Block","src":"19052:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:16","statements":[{"nodeType":"YulAssignment","src":"19215:46:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:16"},"nodeType":"YulFunctionCall","src":"19234:17:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:16"},"nodeType":"YulFunctionCall","src":"19230:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:16"},"nodeType":"YulFunctionCall","src":"19224:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3474,"isOffset":false,"isSlot":false,"src":"19238:6:16","valueSize":1},{"declaration":3476,"isOffset":false,"isSlot":false,"src":"19253:6:16","valueSize":1},{"declaration":3479,"isOffset":false,"isSlot":false,"src":"19215:5:16","valueSize":1}],"flags":["memory-safe"],"id":3481,"nodeType":"InlineAssembly","src":"19176:95:16"}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"18673:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3483,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:16","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:16","nodeType":"VariableDeclaration","scope":3483,"src":"18978:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3473,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"offset","nameLocation":"19007:6:16","nodeType":"VariableDeclaration","scope":3483,"src":"18999:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:16"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"value","nameLocation":"19045:5:16","nodeType":"VariableDeclaration","scope":3483,"src":"19037:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:16"},"scope":3484,"src":"18946:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3485,"src":"297:18982:16","usedErrors":[2142,2145,2148],"usedEvents":[]}],"src":"101:19179:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3832]},"id":3833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3486,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3832,"linearizedBaseContracts":[3832],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3492,"members":[{"id":3488,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":3489,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":3490,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":3491,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3495,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3500,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":3500,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3505,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":3505,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":3557,"nodeType":"Block","src":"2285:622:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3520,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2299:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:17","memberName":"length","nodeType":"MemberAccess","src":"2299:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3555,"nodeType":"Block","src":"2793:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:17","typeDescriptions":{}}},"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3546,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2827:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3490,"src":"2827:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3550,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2872:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:17","memberName":"length","nodeType":"MemberAccess","src":"2872:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:17","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3519,"id":3554,"nodeType":"Return","src":"2807:83:17"}]},"id":3556,"nodeType":"IfStatement","src":"2295:606:17","trueBody":{"id":3541,"nodeType":"Block","src":"2323:464:17","statements":[{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"r","nameLocation":"2345:1:17","nodeType":"VariableDeclaration","scope":3541,"src":"2337:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3526,"nodeType":"VariableDeclarationStatement","src":"2337:9:17"},{"assignments":[3528],"declarations":[{"constant":false,"id":3528,"mutability":"mutable","name":"s","nameLocation":"2368:1:17","nodeType":"VariableDeclaration","scope":3541,"src":"2360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3529,"nodeType":"VariableDeclarationStatement","src":"2360:9:17"},{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"v","nameLocation":"2389:1:17","nodeType":"VariableDeclaration","scope":3541,"src":"2383:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3530,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3532,"nodeType":"VariableDeclarationStatement","src":"2383:7:17"},{"AST":{"nodeType":"YulBlock","src":"2560:171:17","statements":[{"nodeType":"YulAssignment","src":"2578:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:17"},"nodeType":"YulFunctionCall","src":"2589:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:17"},"nodeType":"YulFunctionCall","src":"2583:27:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:17"}]},{"nodeType":"YulAssignment","src":"2627:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:17"},"nodeType":"YulFunctionCall","src":"2638:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:17"},"nodeType":"YulFunctionCall","src":"2632:27:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:17"}]},{"nodeType":"YulAssignment","src":"2676:41:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:17"},"nodeType":"YulFunctionCall","src":"2695:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:17"},"nodeType":"YulFunctionCall","src":"2689:27:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:17"},"nodeType":"YulFunctionCall","src":"2681:36:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3525,"isOffset":false,"isSlot":false,"src":"2578:1:17","valueSize":1},{"declaration":3528,"isOffset":false,"isSlot":false,"src":"2627:1:17","valueSize":1},{"declaration":3510,"isOffset":false,"isSlot":false,"src":"2593:9:17","valueSize":1},{"declaration":3510,"isOffset":false,"isSlot":false,"src":"2642:9:17","valueSize":1},{"declaration":3510,"isOffset":false,"isSlot":false,"src":"2699:9:17","valueSize":1},{"declaration":3531,"isOffset":false,"isSlot":false,"src":"2676:1:17","valueSize":1}],"flags":["memory-safe"],"id":3533,"nodeType":"InlineAssembly","src":"2535:196:17"},{"expression":{"arguments":[{"id":3535,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2762:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3536,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"2768:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3537,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2771:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3538,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"2774:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3534,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3558,3638,3746],"referencedDeclaration":3746,"src":"2751:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3519,"id":3540,"nodeType":"Return","src":"2744:32:17"}]}}]},"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"hash","nameLocation":"2166:4:17","nodeType":"VariableDeclaration","scope":3558,"src":"2158:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"signature","nameLocation":"2193:9:17","nodeType":"VariableDeclaration","scope":3558,"src":"2180:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3509,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:17"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:17","nodeType":"VariableDeclaration","scope":3558,"src":"2232:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"err","nameLocation":"2264:3:17","nodeType":"VariableDeclaration","scope":3558,"src":"2251:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3515,"nodeType":"UserDefinedTypeName","pathNode":{"id":3514,"name":"RecoverError","nameLocations":["2251:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"2251:12:17"},"referencedDeclaration":3492,"src":"2251:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:17","nodeType":"VariableDeclaration","scope":3558,"src":"2269:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:17"},"scope":3832,"src":"2129:778:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3587,"nodeType":"Block","src":"3801:168:17","statements":[{"assignments":[3569,3572,3574],"declarations":[{"constant":false,"id":3569,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:17","nodeType":"VariableDeclaration","scope":3587,"src":"3812:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3568,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"error","nameLocation":"3844:5:17","nodeType":"VariableDeclaration","scope":3587,"src":"3831:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3571,"nodeType":"UserDefinedTypeName","pathNode":{"id":3570,"name":"RecoverError","nameLocations":["3831:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"3831:12:17"},"referencedDeclaration":3492,"src":"3831:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:17","nodeType":"VariableDeclaration","scope":3587,"src":"3851:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3579,"initialValue":{"arguments":[{"id":3576,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"3882:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3577,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"3888:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3575,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3558,3638,3746],"referencedDeclaration":3558,"src":"3871:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:17"},{"expression":{"arguments":[{"id":3581,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"3920:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"id":3582,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"3927:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3580,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"3908:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3492_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"ExpressionStatement","src":"3908:28:17"},{"expression":{"id":3585,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"3953:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3567,"id":3586,"nodeType":"Return","src":"3946:16:17"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"2913:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:17","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"hash","nameLocation":"3739:4:17","nodeType":"VariableDeclaration","scope":3588,"src":"3731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"signature","nameLocation":"3758:9:17","nodeType":"VariableDeclaration","scope":3588,"src":"3745:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3562,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:17"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3588,"src":"3792:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:17"},"scope":3832,"src":"3714:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"4348:342:17","statements":[{"id":3636,"nodeType":"UncheckedBlock","src":"4358:326:17","statements":[{"assignments":[3606],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"s","nameLocation":"4390:1:17","nodeType":"VariableDeclaration","scope":3636,"src":"4382:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3613,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"4394:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:17","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:17"},{"assignments":[3615],"declarations":[{"constant":false,"id":3615,"mutability":"mutable","name":"v","nameLocation":"4591:1:17","nodeType":"VariableDeclaration","scope":3636,"src":"4585:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3614,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3628,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3620,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"4610:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:17","typeDescriptions":{}}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3616,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:17","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:17"},{"expression":{"arguments":[{"id":3630,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4659:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3631,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"4665:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3632,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4668:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3633,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"4671:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3629,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3558,3638,3746],"referencedDeclaration":3746,"src":"4648:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3604,"id":3635,"nodeType":"Return","src":"4641:32:17"}]}]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"3975:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:17","nodeType":"FunctionDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"hash","nameLocation":"4222:4:17","nodeType":"VariableDeclaration","scope":3638,"src":"4214:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"r","nameLocation":"4244:1:17","nodeType":"VariableDeclaration","scope":3638,"src":"4236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"vs","nameLocation":"4263:2:17","nodeType":"VariableDeclaration","scope":3638,"src":"4255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:17"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:17","nodeType":"VariableDeclaration","scope":3638,"src":"4295:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"err","nameLocation":"4327:3:17","nodeType":"VariableDeclaration","scope":3638,"src":"4314:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"RecoverError","nameLocations":["4314:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"4314:12:17"},"referencedDeclaration":3492,"src":"4314:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:17","nodeType":"VariableDeclaration","scope":3638,"src":"4332:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:17"},"scope":3832,"src":"4185:505:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3670,"nodeType":"Block","src":"4903:164:17","statements":[{"assignments":[3651,3654,3656],"declarations":[{"constant":false,"id":3651,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:17","nodeType":"VariableDeclaration","scope":3670,"src":"4914:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3650,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"error","nameLocation":"4946:5:17","nodeType":"VariableDeclaration","scope":3670,"src":"4933:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3653,"nodeType":"UserDefinedTypeName","pathNode":{"id":3652,"name":"RecoverError","nameLocations":["4933:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"4933:12:17"},"referencedDeclaration":3492,"src":"4933:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:17","nodeType":"VariableDeclaration","scope":3670,"src":"4953:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3662,"initialValue":{"arguments":[{"id":3658,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"4984:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3659,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"4990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3660,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"4993:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3657,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3558,3638,3746],"referencedDeclaration":3638,"src":"4973:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:17"},{"expression":{"arguments":[{"id":3664,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5018:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"id":3665,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"5025:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3663,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"5006:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3492_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"5006:28:17"},{"expression":{"id":3668,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"5051:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3649,"id":3669,"nodeType":"Return","src":"5044:16:17"}]},"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"4696:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:17","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"hash","nameLocation":"4842:4:17","nodeType":"VariableDeclaration","scope":3671,"src":"4834:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"r","nameLocation":"4856:1:17","nodeType":"VariableDeclaration","scope":3671,"src":"4848:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"vs","nameLocation":"4867:2:17","nodeType":"VariableDeclaration","scope":3671,"src":"4859:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:17"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"4894:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:17"},"scope":3832,"src":"4817:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"5382:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3692,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"6278:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:17","typeDescriptions":{}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"6266:164:17","trueBody":{"id":3705,"nodeType":"Block","src":"6351:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:17","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3700,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6385:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"6385:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"id":3702,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"6417:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3689,"id":3704,"nodeType":"Return","src":"6365:54:17"}]}},{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"signer","nameLocation":"6532:6:17","nodeType":"VariableDeclaration","scope":3745,"src":"6524:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3715,"initialValue":{"arguments":[{"id":3710,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6551:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3711,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"6557:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3712,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"6560:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3713,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"6563:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3709,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"6579:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:17","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"6575:113:17","trueBody":{"id":3734,"nodeType":"Block","src":"6601:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:17","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3726,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6635:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"6635:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:17","typeDescriptions":{}}},"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3689,"id":3733,"nodeType":"Return","src":"6615:62:17"}]}},{"expression":{"components":[{"id":3736,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"6706:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3737,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6714:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"6714:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:17","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3689,"id":3744,"nodeType":"Return","src":"6698:49:17"}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"5073:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:17","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"hash","nameLocation":"5240:4:17","nodeType":"VariableDeclaration","scope":3746,"src":"5232:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"v","nameLocation":"5260:1:17","nodeType":"VariableDeclaration","scope":3746,"src":"5254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3675,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"r","nameLocation":"5279:1:17","nodeType":"VariableDeclaration","scope":3746,"src":"5271:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"s","nameLocation":"5298:1:17","nodeType":"VariableDeclaration","scope":3746,"src":"5290:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:17"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:17","nodeType":"VariableDeclaration","scope":3746,"src":"5329:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3682,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"err","nameLocation":"5361:3:17","nodeType":"VariableDeclaration","scope":3746,"src":"5348:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3685,"nodeType":"UserDefinedTypeName","pathNode":{"id":3684,"name":"RecoverError","nameLocations":["5348:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"5348:12:17"},"referencedDeclaration":3492,"src":"5348:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:17","nodeType":"VariableDeclaration","scope":3746,"src":"5366:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:17"},"scope":3832,"src":"5203:1551:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"6981:166:17","statements":[{"assignments":[3761,3764,3766],"declarations":[{"constant":false,"id":3761,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:17","nodeType":"VariableDeclaration","scope":3781,"src":"6992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3760,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"error","nameLocation":"7024:5:17","nodeType":"VariableDeclaration","scope":3781,"src":"7011:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3763,"nodeType":"UserDefinedTypeName","pathNode":{"id":3762,"name":"RecoverError","nameLocations":["7011:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"7011:12:17"},"referencedDeclaration":3492,"src":"7011:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:17","nodeType":"VariableDeclaration","scope":3781,"src":"7031:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3773,"initialValue":{"arguments":[{"id":3768,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"7062:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3769,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"7068:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3770,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"7071:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3771,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"7074:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3767,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3558,3638,3746],"referencedDeclaration":3746,"src":"7051:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3492_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:17"},{"expression":{"arguments":[{"id":3775,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7098:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},{"id":3776,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"7105:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3774,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"7086:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3492_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3778,"nodeType":"ExpressionStatement","src":"7086:28:17"},{"expression":{"id":3779,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"7131:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3759,"id":3780,"nodeType":"Return","src":"7124:16:17"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"6760:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:17","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"hash","nameLocation":"6912:4:17","nodeType":"VariableDeclaration","scope":3782,"src":"6904:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"v","nameLocation":"6924:1:17","nodeType":"VariableDeclaration","scope":3782,"src":"6918:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3750,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"r","nameLocation":"6935:1:17","nodeType":"VariableDeclaration","scope":3782,"src":"6927:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"s","nameLocation":"6946:1:17","nodeType":"VariableDeclaration","scope":3782,"src":"6938:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:17"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"6972:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:17"},"scope":3832,"src":"6887:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3830,"nodeType":"Block","src":"7352:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7366:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3792,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7375:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"7375:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7462:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3798,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7471:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"7471:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7567:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3806,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7576:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3490,"src":"7576:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7701:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3818,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7710:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3492_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3491,"src":"7710:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3826,"nodeType":"IfStatement","src":"7697:109:17","trueBody":{"id":3825,"nodeType":"Block","src":"7742:64:17","statements":[{"errorCall":{"arguments":[{"id":3822,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"7786:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3821,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"7763:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3824,"nodeType":"RevertStatement","src":"7756:39:17"}]}},"id":3827,"nodeType":"IfStatement","src":"7563:243:17","trueBody":{"id":3816,"nodeType":"Block","src":"7613:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3812,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"7670:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:17","typeDescriptions":{}}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"7634:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"RevertStatement","src":"7627:53:17"}]}},"id":3828,"nodeType":"IfStatement","src":"7458:348:17","trueBody":{"id":3804,"nodeType":"Block","src":"7502:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3801,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"7523:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3803,"nodeType":"RevertStatement","src":"7516:30:17"}]}},"id":3829,"nodeType":"IfStatement","src":"7362:444:17","trueBody":{"id":3796,"nodeType":"Block","src":"7397:55:17","statements":[{"functionReturnParameters":3790,"id":3795,"nodeType":"Return","src":"7411:7:17"}]}}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"7153:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3831,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:17","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"error","nameLocation":"7314:5:17","nodeType":"VariableDeclaration","scope":3831,"src":"7301:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3785,"nodeType":"UserDefinedTypeName","pathNode":{"id":3784,"name":"RecoverError","nameLocations":["7301:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3492,"src":"7301:12:17"},"referencedDeclaration":3492,"src":"7301:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3492","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:17","nodeType":"VariableDeclaration","scope":3831,"src":"7321:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:17"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"7352:0:17"},"scope":3832,"src":"7280:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3833,"src":"344:7470:17","usedErrors":[3495,3500,3505],"usedEvents":[]}],"src":"112:7703:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4059],"IERC5267":[262],"MessageHashUtils":[4145],"ShortString":[1747],"ShortStrings":[1958]},"id":4060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3834,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4060,"sourceUnit":4146,"src":"139:56:18","symbolAliases":[{"foreign":{"id":3835,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4060,"sourceUnit":1959,"src":"196:62:18","symbolAliases":[{"foreign":{"id":3837,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3838,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4060,"sourceUnit":263,"src":"259:55:18","symbolAliases":[{"foreign":{"id":3840,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3843,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":262,"src":"1988:8:18"},"id":3844,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4059,"linearizedBaseContracts":[4059,262],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3846,"libraryName":{"id":3845,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":3851,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":4059,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3848,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3853,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":4059,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3855,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":4059,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3857,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":4059,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3859,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":4059,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3861,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":4059,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3864,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":4059,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":3863,"nodeType":"UserDefinedTypeName","pathNode":{"id":3862,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"2607:11:18"},"referencedDeclaration":1747,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3867,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":4059,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"},"typeName":{"id":3866,"nodeType":"UserDefinedTypeName","pathNode":{"id":3865,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"2648:11:18"},"referencedDeclaration":1747,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3869,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:18","nodeType":"VariableDeclaration","scope":4059,"src":"2742:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3868,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3871,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:18","nodeType":"VariableDeclaration","scope":4059,"src":"2826:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3870,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3928,"nodeType":"Block","src":"3483:376:18","statements":[{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"3493:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3882,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"3532:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3880,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3501:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"3501:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1747_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"src":"3493:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"id":3885,"nodeType":"ExpressionStatement","src":"3493:53:18"},{"expression":{"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"3556:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3889,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"3601:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3887,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"3567:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1899,"src":"3567:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1747_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"src":"3556:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"id":3892,"nodeType":"ExpressionStatement","src":"3556:62:18"},{"expression":{"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"3628:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3897,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3658:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3895,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:18","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3894,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3901,"nodeType":"ExpressionStatement","src":"3628:36:18"},{"expression":{"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3902,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"3674:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3906,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"3707:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3904,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:18","typeDescriptions":{}}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3903,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3910,"nodeType":"ExpressionStatement","src":"3674:42:18"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3911,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3727:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3912,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"3727:30:18"},{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3916,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"3767:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3917,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3792:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3920,"nodeType":"ExpressionStatement","src":"3767:48:18"},{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3825:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3924,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3927,"nodeType":"ExpressionStatement","src":"3825:27:18"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"2864:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3929,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"name","nameLocation":"3454:4:18","nodeType":"VariableDeclaration","scope":3929,"src":"3440:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3873,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"version","nameLocation":"3474:7:18","nodeType":"VariableDeclaration","scope":3929,"src":"3460:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3875,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:18"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[],"src":"3483:0:18"},"scope":4059,"src":"3428:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"4007:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}],"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:18","typeDescriptions":{}}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3939,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"4038:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3941,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3943,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"4070:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3952,"nodeType":"Block","src":"4146:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3949,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"4167:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3934,"id":3951,"nodeType":"Return","src":"4160:30:18"}]},"id":3953,"nodeType":"IfStatement","src":"4017:184:18","trueBody":{"id":3948,"nodeType":"Block","src":"4086:54:18","statements":[{"expression":{"id":3946,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4107:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3934,"id":3947,"nodeType":"Return","src":"4100:29:18"}]}}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"3865:75:18","text":" @dev Returns the domain separator for the current chain."},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:18","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[],"src":"3972:2:18"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"3998:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:18"},"scope":4059,"src":"3945:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"4277:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3963,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4315:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3964,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"4326:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3965,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4339:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3966,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3968,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:18","typeDescriptions":{}}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3961,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3960,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3959,"id":3974,"nodeType":"Return","src":"4287:98:18"}]},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:18","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[],"src":"4243:2:18"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3976,"src":"4268:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:18"},"scope":4059,"src":"4213:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3991,"nodeType":"Block","src":"5103:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3986,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"5153:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3988,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"5175:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3984,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"5120:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4145_$","typeString":"type(library MessageHashUtils)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4144,"src":"5120:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3983,"id":3990,"nodeType":"Return","src":"5113:73:18"}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"4398:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:18","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:18","nodeType":"VariableDeclaration","scope":3992,"src":"5043:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:18"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"5094:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:18"},"scope":4059,"src":"5017:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[261],"body":{"id":4033,"nodeType":"Block","src":"5556:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4012,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"5617:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4014,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"5644:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4016,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4020,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4059","typeString":"contract EIP712"}],"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4018,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:18","typeDescriptions":{}}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:18","typeDescriptions":{}}},"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ArrayTypeName","src":"5756:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4010,"id":4032,"nodeType":"Return","src":"5566:212:18"}]},"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"5199:24:18","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:18","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[],"src":"5249:2:18"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"fields","nameLocation":"5333:6:18","nodeType":"VariableDeclaration","scope":4034,"src":"5326:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3995,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"name","nameLocation":"5367:4:18","nodeType":"VariableDeclaration","scope":4034,"src":"5353:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3997,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"version","nameLocation":"5399:7:18","nodeType":"VariableDeclaration","scope":4034,"src":"5385:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3999,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:18","nodeType":"VariableDeclaration","scope":4034,"src":"5420:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:18","nodeType":"VariableDeclaration","scope":4034,"src":"5449:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4003,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"salt","nameLocation":"5496:4:18","nodeType":"VariableDeclaration","scope":4034,"src":"5488:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:18","nodeType":"VariableDeclaration","scope":4034,"src":"5514:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ArrayTypeName","src":"5514:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:18"},"scope":4059,"src":"5228:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4045,"nodeType":"Block","src":"6166:65:18","statements":[{"expression":{"arguments":[{"id":4042,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"6210:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4040,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"6183:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1926,"src":"6183:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1747_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4039,"id":4044,"nodeType":"Return","src":"6176:48:18"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"5791:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:18","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[],"src":"6125:2:18"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"6151:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4037,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:18"},"scope":4059,"src":"6105:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4057,"nodeType":"Block","src":"6621:71:18","statements":[{"expression":{"arguments":[{"id":4054,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"6668:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4052,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"6638:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1747","typeString":"ShortString"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1926,"src":"6638:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1747_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1747_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4051,"id":4056,"nodeType":"Return","src":"6631:54:18"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"6237:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4058,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:18","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"6580:2:18"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4058,"src":"6606:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4049,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:18"},"scope":4059,"src":"6557:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4060,"src":"1960:4734:18","usedErrors":[1755,1757],"usedEvents":[242]}],"src":"113:6582:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4145],"Strings":[3484]},"id":4146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4146,"sourceUnit":3485,"src":"149:39:19","symbolAliases":[{"foreign":{"id":4062,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4145,"linearizedBaseContracts":[4145],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4073,"nodeType":"Block","src":"1339:341:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:19"},"nodeType":"YulFunctionCall","src":"1388:48:19"},"nodeType":"YulExpressionStatement","src":"1388:48:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:19","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:19"},"nodeType":"YulFunctionCall","src":"1490:25:19"},"nodeType":"YulExpressionStatement","src":"1490:25:19"},{"nodeType":"YulAssignment","src":"1569:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:19"},"nodeType":"YulFunctionCall","src":"1579:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4070,"isOffset":false,"isSlot":false,"src":"1569:6:19","valueSize":1},{"declaration":4067,"isOffset":false,"isSlot":false,"src":"1503:11:19","valueSize":1}],"flags":["memory-safe"],"id":4072,"nodeType":"InlineAssembly","src":"1349:325:19"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"552:690:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:19","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:19","nodeType":"VariableDeclaration","scope":4074,"src":"1279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:19"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"digest","nameLocation":"1331:6:19","nodeType":"VariableDeclaration","scope":4074,"src":"1323:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:19"},"scope":4145,"src":"1247:433:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"2257:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4091,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:19","memberName":"length","nodeType":"MemberAccess","src":"2366:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4089,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2349:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3484_$","typeString":"type(library Strings)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2196,"src":"2349:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4087,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:19","typeDescriptions":{}}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4095,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2384:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4083,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:19","typeDescriptions":{}}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4081,"id":4098,"nodeType":"Return","src":"2267:126:19"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"1686:480:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:19","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"message","nameLocation":"2216:7:19","nodeType":"VariableDeclaration","scope":4100,"src":"2203:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4076,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:19"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"2248:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:19"},"scope":4145,"src":"2171:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"2854:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4114,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"2910:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4115,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4111,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4110,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4109,"id":4118,"nodeType":"Return","src":"2864:63:19"}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"2406:332:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:19","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"validator","nameLocation":"2792:9:19","nodeType":"VariableDeclaration","scope":4120,"src":"2784:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"data","nameLocation":"2816:4:19","nodeType":"VariableDeclaration","scope":4120,"src":"2803:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:19"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"2845:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:19"},"scope":4145,"src":"2743:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"3216:216:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:19","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:19","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:19"},"nodeType":"YulFunctionCall","src":"3265:24:19"},"nodeType":"YulExpressionStatement","src":"3265:24:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:19","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:19","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:19"},"nodeType":"YulFunctionCall","src":"3315:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:19"},"nodeType":"YulFunctionCall","src":"3302:32:19"},"nodeType":"YulExpressionStatement","src":"3302:32:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:19","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:19"},"nodeType":"YulFunctionCall","src":"3347:25:19"},"nodeType":"YulExpressionStatement","src":"3347:25:19"},{"nodeType":"YulAssignment","src":"3385:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:19","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:19"},"nodeType":"YulFunctionCall","src":"3395:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4128,"isOffset":false,"isSlot":false,"src":"3385:6:19","valueSize":1},{"declaration":4125,"isOffset":false,"isSlot":false,"src":"3360:11:19","valueSize":1},{"declaration":4123,"isOffset":false,"isSlot":false,"src":"3323:9:19","valueSize":1}],"flags":["memory-safe"],"id":4130,"nodeType":"InlineAssembly","src":"3226:200:19"}]},"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"2940:129:19","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:19","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"validator","nameLocation":"3132:9:19","nodeType":"VariableDeclaration","scope":4132,"src":"3124:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4122,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:19","nodeType":"VariableDeclaration","scope":4132,"src":"3151:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:19"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"digest","nameLocation":"3208:6:19","nodeType":"VariableDeclaration","scope":4132,"src":"3200:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:19"},"scope":4145,"src":"3074:358:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4143,"nodeType":"Block","src":"3983:265:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:19"},"nodeType":"YulFunctionCall","src":"4043:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:19"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:19"},"nodeType":"YulFunctionCall","src":"4067:23:19"},"nodeType":"YulExpressionStatement","src":"4067:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:19"},"nodeType":"YulFunctionCall","src":"4110:14:19"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:19"},"nodeType":"YulFunctionCall","src":"4103:39:19"},"nodeType":"YulExpressionStatement","src":"4103:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:19"},"nodeType":"YulFunctionCall","src":"4162:14:19"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:19"},"nodeType":"YulFunctionCall","src":"4155:34:19"},"nodeType":"YulExpressionStatement","src":"4155:34:19"},{"nodeType":"YulAssignment","src":"4202:30:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:19"},"nodeType":"YulFunctionCall","src":"4212:20:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4140,"isOffset":false,"isSlot":false,"src":"4202:6:19","valueSize":1},{"declaration":4135,"isOffset":false,"isSlot":false,"src":"4126:15:19","valueSize":1},{"declaration":4137,"isOffset":false,"isSlot":false,"src":"4178:10:19","valueSize":1}],"flags":["memory-safe"],"id":4142,"nodeType":"InlineAssembly","src":"3993:249:19"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"3438:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4144,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:19","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:19","nodeType":"VariableDeclaration","scope":4144,"src":"3899:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:19","nodeType":"VariableDeclaration","scope":4144,"src":"3924:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:19"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"digest","nameLocation":"3975:6:19","nodeType":"VariableDeclaration","scope":4144,"src":"3967:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:19"},"scope":4145,"src":"3874:374:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4146,"src":"521:3729:19","usedErrors":[],"usedEvents":[]}],"src":"123:4128:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4157]},"id":4158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4147,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"142:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4157,"linearizedBaseContracts":[4157],"name":"IERC165","nameLocation":"433:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"447:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4156,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:20","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:20","nodeType":"VariableDeclaration","scope":4156,"src":"819:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4150,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:20"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4156,"src":"862:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4153,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:20"},"scope":4157,"src":"792:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4158,"src":"423:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:756:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5778],"Panic":[1564],"SafeCast":[7543]},"id":5779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5779,"sourceUnit":1565,"src":"129:35:21","symbolAliases":[{"foreign":{"id":4160,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5779,"sourceUnit":7544,"src":"165:40:21","symbolAliases":[{"foreign":{"id":4162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5778,"linearizedBaseContracts":[5778],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4169,"members":[{"id":4165,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":4166,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":4167,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":4168,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":4182,"nodeType":"Block","src":"731:112:21","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:21","statements":[{"nodeType":"YulAssignment","src":"780:16:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:21"},"nodeType":"YulFunctionCall","src":"787:9:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:21"}]},{"nodeType":"YulAssignment","src":"809:18:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:21"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:21"},"nodeType":"YulFunctionCall","src":"817:10:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4172,"isOffset":false,"isSlot":false,"src":"791:1:21","valueSize":1},{"declaration":4172,"isOffset":false,"isSlot":false,"src":"825:1:21","valueSize":1},{"declaration":4174,"isOffset":false,"isSlot":false,"src":"794:1:21","valueSize":1},{"declaration":4177,"isOffset":false,"isSlot":false,"src":"809:4:21","valueSize":1},{"declaration":4179,"isOffset":false,"isSlot":false,"src":"780:3:21","valueSize":1},{"declaration":4179,"isOffset":false,"isSlot":false,"src":"820:3:21","valueSize":1}],"flags":["memory-safe"],"id":4181,"nodeType":"InlineAssembly","src":"741:96:21"}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"475:163:21","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:21","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"a","nameLocation":"667:1:21","nodeType":"VariableDeclaration","scope":4183,"src":"659:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"b","nameLocation":"678:1:21","nodeType":"VariableDeclaration","scope":4183,"src":"670:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:21"},"returnParameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"high","nameLocation":"712:4:21","nodeType":"VariableDeclaration","scope":4183,"src":"704:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"low","nameLocation":"726:3:21","nodeType":"VariableDeclaration","scope":4183,"src":"718:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:21"},"scope":5778,"src":"643:200:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4196,"nodeType":"Block","src":"1115:462:21","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:21"},"nodeType":"YulFunctionCall","src":"1474:6:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:21"},"nodeType":"YulFunctionCall","src":"1461:20:21"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:21","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:21"},"nodeType":"YulFunctionCall","src":"1501:9:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:21"}]},{"nodeType":"YulAssignment","src":"1523:38:21","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:21"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:21"},"nodeType":"YulFunctionCall","src":"1535:12:21"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:21"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:21"},"nodeType":"YulFunctionCall","src":"1549:11:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:21"},"nodeType":"YulFunctionCall","src":"1531:30:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4186,"isOffset":false,"isSlot":false,"src":"1468:1:21","valueSize":1},{"declaration":4186,"isOffset":false,"isSlot":false,"src":"1505:1:21","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"1471:1:21","valueSize":1},{"declaration":4188,"isOffset":false,"isSlot":false,"src":"1508:1:21","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"1523:4:21","valueSize":1},{"declaration":4193,"isOffset":false,"isSlot":false,"src":"1494:3:21","valueSize":1},{"declaration":4193,"isOffset":false,"isSlot":false,"src":"1543:3:21","valueSize":1},{"declaration":4193,"isOffset":false,"isSlot":false,"src":"1556:3:21","valueSize":1}],"flags":["memory-safe"],"id":4195,"nodeType":"InlineAssembly","src":"1412:159:21"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"849:173:21","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4197,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:21","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"a","nameLocation":"1051:1:21","nodeType":"VariableDeclaration","scope":4197,"src":"1043:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"b","nameLocation":"1062:1:21","nodeType":"VariableDeclaration","scope":4197,"src":"1054:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:21"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"high","nameLocation":"1096:4:21","nodeType":"VariableDeclaration","scope":4197,"src":"1088:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"low","nameLocation":"1110:3:21","nodeType":"VariableDeclaration","scope":4197,"src":"1102:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:21"},"scope":5778,"src":"1027:550:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4231,"nodeType":"Block","src":"1784:149:21","statements":[{"id":4230,"nodeType":"UncheckedBlock","src":"1794:133:21","statements":[{"assignments":[4210],"declarations":[{"constant":false,"id":4210,"mutability":"mutable","name":"c","nameLocation":"1826:1:21","nodeType":"VariableDeclaration","scope":4230,"src":"1818:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4214,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"1830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:21"},{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"1849:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"1859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"1864:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"nodeType":"ExpressionStatement","src":"1849:16:21"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"1879:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"1888:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4225,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"1908:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4223,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"1892:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"1892:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"1879:37:21"}]}]},"documentation":{"id":4198,"nodeType":"StructuredDocumentation","src":"1583:105:21","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4232,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:21","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"a","nameLocation":"1717:1:21","nodeType":"VariableDeclaration","scope":4232,"src":"1709:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"b","nameLocation":"1728:1:21","nodeType":"VariableDeclaration","scope":4232,"src":"1720:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:21"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"success","nameLocation":"1759:7:21","nodeType":"VariableDeclaration","scope":4232,"src":"1754:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4204,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"result","nameLocation":"1776:6:21","nodeType":"VariableDeclaration","scope":4232,"src":"1768:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:21"},"scope":5778,"src":"1693:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"2143:149:21","statements":[{"id":4265,"nodeType":"UncheckedBlock","src":"2153:133:21","statements":[{"assignments":[4245],"declarations":[{"constant":false,"id":4245,"mutability":"mutable","name":"c","nameLocation":"2185:1:21","nodeType":"VariableDeclaration","scope":4265,"src":"2177:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"2189:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"2193:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:21"},{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4250,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"2208:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"2218:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"2223:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4255,"nodeType":"ExpressionStatement","src":"2208:16:21"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"2238:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"2247:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"2267:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"2251:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"2251:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"2238:37:21"}]}]},"documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"1939:108:21","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:21","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"a","nameLocation":"2076:1:21","nodeType":"VariableDeclaration","scope":4267,"src":"2068:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"b","nameLocation":"2087:1:21","nodeType":"VariableDeclaration","scope":4267,"src":"2079:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:21"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"success","nameLocation":"2118:7:21","nodeType":"VariableDeclaration","scope":4267,"src":"2113:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"2135:6:21","nodeType":"VariableDeclaration","scope":4267,"src":"2127:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:21"},"scope":5778,"src":"2052:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4296,"nodeType":"Block","src":"2505:391:21","statements":[{"id":4295,"nodeType":"UncheckedBlock","src":"2515:375:21","statements":[{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"c","nameLocation":"2547:1:21","nodeType":"VariableDeclaration","scope":4295,"src":"2539:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"2551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2555:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:21"},{"AST":{"nodeType":"YulBlock","src":"2595:188:21","statements":[{"nodeType":"YulAssignment","src":"2727:42:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:21"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:21"},"nodeType":"YulFunctionCall","src":"2744:9:21"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:21"},"nodeType":"YulFunctionCall","src":"2741:16:21"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:21"},"nodeType":"YulFunctionCall","src":"2759:9:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:21"},"nodeType":"YulFunctionCall","src":"2738:31:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4270,"isOffset":false,"isSlot":false,"src":"2751:1:21","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"2766:1:21","valueSize":1},{"declaration":4272,"isOffset":false,"isSlot":false,"src":"2755:1:21","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"2748:1:21","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"2727:7:21","valueSize":1}],"flags":["memory-safe"],"id":4285,"nodeType":"InlineAssembly","src":"2570:213:21"},{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"2842:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"2851:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4290,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"2871:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"2855:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"2855:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4294,"nodeType":"ExpressionStatement","src":"2842:37:21"}]}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"2298:111:21","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4297,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:21","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"a","nameLocation":"2438:1:21","nodeType":"VariableDeclaration","scope":4297,"src":"2430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"b","nameLocation":"2449:1:21","nodeType":"VariableDeclaration","scope":4297,"src":"2441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:21"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"success","nameLocation":"2480:7:21","nodeType":"VariableDeclaration","scope":4297,"src":"2475:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4274,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4277,"mutability":"mutable","name":"result","nameLocation":"2497:6:21","nodeType":"VariableDeclaration","scope":4297,"src":"2489:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:21"},"scope":5778,"src":"2414:482:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"3111:231:21","statements":[{"id":4316,"nodeType":"UncheckedBlock","src":"3121:215:21","statements":[{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3145:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"3155:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4314,"nodeType":"ExpressionStatement","src":"3145:15:21"},{"AST":{"nodeType":"YulBlock","src":"3199:127:21","statements":[{"nodeType":"YulAssignment","src":"3293:19:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:21"},"nodeType":"YulFunctionCall","src":"3303:9:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4300,"isOffset":false,"isSlot":false,"src":"3307:1:21","valueSize":1},{"declaration":4302,"isOffset":false,"isSlot":false,"src":"3310:1:21","valueSize":1},{"declaration":4307,"isOffset":false,"isSlot":false,"src":"3293:6:21","valueSize":1}],"flags":["memory-safe"],"id":4315,"nodeType":"InlineAssembly","src":"3174:152:21"}]}]},"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"2902:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:21","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"a","nameLocation":"3044:1:21","nodeType":"VariableDeclaration","scope":4318,"src":"3036:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"b","nameLocation":"3055:1:21","nodeType":"VariableDeclaration","scope":4318,"src":"3047:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:21"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"success","nameLocation":"3086:7:21","nodeType":"VariableDeclaration","scope":4318,"src":"3081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4304,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"result","nameLocation":"3103:6:21","nodeType":"VariableDeclaration","scope":4318,"src":"3095:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:21"},"scope":5778,"src":"3020:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"3567:231:21","statements":[{"id":4337,"nodeType":"UncheckedBlock","src":"3577:215:21","statements":[{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"3601:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"3611:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4335,"nodeType":"ExpressionStatement","src":"3601:15:21"},{"AST":{"nodeType":"YulBlock","src":"3655:127:21","statements":[{"nodeType":"YulAssignment","src":"3749:19:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:21"},"nodeType":"YulFunctionCall","src":"3759:9:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4321,"isOffset":false,"isSlot":false,"src":"3763:1:21","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"3766:1:21","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"3749:6:21","valueSize":1}],"flags":["memory-safe"],"id":4336,"nodeType":"InlineAssembly","src":"3630:152:21"}]}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"3348:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:21","nodeType":"FunctionDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"a","nameLocation":"3500:1:21","nodeType":"VariableDeclaration","scope":4339,"src":"3492:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"b","nameLocation":"3511:1:21","nodeType":"VariableDeclaration","scope":4339,"src":"3503:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:21"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"success","nameLocation":"3542:7:21","nodeType":"VariableDeclaration","scope":4339,"src":"3537:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4325,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"result","nameLocation":"3559:6:21","nodeType":"VariableDeclaration","scope":4339,"src":"3551:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:21"},"scope":5778,"src":"3476:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4368,"nodeType":"Block","src":"3989:122:21","statements":[{"assignments":[4350,4352],"declarations":[{"constant":false,"id":4350,"mutability":"mutable","name":"success","nameLocation":"4005:7:21","nodeType":"VariableDeclaration","scope":4368,"src":"4000:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4349,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4352,"mutability":"mutable","name":"result","nameLocation":"4022:6:21","nodeType":"VariableDeclaration","scope":4368,"src":"4014:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4357,"initialValue":{"arguments":[{"id":4354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"4039:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"4042:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4353,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4032:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:21"},{"expression":{"arguments":[{"id":4359,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"4069:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"4078:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4361,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:21","memberName":"max","nodeType":"MemberAccess","src":"4086:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4358,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4061:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4348,"id":4367,"nodeType":"Return","src":"4054:50:21"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"3804:103:21","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4369,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:21","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"a","nameLocation":"3943:1:21","nodeType":"VariableDeclaration","scope":4369,"src":"3935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"b","nameLocation":"3954:1:21","nodeType":"VariableDeclaration","scope":4369,"src":"3946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:21"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4369,"src":"3980:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:21"},"scope":5778,"src":"3912:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"4294:73:21","statements":[{"assignments":[null,4380],"declarations":[null,{"constant":false,"id":4380,"mutability":"mutable","name":"result","nameLocation":"4315:6:21","nodeType":"VariableDeclaration","scope":4388,"src":"4307:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4385,"initialValue":{"arguments":[{"id":4382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"4332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4335:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4381,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"4325:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:21"},{"expression":{"id":4386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"4354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4378,"id":4387,"nodeType":"Return","src":"4347:13:21"}]},"documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"4117:95:21","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:21","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"a","nameLocation":"4248:1:21","nodeType":"VariableDeclaration","scope":4389,"src":"4240:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"b","nameLocation":"4259:1:21","nodeType":"VariableDeclaration","scope":4389,"src":"4251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:21"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4389,"src":"4285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:21"},"scope":5778,"src":"4217:150:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"4564:122:21","statements":[{"assignments":[4400,4402],"declarations":[{"constant":false,"id":4400,"mutability":"mutable","name":"success","nameLocation":"4580:7:21","nodeType":"VariableDeclaration","scope":4418,"src":"4575:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4399,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"result","nameLocation":"4597:6:21","nodeType":"VariableDeclaration","scope":4418,"src":"4589:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4407,"initialValue":{"arguments":[{"id":4404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4614:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4405,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"4617:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4403,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"4607:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:21"},{"expression":{"arguments":[{"id":4409,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"4644:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"4653:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:21","memberName":"max","nodeType":"MemberAccess","src":"4661:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4408,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4636:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4398,"id":4417,"nodeType":"Return","src":"4629:50:21"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"4373:109:21","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:21","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"a","nameLocation":"4518:1:21","nodeType":"VariableDeclaration","scope":4419,"src":"4510:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"b","nameLocation":"4529:1:21","nodeType":"VariableDeclaration","scope":4419,"src":"4521:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:21"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4419,"src":"4555:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:21"},"scope":5778,"src":"4487:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4445,"nodeType":"Block","src":"5158:207:21","statements":[{"id":4444,"nodeType":"UncheckedBlock","src":"5168:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"5306:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"5312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"5316:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4438,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5337:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"5321:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"5321:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4430,"id":4443,"nodeType":"Return","src":"5299:49:21"}]}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"4692:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4446,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:21","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"condition","nameLocation":"5093:9:21","nodeType":"VariableDeclaration","scope":4446,"src":"5088:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4421,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"a","nameLocation":"5112:1:21","nodeType":"VariableDeclaration","scope":4446,"src":"5104:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"b","nameLocation":"5123:1:21","nodeType":"VariableDeclaration","scope":4446,"src":"5115:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:21"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4446,"src":"5149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:21"},"scope":5778,"src":"5071:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4464,"nodeType":"Block","src":"5502:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"5527:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"5531:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"5534:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"5537:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4456,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"5519:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4455,"id":4463,"nodeType":"Return","src":"5512:27:21"}]},"documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"5371:59:21","text":" @dev Returns the largest of two numbers."},"id":4465,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:21","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"a","nameLocation":"5456:1:21","nodeType":"VariableDeclaration","scope":4465,"src":"5448:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"b","nameLocation":"5467:1:21","nodeType":"VariableDeclaration","scope":4465,"src":"5459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:21"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4465,"src":"5493:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:21"},"scope":5778,"src":"5435:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4483,"nodeType":"Block","src":"5684:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"5709:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"5713:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"5716:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"5719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4475,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"5701:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4474,"id":4482,"nodeType":"Return","src":"5694:27:21"}]},"documentation":{"id":4466,"nodeType":"StructuredDocumentation","src":"5552:60:21","text":" @dev Returns the smallest of two numbers."},"id":4484,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:21","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"a","nameLocation":"5638:1:21","nodeType":"VariableDeclaration","scope":4484,"src":"5630:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"b","nameLocation":"5649:1:21","nodeType":"VariableDeclaration","scope":4484,"src":"5641:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:21"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4484,"src":"5675:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:21"},"scope":5778,"src":"5617:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4506,"nodeType":"Block","src":"5912:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"5967:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5971:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"5977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5981:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4493,"id":4505,"nodeType":"Return","src":"5959:28:21"}]},"documentation":{"id":4485,"nodeType":"StructuredDocumentation","src":"5734:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4507,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:21","nodeType":"FunctionDefinition","parameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"a","nameLocation":"5866:1:21","nodeType":"VariableDeclaration","scope":4507,"src":"5858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4489,"mutability":"mutable","name":"b","nameLocation":"5877:1:21","nodeType":"VariableDeclaration","scope":4507,"src":"5869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:21"},"returnParameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4507,"src":"5903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:21"},"scope":5778,"src":"5841:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4547,"nodeType":"Block","src":"6286:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6300:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"6296:150:21","trueBody":{"id":4527,"nodeType":"Block","src":"6308:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":4523,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6412:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"6412:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4520,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6400:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"6400:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"ExpressionStatement","src":"6400:35:21"}]}},{"id":4546,"nodeType":"UncheckedBlock","src":"6829:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"6876:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"6860:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"6860:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"6887:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4516,"id":4545,"nodeType":"Return","src":"6853:49:21"}]}]},"documentation":{"id":4508,"nodeType":"StructuredDocumentation","src":"6000:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:21","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"a","nameLocation":"6240:1:21","nodeType":"VariableDeclaration","scope":4548,"src":"6232:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4512,"mutability":"mutable","name":"b","nameLocation":"6251:1:21","nodeType":"VariableDeclaration","scope":4548,"src":"6243:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:21"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4548,"src":"6277:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:21"},"scope":5778,"src":"6215:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"7340:3585:21","statements":[{"id":4682,"nodeType":"UncheckedBlock","src":"7350:3569:21","statements":[{"assignments":[4561,4563],"declarations":[{"constant":false,"id":4561,"mutability":"mutable","name":"high","nameLocation":"7383:4:21","nodeType":"VariableDeclaration","scope":4682,"src":"7375:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"low","nameLocation":"7397:3:21","nodeType":"VariableDeclaration","scope":4682,"src":"7389:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4568,"initialValue":{"arguments":[{"id":4565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"7411:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4566,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"7414:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4564,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"7404:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"7498:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"7494:365:21","trueBody":{"id":4576,"nodeType":"Block","src":"7509:350:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"7827:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"7833:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4559,"id":4575,"nodeType":"Return","src":"7820:24:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"7969:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4579,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"7984:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4596,"nodeType":"IfStatement","src":"7965:142:21","trueBody":{"id":4595,"nodeType":"Block","src":"7990:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8028:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4588,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"8046:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"8046:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4590,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"8070:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1527,"src":"8070:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4584,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"8020:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4581,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"8008:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"8008:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4594,"nodeType":"ExpressionStatement","src":"8008:84:21"}]}},{"assignments":[4598],"declarations":[{"constant":false,"id":4598,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:21","nodeType":"VariableDeclaration","scope":4682,"src":"8359:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4599,"nodeType":"VariableDeclarationStatement","src":"8359:17:21"},{"AST":{"nodeType":"YulBlock","src":"8415:283:21","statements":[{"nodeType":"YulAssignment","src":"8484:38:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:21"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:21"},"nodeType":"YulFunctionCall","src":"8497:25:21"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:21"}]},{"nodeType":"YulAssignment","src":"8604:37:21","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:21"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:21"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:21"},"nodeType":"YulFunctionCall","src":"8622:18:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:21"},"nodeType":"YulFunctionCall","src":"8612:29:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:21"}]},{"nodeType":"YulAssignment","src":"8658:26:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:21"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:21"},"nodeType":"YulFunctionCall","src":"8665:19:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4555,"isOffset":false,"isSlot":false,"src":"8510:11:21","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"8604:4:21","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"8616:4:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"8636:3:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"8658:3:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"8669:3:21","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"8484:9:21","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"8625:9:21","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"8674:9:21","valueSize":1},{"declaration":4551,"isOffset":false,"isSlot":false,"src":"8504:1:21","valueSize":1},{"declaration":4553,"isOffset":false,"isSlot":false,"src":"8507:1:21","valueSize":1}],"flags":["memory-safe"],"id":4600,"nodeType":"InlineAssembly","src":"8390:308:21"},{"assignments":[4602],"declarations":[{"constant":false,"id":4602,"mutability":"mutable","name":"twos","nameLocation":"8910:4:21","nodeType":"VariableDeclaration","scope":4682,"src":"8902:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8917:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8936:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:21"},{"AST":{"nodeType":"YulBlock","src":"8987:359:21","statements":[{"nodeType":"YulAssignment","src":"9052:37:21","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:21"},"nodeType":"YulFunctionCall","src":"9067:22:21"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:21"}]},{"nodeType":"YulAssignment","src":"9153:21:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:21"},"nodeType":"YulFunctionCall","src":"9160:14:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:21"}]},{"nodeType":"YulAssignment","src":"9293:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:21","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:21"},"nodeType":"YulFunctionCall","src":"9309:12:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:21"},"nodeType":"YulFunctionCall","src":"9305:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:21"},"nodeType":"YulFunctionCall","src":"9301:31:21"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4555,"isOffset":false,"isSlot":false,"src":"9052:11:21","valueSize":1},{"declaration":4555,"isOffset":false,"isSlot":false,"src":"9071:11:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"9153:3:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"9164:3:21","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"9084:4:21","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"9169:4:21","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"9293:4:21","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"9316:4:21","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"9323:4:21","valueSize":1}],"flags":["memory-safe"],"id":4610,"nodeType":"InlineAssembly","src":"8962:384:21"},{"expression":{"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"9409:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"9416:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4613,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"9423:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4616,"nodeType":"ExpressionStatement","src":"9409:18:21"},{"assignments":[4618],"declarations":[{"constant":false,"id":4618,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:21","nodeType":"VariableDeclaration","scope":4682,"src":"9762:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4625,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4620,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"9785:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:21"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10033:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"10018:36:21"},{"expression":{"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10103:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10117:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4641,"nodeType":"ExpressionStatement","src":"10088:36:21"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4645,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"10160:36:21"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4650,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4652,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10246:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4653,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4657,"nodeType":"ExpressionStatement","src":"10231:36:21"},{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10304:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10319:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10333:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4665,"nodeType":"ExpressionStatement","src":"10304:36:21"},{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4666,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10393:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4669,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ExpressionStatement","src":"10378:36:21"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"10859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"10868:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4676,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"10874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"10859:22:21"},{"expression":{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"10902:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4559,"id":4681,"nodeType":"Return","src":"10895:13:21"}]}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"6925:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:21","nodeType":"FunctionDefinition","parameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"x","nameLocation":"7266:1:21","nodeType":"VariableDeclaration","scope":4684,"src":"7258:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4553,"mutability":"mutable","name":"y","nameLocation":"7277:1:21","nodeType":"VariableDeclaration","scope":4684,"src":"7269:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:21","nodeType":"VariableDeclaration","scope":4684,"src":"7280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:21"},"returnParameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"result","nameLocation":"7332:6:21","nodeType":"VariableDeclaration","scope":4684,"src":"7324:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:21"},"scope":5778,"src":"7242:3683:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4720,"nodeType":"Block","src":"11164:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4700,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"11188:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4701,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"11191:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4702,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"11194:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4699,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4684,4721],"referencedDeclaration":4684,"src":"11181:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4707,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"11242:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":4706,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"11225:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4710,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"11262:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4711,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"11265:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"11268:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4704,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"11209:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"11209:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4698,"id":4719,"nodeType":"Return","src":"11174:111:21"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"10931:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4721,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:21","nodeType":"FunctionDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"x","nameLocation":"11078:1:21","nodeType":"VariableDeclaration","scope":4721,"src":"11070:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"y","nameLocation":"11089:1:21","nodeType":"VariableDeclaration","scope":4721,"src":"11081:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:21","nodeType":"VariableDeclaration","scope":4721,"src":"11092:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4694,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:21","nodeType":"VariableDeclaration","scope":4721,"src":"11113:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":4693,"nodeType":"UserDefinedTypeName","pathNode":{"id":4692,"name":"Rounding","nameLocations":["11113:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"11113:8:21"},"referencedDeclaration":4169,"src":"11113:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:21"},"returnParameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4721,"src":"11155:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:21"},"scope":5778,"src":"11054:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4770,"nodeType":"Block","src":"11500:245:21","statements":[{"id":4769,"nodeType":"UncheckedBlock","src":"11510:229:21","statements":[{"assignments":[4734,4736],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"high","nameLocation":"11543:4:21","nodeType":"VariableDeclaration","scope":4769,"src":"11535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"low","nameLocation":"11557:3:21","nodeType":"VariableDeclaration","scope":4769,"src":"11549:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"initialValue":{"arguments":[{"id":4738,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"11571:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4739,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"11574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4737,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"11564:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"11594:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4744,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11607:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4755,"nodeType":"IfStatement","src":"11590:86:21","trueBody":{"id":4754,"nodeType":"Block","src":"11610:66:21","statements":[{"expression":{"arguments":[{"expression":{"id":4750,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"11640:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1527,"src":"11640:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4747,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"11628:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"11628:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"ExpressionStatement","src":"11628:33:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"11697:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4758,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11712:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"11719:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4764,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"11726:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4732,"id":4768,"nodeType":"Return","src":"11689:39:21"}]}]},"documentation":{"id":4722,"nodeType":"StructuredDocumentation","src":"11298:111:21","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4771,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:21","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"x","nameLocation":"11438:1:21","nodeType":"VariableDeclaration","scope":4771,"src":"11430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"y","nameLocation":"11449:1:21","nodeType":"VariableDeclaration","scope":4771,"src":"11441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"n","nameLocation":"11458:1:21","nodeType":"VariableDeclaration","scope":4771,"src":"11452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4727,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:21"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"result","nameLocation":"11492:6:21","nodeType":"VariableDeclaration","scope":4771,"src":"11484:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:21"},"scope":5778,"src":"11414:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4809,"nodeType":"Block","src":"11963:113:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4788,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4789,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"11993:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4786,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4771,4810],"referencedDeclaration":4771,"src":"11980:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4794,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"12031:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":4793,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"12014:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"12051:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4798,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"12054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4800,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"12062:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4791,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"11998:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"11998:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4785,"id":4808,"nodeType":"Return","src":"11973:96:21"}]},"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"11751:109:21","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:21","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"x","nameLocation":"11889:1:21","nodeType":"VariableDeclaration","scope":4810,"src":"11881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"y","nameLocation":"11900:1:21","nodeType":"VariableDeclaration","scope":4810,"src":"11892:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"n","nameLocation":"11909:1:21","nodeType":"VariableDeclaration","scope":4810,"src":"11903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4777,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:21","nodeType":"VariableDeclaration","scope":4810,"src":"11912:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":4780,"nodeType":"UserDefinedTypeName","pathNode":{"id":4779,"name":"Rounding","nameLocations":["11912:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"11912:8:21"},"referencedDeclaration":4169,"src":"11912:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:21"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4810,"src":"11954:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:21"},"scope":5778,"src":"11865:211:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4906,"nodeType":"Block","src":"12710:1849:21","statements":[{"id":4905,"nodeType":"UncheckedBlock","src":"12720:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"12748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4825,"nodeType":"IfStatement","src":"12744:20:21","trueBody":{"expression":{"hexValue":"30","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4819,"id":4824,"nodeType":"Return","src":"12756:8:21"}},{"assignments":[4827],"declarations":[{"constant":false,"id":4827,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:21","nodeType":"VariableDeclaration","scope":4905,"src":"13235:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"13255:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4829,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"13259:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:21"},{"assignments":[4833],"declarations":[{"constant":false,"id":4833,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:21","nodeType":"VariableDeclaration","scope":4905,"src":"13274:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4835,"initialValue":{"id":4834,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"13288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:21"},{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"x","nameLocation":"13432:1:21","nodeType":"VariableDeclaration","scope":4905,"src":"13425:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4836,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4839,"initialValue":{"hexValue":"30","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:21"},{"assignments":[4841],"declarations":[{"constant":false,"id":4841,"mutability":"mutable","name":"y","nameLocation":"13458:1:21","nodeType":"VariableDeclaration","scope":4905,"src":"13451:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4840,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4843,"initialValue":{"hexValue":"31","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:21"},{"body":{"id":4880,"nodeType":"Block","src":"13501:882:21","statements":[{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:21","nodeType":"VariableDeclaration","scope":4880,"src":"13519:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13538:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4850,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"13544:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:21"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4853,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4854,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"13578:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4855,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4856,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"13678:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"13923:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"13929:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4859,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"13941:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"ExpressionStatement","src":"13572:395:21"},{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4865,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"13987:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4866,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"13990:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4867,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4868,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"14072:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"14326:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"14330:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4873,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"14341:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4871,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:21","typeDescriptions":{}}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4879,"nodeType":"ExpressionStatement","src":"13986:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"13485:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4881,"nodeType":"WhileStatement","src":"13478:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"14401:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"14397:22:21","trueBody":{"expression":{"hexValue":"30","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4819,"id":4886,"nodeType":"Return","src":"14411:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"14470:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4892,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"14477:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:21","subExpression":{"id":4895,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"14490:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:21","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"14502:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:21","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"14462:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4819,"id":4904,"nodeType":"Return","src":"14455:50:21"}]}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"12082:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:21","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"a","nameLocation":"12664:1:21","nodeType":"VariableDeclaration","scope":4907,"src":"12656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4815,"mutability":"mutable","name":"n","nameLocation":"12675:1:21","nodeType":"VariableDeclaration","scope":4907,"src":"12667:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:21"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"12701:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:21"},"scope":5778,"src":"12640:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4927,"nodeType":"Block","src":"15159:82:21","statements":[{"id":4926,"nodeType":"UncheckedBlock","src":"15169:66:21","statements":[{"expression":{"arguments":[{"id":4919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"15212:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4920,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"15215:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4923,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"15222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4917,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"15200:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5778_$","typeString":"type(library Math)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15200:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4916,"id":4925,"nodeType":"Return","src":"15193:31:21"}]}]},"documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"14565:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:21","nodeType":"FunctionDefinition","parameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"a","nameLocation":"15113:1:21","nodeType":"VariableDeclaration","scope":4928,"src":"15105:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4912,"mutability":"mutable","name":"p","nameLocation":"15124:1:21","nodeType":"VariableDeclaration","scope":4928,"src":"15116:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:21"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"15150:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:21"},"scope":5778,"src":"15084:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"16011:174:21","statements":[{"assignments":[4941,4943],"declarations":[{"constant":false,"id":4941,"mutability":"mutable","name":"success","nameLocation":"16027:7:21","nodeType":"VariableDeclaration","scope":4963,"src":"16022:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4940,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4943,"mutability":"mutable","name":"result","nameLocation":"16044:6:21","nodeType":"VariableDeclaration","scope":4963,"src":"16036:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4949,"initialValue":{"arguments":[{"id":4945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"16064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4946,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"16067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4947,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"16070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4988,5070],"referencedDeclaration":4988,"src":"16054:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:21"},{"condition":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:21","subExpression":{"id":4950,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"16087:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"16082:74:21","trueBody":{"id":4959,"nodeType":"Block","src":"16096:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":4955,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"16122:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4952,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"16110:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"16110:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"ExpressionStatement","src":"16110:35:21"}]}},{"expression":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"16172:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4939,"id":4962,"nodeType":"Return","src":"16165:13:21"}]},"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"15247:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:21","nodeType":"FunctionDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"b","nameLocation":"15954:1:21","nodeType":"VariableDeclaration","scope":4964,"src":"15946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4933,"mutability":"mutable","name":"e","nameLocation":"15965:1:21","nodeType":"VariableDeclaration","scope":4964,"src":"15957:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4935,"mutability":"mutable","name":"m","nameLocation":"15976:1:21","nodeType":"VariableDeclaration","scope":4964,"src":"15968:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:21"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4964,"src":"16002:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:21"},"scope":5778,"src":"15930:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4987,"nodeType":"Block","src":"17039:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"17053:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"17049:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4977,"id":4984,"nodeType":"Return","src":"17061:17:21"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:21"},"nodeType":"YulFunctionCall","src":"17138:11:21"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:21"},"nodeType":"YulFunctionCall","src":"18050:17:21"},"nodeType":"YulExpressionStatement","src":"18050:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:21"},"nodeType":"YulFunctionCall","src":"18087:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:21"},"nodeType":"YulFunctionCall","src":"18080:28:21"},"nodeType":"YulExpressionStatement","src":"18080:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:21"},"nodeType":"YulFunctionCall","src":"18128:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:21"},"nodeType":"YulFunctionCall","src":"18121:28:21"},"nodeType":"YulExpressionStatement","src":"18121:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:21"},"nodeType":"YulFunctionCall","src":"18169:14:21"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:21"},"nodeType":"YulFunctionCall","src":"18162:25:21"},"nodeType":"YulExpressionStatement","src":"18162:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:21"},"nodeType":"YulFunctionCall","src":"18207:14:21"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:21"},"nodeType":"YulFunctionCall","src":"18200:25:21"},"nodeType":"YulExpressionStatement","src":"18200:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:21"},"nodeType":"YulFunctionCall","src":"18245:14:21"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:21"},"nodeType":"YulFunctionCall","src":"18238:25:21"},"nodeType":"YulExpressionStatement","src":"18238:25:21"},{"nodeType":"YulAssignment","src":"18425:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:21"},"nodeType":"YulFunctionCall","src":"18447:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:21","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:21","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:21"},"nodeType":"YulFunctionCall","src":"18436:46:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:21"}]},{"nodeType":"YulAssignment","src":"18495:21:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:21"},"nodeType":"YulFunctionCall","src":"18505:11:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4967,"isOffset":false,"isSlot":false,"src":"18185:1:21","valueSize":1},{"declaration":4969,"isOffset":false,"isSlot":false,"src":"18223:1:21","valueSize":1},{"declaration":4971,"isOffset":false,"isSlot":false,"src":"18261:1:21","valueSize":1},{"declaration":4976,"isOffset":false,"isSlot":false,"src":"18495:6:21","valueSize":1},{"declaration":4974,"isOffset":false,"isSlot":false,"src":"18425:7:21","valueSize":1}],"flags":["memory-safe"],"id":4986,"nodeType":"InlineAssembly","src":"17088:1438:21"}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"16191:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4988,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:21","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"b","nameLocation":"16961:1:21","nodeType":"VariableDeclaration","scope":4988,"src":"16953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"e","nameLocation":"16972:1:21","nodeType":"VariableDeclaration","scope":4988,"src":"16964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"m","nameLocation":"16983:1:21","nodeType":"VariableDeclaration","scope":4988,"src":"16975:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:21"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"success","nameLocation":"17014:7:21","nodeType":"VariableDeclaration","scope":4988,"src":"17009:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4973,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"result","nameLocation":"17031:6:21","nodeType":"VariableDeclaration","scope":4988,"src":"17023:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:21"},"scope":5778,"src":"16934:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"18729:179:21","statements":[{"assignments":[5001,5003],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"success","nameLocation":"18745:7:21","nodeType":"VariableDeclaration","scope":5023,"src":"18740:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5000,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"result","nameLocation":"18767:6:21","nodeType":"VariableDeclaration","scope":5023,"src":"18754:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5002,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5009,"initialValue":{"arguments":[{"id":5005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"18787:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5006,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"18790:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5007,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"18793:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5004,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4988,5070],"referencedDeclaration":5070,"src":"18777:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:21"},{"condition":{"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:21","subExpression":{"id":5010,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"18810:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5020,"nodeType":"IfStatement","src":"18805:74:21","trueBody":{"id":5019,"nodeType":"Block","src":"18819:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":5015,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"18845:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"18845:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5012,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"18833:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1564_$","typeString":"type(library Panic)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"18833:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"18833:35:21"}]}},{"expression":{"id":5021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"18895:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4999,"id":5022,"nodeType":"Return","src":"18888:13:21"}]},"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"18538:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:21","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"b","nameLocation":"18657:1:21","nodeType":"VariableDeclaration","scope":5024,"src":"18644:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4990,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"e","nameLocation":"18673:1:21","nodeType":"VariableDeclaration","scope":5024,"src":"18660:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4992,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"m","nameLocation":"18689:1:21","nodeType":"VariableDeclaration","scope":5024,"src":"18676:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4994,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:21"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5024,"src":"18715:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4997,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:21"},"scope":5778,"src":"18628:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5069,"nodeType":"Block","src":"19162:771:21","statements":[{"condition":{"arguments":[{"id":5039,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"19187:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5038,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"19176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5048,"nodeType":"IfStatement","src":"19172:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5042,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5037,"id":5047,"nodeType":"Return","src":"19191:28:21"}},{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:21","nodeType":"VariableDeclaration","scope":5069,"src":"19230:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5053,"initialValue":{"expression":{"id":5051,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"19245:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:21","memberName":"length","nodeType":"MemberAccess","src":"19245:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:21"},{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"19335:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"19361:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:21","memberName":"length","nodeType":"MemberAccess","src":"19361:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5059,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"19371:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:21","memberName":"length","nodeType":"MemberAccess","src":"19371:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5061,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"19381:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"19387:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5063,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5064,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"19393:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5055,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5067,"nodeType":"ExpressionStatement","src":"19335:60:21"},{"AST":{"nodeType":"YulBlock","src":"19431:496:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:21"},"nodeType":"YulFunctionCall","src":"19460:17:21"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:21","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:21"},"nodeType":"YulFunctionCall","src":"19589:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:21","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:21"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:21"},"nodeType":"YulFunctionCall","src":"19611:13:21"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:21"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:21"},"nodeType":"YulFunctionCall","src":"19578:62:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:21"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:21"},"nodeType":"YulFunctionCall","src":"19789:20:21"},"nodeType":"YulExpressionStatement","src":"19789:20:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:21"},"nodeType":"YulFunctionCall","src":"19898:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:21"},"nodeType":"YulFunctionCall","src":"19885:32:21"},"nodeType":"YulExpressionStatement","src":"19885:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":5050,"isOffset":false,"isSlot":false,"src":"19635:4:21","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"19804:4:21","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":false,"src":"19911:4:21","valueSize":1},{"declaration":5036,"isOffset":false,"isSlot":false,"src":"19464:6:21","valueSize":1},{"declaration":5036,"isOffset":false,"isSlot":false,"src":"19617:6:21","valueSize":1},{"declaration":5036,"isOffset":false,"isSlot":false,"src":"19796:6:21","valueSize":1},{"declaration":5034,"isOffset":false,"isSlot":false,"src":"19567:7:21","valueSize":1}],"flags":["memory-safe"],"id":5068,"nodeType":"InlineAssembly","src":"19406:521:21"}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"18914:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:21","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"b","nameLocation":"19048:1:21","nodeType":"VariableDeclaration","scope":5070,"src":"19035:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5026,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"e","nameLocation":"19072:1:21","nodeType":"VariableDeclaration","scope":5070,"src":"19059:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5028,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"m","nameLocation":"19096:1:21","nodeType":"VariableDeclaration","scope":5070,"src":"19083:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5030,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:21"},"returnParameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"success","nameLocation":"19132:7:21","nodeType":"VariableDeclaration","scope":5070,"src":"19127:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5033,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5036,"mutability":"mutable","name":"result","nameLocation":"19154:6:21","nodeType":"VariableDeclaration","scope":5070,"src":"19141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5035,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:21"},"scope":5778,"src":"19007:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5102,"nodeType":"Block","src":"20088:176:21","statements":[{"body":{"id":5098,"nodeType":"Block","src":"20145:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5089,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"20163:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5091,"indexExpression":{"id":5090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"20173:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"20159:68:21","trueBody":{"id":5096,"nodeType":"Block","src":"20182:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5077,"id":5095,"nodeType":"Return","src":"20200:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"20118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5083,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"20122:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:21","memberName":"length","nodeType":"MemberAccess","src":"20122:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"initializationExpression":{"assignments":[5079],"declarations":[{"constant":false,"id":5079,"mutability":"mutable","name":"i","nameLocation":"20111:1:21","nodeType":"VariableDeclaration","scope":5099,"src":"20103:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5081,"initialValue":{"hexValue":"30","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:21"},"loopExpression":{"expression":{"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:21","subExpression":{"id":5086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"20142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5088,"nodeType":"ExpressionStatement","src":"20140:3:21"},"nodeType":"ForStatement","src":"20098:139:21"},{"expression":{"hexValue":"74727565","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5077,"id":5101,"nodeType":"Return","src":"20246:11:21"}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"19939:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":5103,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:21","nodeType":"FunctionDefinition","parameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:21","nodeType":"VariableDeclaration","scope":5103,"src":"20036:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5072,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:21"},"returnParameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5103,"src":"20082:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5075,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:21"},"scope":5778,"src":"20016:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5321,"nodeType":"Block","src":"20624:5124:21","statements":[{"id":5320,"nodeType":"UncheckedBlock","src":"20634:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"20728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5117,"nodeType":"IfStatement","src":"20724:53:21","trueBody":{"id":5116,"nodeType":"Block","src":"20736:41:21","statements":[{"expression":{"id":5114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"20761:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5110,"id":5115,"nodeType":"Return","src":"20754:8:21"}]}},{"assignments":[5119],"declarations":[{"constant":false,"id":5119,"mutability":"mutable","name":"aa","nameLocation":"21712:2:21","nodeType":"VariableDeclaration","scope":5320,"src":"21704:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5121,"initialValue":{"id":5120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"21717:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:21"},{"assignments":[5123],"declarations":[{"constant":false,"id":5123,"mutability":"mutable","name":"xn","nameLocation":"21740:2:21","nodeType":"VariableDeclaration","scope":5320,"src":"21732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5125,"initialValue":{"hexValue":"31","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"21765:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5141,"nodeType":"IfStatement","src":"21761:92:21","trueBody":{"id":5140,"nodeType":"Block","src":"21783:70:21","statements":[{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"21801:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"21801:10:21"},{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"21829:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"21829:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"21870:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5157,"nodeType":"IfStatement","src":"21866:90:21","trueBody":{"id":5156,"nodeType":"Block","src":"21887:69:21","statements":[{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5148,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"21905:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"21905:9:21"},{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"21932:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5155,"nodeType":"ExpressionStatement","src":"21932:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"21973:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"21969:90:21","trueBody":{"id":5172,"nodeType":"Block","src":"21990:69:21","statements":[{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22008:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"22008:9:21"},{"expression":{"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22035:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ExpressionStatement","src":"22035:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22076:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5189,"nodeType":"IfStatement","src":"22072:89:21","trueBody":{"id":5188,"nodeType":"Block","src":"22093:68:21","statements":[{"expression":{"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5180,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22111:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5183,"nodeType":"ExpressionStatement","src":"22111:9:21"},{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22138:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5187,"nodeType":"ExpressionStatement","src":"22138:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22178:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5205,"nodeType":"IfStatement","src":"22174:87:21","trueBody":{"id":5204,"nodeType":"Block","src":"22194:67:21","statements":[{"expression":{"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5196,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22212:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5199,"nodeType":"ExpressionStatement","src":"22212:8:21"},{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5200,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22238:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5203,"nodeType":"ExpressionStatement","src":"22238:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5221,"nodeType":"IfStatement","src":"22274:87:21","trueBody":{"id":5220,"nodeType":"Block","src":"22294:67:21","statements":[{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5212,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22312:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5215,"nodeType":"ExpressionStatement","src":"22312:8:21"},{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22338:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"22338:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"22378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5233,"nodeType":"IfStatement","src":"22374:61:21","trueBody":{"id":5232,"nodeType":"Block","src":"22394:41:21","statements":[{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22412:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"22412:8:21"}]}},{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22855:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"22865:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5242,"nodeType":"ExpressionStatement","src":"22855:18:21"},{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5243,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24760:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24766:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"24771:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5246,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24775:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"24760:23:21"},{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24869:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24875:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"24880:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5257,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24884:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"24869:23:21"},{"expression":{"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24980:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24986:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"24991:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"24995:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5275,"nodeType":"ExpressionStatement","src":"24980:23:21"},{"expression":{"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25089:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25095:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"25100:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25104:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5286,"nodeType":"ExpressionStatement","src":"25089:23:21"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25199:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25205:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"25210:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25214:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5297,"nodeType":"ExpressionStatement","src":"25199:23:21"},{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25309:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25315:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"25320:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5301,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25324:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5308,"nodeType":"ExpressionStatement","src":"25309:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25698:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25719:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"25724:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5314,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5310,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"25703:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"25703:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5110,"id":5319,"nodeType":"Return","src":"25691:40:21"}]}]},"documentation":{"id":5104,"nodeType":"StructuredDocumentation","src":"20270:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:21","nodeType":"FunctionDefinition","parameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5106,"mutability":"mutable","name":"a","nameLocation":"20589:1:21","nodeType":"VariableDeclaration","scope":5322,"src":"20581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:21"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5322,"src":"20615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:21"},"scope":5778,"src":"20567:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"25921:171:21","statements":[{"id":5354,"nodeType":"UncheckedBlock","src":"25931:155:21","statements":[{"assignments":[5334],"declarations":[{"constant":false,"id":5334,"mutability":"mutable","name":"result","nameLocation":"25963:6:21","nodeType":"VariableDeclaration","scope":5354,"src":"25955:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5338,"initialValue":{"arguments":[{"id":5336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"25977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5335,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5322,5356],"referencedDeclaration":5322,"src":"25972:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"26000:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5343,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"26042:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":5342,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"26025:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"26055:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"26064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"26073:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26009:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26009:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5332,"id":5353,"nodeType":"Return","src":"25993:82:21"}]}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"25754:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:21","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"a","nameLocation":"25867:1:21","nodeType":"VariableDeclaration","scope":5356,"src":"25859:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5328,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:21","nodeType":"VariableDeclaration","scope":5356,"src":"25870:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":5327,"nodeType":"UserDefinedTypeName","pathNode":{"id":5326,"name":"Rounding","nameLocations":["25870:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"25870:8:21"},"referencedDeclaration":4169,"src":"25870:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:21"},"returnParameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5356,"src":"25912:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:21"},"scope":5778,"src":"25845:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5446,"nodeType":"Block","src":"26281:2334:21","statements":[{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5364,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26363:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26383:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26367:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26367:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"26363:64:21"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5375,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26503:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26525:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5379,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26530:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26508:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26508:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"26503:56:21"},{"expression":{"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5389,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26656:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5393,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26661:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26639:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26639:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5402,"nodeType":"ExpressionStatement","src":"26634:48:21"},{"expression":{"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5403,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26757:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26779:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5407,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26784:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5404,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26762:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26762:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5416,"nodeType":"ExpressionStatement","src":"26757:44:21"},{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26874:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"26896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5421,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26901:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5418,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26879:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26879:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5430,"nodeType":"ExpressionStatement","src":"26874:42:21"},{"expression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5431,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"26988:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"27010:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5435,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"27015:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5432,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"26993:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"26993:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5444,"nodeType":"ExpressionStatement","src":"26988:41:21"},{"AST":{"nodeType":"YulBlock","src":"28490:119:21","statements":[{"nodeType":"YulAssignment","src":"28504:95:21","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:21"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:21"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:21"},"nodeType":"YulFunctionCall","src":"28520:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:21","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:21"},"nodeType":"YulFunctionCall","src":"28515:83:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:21"},"nodeType":"YulFunctionCall","src":"28509:90:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5362,"isOffset":false,"isSlot":false,"src":"28504:1:21","valueSize":1},{"declaration":5362,"isOffset":false,"isSlot":false,"src":"28512:1:21","valueSize":1},{"declaration":5362,"isOffset":false,"isSlot":false,"src":"28524:1:21","valueSize":1},{"declaration":5359,"isOffset":false,"isSlot":false,"src":"28527:1:21","valueSize":1}],"flags":["memory-safe"],"id":5445,"nodeType":"InlineAssembly","src":"28465:144:21"}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"26098:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5447,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:21","nodeType":"FunctionDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"x","nameLocation":"26244:1:21","nodeType":"VariableDeclaration","scope":5447,"src":"26236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:21"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"r","nameLocation":"26278:1:21","nodeType":"VariableDeclaration","scope":5447,"src":"26270:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:21"},"scope":5778,"src":"26222:2393:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5480,"nodeType":"Block","src":"28848:175:21","statements":[{"id":5479,"nodeType":"UncheckedBlock","src":"28858:159:21","statements":[{"assignments":[5459],"declarations":[{"constant":false,"id":5459,"mutability":"mutable","name":"result","nameLocation":"28890:6:21","nodeType":"VariableDeclaration","scope":5479,"src":"28882:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5463,"initialValue":{"arguments":[{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"28904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5460,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5447,5481],"referencedDeclaration":5447,"src":"28899:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"28931:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5468,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"28973:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":5467,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"28956:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"28991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"29000:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5465,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"28940:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"28940:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5457,"id":5478,"nodeType":"Return","src":"28924:82:21"}]}]},"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"28621:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:21","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"value","nameLocation":"28790:5:21","nodeType":"VariableDeclaration","scope":5481,"src":"28782:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:21","nodeType":"VariableDeclaration","scope":5481,"src":"28797:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":5452,"nodeType":"UserDefinedTypeName","pathNode":{"id":5451,"name":"Rounding","nameLocations":["28797:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"28797:8:21"},"referencedDeclaration":4169,"src":"28797:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:21"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5481,"src":"28839:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5455,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:21"},"scope":5778,"src":"28768:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5609,"nodeType":"Block","src":"29216:854:21","statements":[{"assignments":[5490],"declarations":[{"constant":false,"id":5490,"mutability":"mutable","name":"result","nameLocation":"29234:6:21","nodeType":"VariableDeclaration","scope":5609,"src":"29226:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5492,"initialValue":{"hexValue":"30","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:21"},{"id":5606,"nodeType":"UncheckedBlock","src":"29254:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29282:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"IfStatement","src":"29278:103:21","trueBody":{"id":5508,"nodeType":"Block","src":"29301:80:21","statements":[{"expression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29319:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5503,"nodeType":"ExpressionStatement","src":"29319:17:21"},{"expression":{"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5507,"nodeType":"ExpressionStatement","src":"29354:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29398:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"IfStatement","src":"29394:103:21","trueBody":{"id":5525,"nodeType":"Block","src":"29417:80:21","statements":[{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29435:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5520,"nodeType":"ExpressionStatement","src":"29435:17:21"},{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29470:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5524,"nodeType":"ExpressionStatement","src":"29470:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29514:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"29510:103:21","trueBody":{"id":5542,"nodeType":"Block","src":"29533:80:21","statements":[{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"29551:17:21"},{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29586:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"29586:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29630:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"29626:100:21","trueBody":{"id":5559,"nodeType":"Block","src":"29648:78:21","statements":[{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29666:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"29666:16:21"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29700:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"29700:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"29739:100:21","trueBody":{"id":5576,"nodeType":"Block","src":"29761:78:21","statements":[{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29779:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"nodeType":"ExpressionStatement","src":"29779:16:21"},{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29813:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5575,"nodeType":"ExpressionStatement","src":"29813:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29856:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"29852:100:21","trueBody":{"id":5593,"nodeType":"Block","src":"29874:78:21","statements":[{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29892:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5588,"nodeType":"ExpressionStatement","src":"29892:16:21"},{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"29926:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5592,"nodeType":"ExpressionStatement","src":"29926:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"29969:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5605,"nodeType":"IfStatement","src":"29965:66:21","trueBody":{"id":5604,"nodeType":"Block","src":"29987:44:21","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"30005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"30005:11:21"}]}}]},{"expression":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"30057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5488,"id":5608,"nodeType":"Return","src":"30050:13:21"}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"29029:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5610,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:21","nodeType":"FunctionDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"value","nameLocation":"29177:5:21","nodeType":"VariableDeclaration","scope":5610,"src":"29169:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:21"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5610,"src":"29207:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:21"},"scope":5778,"src":"29154:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5643,"nodeType":"Block","src":"30305:177:21","statements":[{"id":5642,"nodeType":"UncheckedBlock","src":"30315:161:21","statements":[{"assignments":[5622],"declarations":[{"constant":false,"id":5622,"mutability":"mutable","name":"result","nameLocation":"30347:6:21","nodeType":"VariableDeclaration","scope":5642,"src":"30339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5626,"initialValue":{"arguments":[{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5623,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5610,5644],"referencedDeclaration":5610,"src":"30356:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"30389:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5631,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"30431:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":5630,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"30414:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"30450:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"30459:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5628,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"30398:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"30398:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5620,"id":5641,"nodeType":"Return","src":"30382:83:21"}]}]},"documentation":{"id":5611,"nodeType":"StructuredDocumentation","src":"30076:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5644,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:21","nodeType":"FunctionDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"value","nameLocation":"30247:5:21","nodeType":"VariableDeclaration","scope":5644,"src":"30239:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5616,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:21","nodeType":"VariableDeclaration","scope":5644,"src":"30254:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":5615,"nodeType":"UserDefinedTypeName","pathNode":{"id":5614,"name":"Rounding","nameLocations":["30254:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"30254:8:21"},"referencedDeclaration":4169,"src":"30254:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:21"},"returnParameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5644,"src":"30296:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5618,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:21"},"scope":5778,"src":"30224:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"30800:675:21","statements":[{"expression":{"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"30882:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"30902:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"30886:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"30886:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5662,"nodeType":"ExpressionStatement","src":"30882:64:21"},{"expression":{"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5663,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5666,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"31044:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31049:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5664,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31027:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"31027:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"nodeType":"ExpressionStatement","src":"31022:56:21"},{"expression":{"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31153:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"31175:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5681,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31180:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31158:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"31158:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5690,"nodeType":"ExpressionStatement","src":"31153:48:21"},{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31276:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"31298:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5695,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31303:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5692,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31281:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"31281:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5704,"nodeType":"ExpressionStatement","src":"31276:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5705,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31426:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"31453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5712,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5709,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31436:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"31436:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5651,"id":5719,"nodeType":"Return","src":"31418:50:21"}]},"documentation":{"id":5645,"nodeType":"StructuredDocumentation","src":"30488:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:21","nodeType":"FunctionDefinition","parameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"x","nameLocation":"30763:1:21","nodeType":"VariableDeclaration","scope":5721,"src":"30755:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5646,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:21"},"returnParameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"r","nameLocation":"30797:1:21","nodeType":"VariableDeclaration","scope":5721,"src":"30789:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5649,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:21"},"scope":5778,"src":"30739:736:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5757,"nodeType":"Block","src":"31712:184:21","statements":[{"id":5756,"nodeType":"UncheckedBlock","src":"31722:168:21","statements":[{"assignments":[5733],"declarations":[{"constant":false,"id":5733,"mutability":"mutable","name":"result","nameLocation":"31754:6:21","nodeType":"VariableDeclaration","scope":5756,"src":"31746:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5737,"initialValue":{"arguments":[{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"31770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5734,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5721,5758],"referencedDeclaration":5721,"src":"31763:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31797:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5742,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"31839:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":5741,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"31822:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"31873:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"31806:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"31806:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5731,"id":5755,"nodeType":"Return","src":"31790:89:21"}]}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"31481:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5758,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:21","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"31654:5:21","nodeType":"VariableDeclaration","scope":5758,"src":"31646:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5727,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:21","nodeType":"VariableDeclaration","scope":5758,"src":"31661:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":5726,"nodeType":"UserDefinedTypeName","pathNode":{"id":5725,"name":"Rounding","nameLocations":["31661:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"31661:8:21"},"referencedDeclaration":4169,"src":"31661:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:21"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5758,"src":"31703:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:21"},"scope":5778,"src":"31630:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5776,"nodeType":"Block","src":"32094:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5769,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"32117:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5767,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:21","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5766,"id":5775,"nodeType":"Return","src":"32104:31:21"}]},"documentation":{"id":5759,"nodeType":"StructuredDocumentation","src":"31902:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5777,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:21","nodeType":"FunctionDefinition","parameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:21","nodeType":"VariableDeclaration","scope":5777,"src":"32046:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"},"typeName":{"id":5761,"nodeType":"UserDefinedTypeName","pathNode":{"id":5760,"name":"Rounding","nameLocations":["32046:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4169,"src":"32046:8:21"},"referencedDeclaration":4169,"src":"32046:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:21"},"returnParameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5777,"src":"32088:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5764,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:21"},"scope":5778,"src":"32020:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5779,"src":"281:31863:21","usedErrors":[],"usedEvents":[]}],"src":"103:32042:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7543]},"id":7544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5780,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5781,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7543,"linearizedBaseContracts":[7543],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5782,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5788,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":5788,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5783,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5786,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":5788,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5793,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":5793,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5790,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":5794,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5800,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":5800,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5795,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5798,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":5800,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5797,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5805,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":5805,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":5832,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5815,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":5825,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5820,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5824,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5827,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5812,"id":5831,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":5806,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5833,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":5833,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5833,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5810,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":7543,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5843,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5842,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5854,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":5853,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5848,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5852,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":5857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5855,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5840,"id":5859,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":5834,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":5861,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5861,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5838,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":7543,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5888,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5871,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5882,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":5881,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5880,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5883,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5868,"id":5887,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":5862,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5889,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":5889,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5889,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5866,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":7543,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5916,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5899,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5898,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5910,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":5909,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5904,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5908,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5911,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5896,"id":5915,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":5890,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5917,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":5917,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":5896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5917,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5894,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":7543,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5944,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5927,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5926,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5938,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":5937,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5932,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5936,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5939,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5924,"id":5943,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":5918,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5945,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":5921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":5945,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5945,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5922,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":7543,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5972,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5955,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5954,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5966,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":5965,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5960,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5964,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5967,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5952,"id":5971,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":5946,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5973,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":5973,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5973,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5950,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":7543,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6000,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5983,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5994,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":5993,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5992,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5995,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5980,"id":5999,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6001,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":6001,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6001,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5978,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":7543,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6028,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6011,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6010,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6022,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":6021,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6020,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6023,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6008,"id":6027,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":6002,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6029,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":6029,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6003,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6029,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6006,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":7543,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6056,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6039,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6038,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6050,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":6049,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6044,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6048,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6051,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6036,"id":6055,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":6030,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6057,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":6057,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6034,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":7543,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6084,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6067,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6066,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":6077,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6072,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6076,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6079,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6064,"id":6083,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6085,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":6085,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6085,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6062,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":7543,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6112,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6095,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6094,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6106,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":6105,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6100,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6104,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":6109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6107,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6092,"id":6111,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":6086,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6113,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":6113,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6087,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6113,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6090,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":7543,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6140,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6123,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6122,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6134,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":6133,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6128,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6132,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6135,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6120,"id":6139,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":6141,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6141,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6118,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":7543,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6168,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6151,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":6161,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6156,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6160,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6163,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6148,"id":6167,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":6142,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6169,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":6169,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6169,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6146,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":7543,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6196,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6179,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6178,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":6189,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6184,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6191,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6176,"id":6195,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":6170,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6197,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":6197,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6197,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6174,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":7543,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6224,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6207,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6218,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":6217,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6212,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6216,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6219,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6204,"id":6223,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":6198,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6225,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6200,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":6225,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6225,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6202,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":7543,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6252,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6235,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6234,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6246,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":6245,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6240,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6244,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":6249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6247,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6232,"id":6251,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6253,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":6253,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6253,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6230,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":7543,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6280,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6263,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6262,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6274,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":6273,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6268,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6272,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6275,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6260,"id":6279,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":6254,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6281,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":6281,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6255,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6281,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6258,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":7543,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6308,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6291,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6290,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6302,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":6301,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6296,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6300,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6303,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6288,"id":6307,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":6282,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6309,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":6309,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6283,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6309,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6286,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":7543,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6336,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6319,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6330,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":6329,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6324,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6328,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6331,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6316,"id":6335,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":6310,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6337,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":6337,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6337,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6314,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":7543,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6364,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6347,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6346,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6358,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":6357,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6352,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6356,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6359,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6344,"id":6363,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":6338,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6365,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":6365,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6365,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6342,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":7543,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6392,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6375,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6374,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6386,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":6385,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6380,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6384,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":6389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6387,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6372,"id":6391,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":6366,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6393,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":6393,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6393,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6370,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":7543,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6420,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6403,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6414,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":6413,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6408,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6412,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6415,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6400,"id":6419,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":6394,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6421,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":6421,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6395,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6421,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6398,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":7543,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6448,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6431,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6430,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6442,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":6441,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6436,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6440,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":6445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6443,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6428,"id":6447,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6449,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":6449,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6449,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6426,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":7543,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6476,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6459,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6458,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6470,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":6469,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6464,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6468,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6471,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6456,"id":6475,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":6450,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6477,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":6477,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6451,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6477,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6454,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":7543,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6504,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6487,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6498,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":6497,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6492,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6496,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6499,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6484,"id":6503,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":6478,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6505,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":6505,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6505,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6482,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":7543,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6532,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6515,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6514,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6526,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":6525,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6520,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6524,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":6529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6527,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6512,"id":6531,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6533,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":6533,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6507,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6533,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6510,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":7543,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6560,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6543,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":6553,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6548,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6552,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6555,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6540,"id":6559,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":6534,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6561,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6536,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":6561,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6535,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6561,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6538,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":7543,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6588,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6571,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6582,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":6581,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6576,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6583,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6568,"id":6587,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":6562,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6589,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":6589,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6563,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6589,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6566,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":7543,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6616,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6599,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6610,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":6609,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6604,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6608,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6611,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6596,"id":6615,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":6590,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":6617,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6591,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6617,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6594,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":7543,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6644,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6627,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":6637,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6636,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":6641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6639,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6624,"id":6643,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6645,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":6645,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6619,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6645,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6622,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":7543,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6672,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6655,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6654,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6666,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":6665,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6660,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6667,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6652,"id":6671,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":6646,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":6673,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":6652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6673,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6650,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":7543,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6695,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6689,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":6688,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6684,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6680,"id":6694,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":6674,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6696,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":6696,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6675,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6696,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":7543,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6705,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6710,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6720,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":6719,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6718,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":6697,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":6722,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6698,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":6722,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6701,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":7543,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6731,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6736,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":6745,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6744,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":6748,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":6748,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6727,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":7543,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6757,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6762,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6772,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":6771,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":6774,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6750,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":6774,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6753,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":7543,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6783,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6788,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6798,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":6797,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6796,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":6800,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6776,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":6800,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6779,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":7543,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6825,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6809,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6814,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":6823,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":6826,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":6826,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6805,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":7543,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6851,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6835,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6840,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6850,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":6849,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6848,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":6852,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6828,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":6852,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6831,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":7543,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6861,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6866,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6876,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":6875,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":6878,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":6878,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6857,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":7543,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6887,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6892,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":6901,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":6904,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6880,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":6904,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6883,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":7543,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6929,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6913,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6918,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":6927,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":6930,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":6930,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6909,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":7543,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6955,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6939,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6944,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":6953,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6952,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":6956,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6932,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":6956,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6935,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":7543,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6981,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6965,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6970,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":6979,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":6982,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":6982,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6961,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":7543,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7007,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6991,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6996,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":7005,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":7008,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":7008,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6987,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":7543,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7033,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7017,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7022,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7032,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":7031,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":7009,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":7034,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":7034,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7013,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":7543,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7059,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7043,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7048,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7058,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":7057,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7056,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":7060,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7036,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":7060,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7039,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":7543,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7085,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7069,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7074,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7084,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":7083,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7082,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":7086,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7062,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7066,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":7086,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7065,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":7543,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7111,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7095,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7100,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7110,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":7109,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7108,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":7087,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":7112,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7088,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":7093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":7112,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7091,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":7543,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7137,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7121,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7126,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7136,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":7135,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7134,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":7113,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":7138,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7114,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":7119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":7138,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7117,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":7543,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7163,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7147,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7152,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7162,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":7161,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7160,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":7139,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":7164,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7140,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":7145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":7164,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7143,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":7543,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7189,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7173,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7178,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7188,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":7187,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7186,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":7165,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":7190,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7166,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":7171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7170,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":7190,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7169,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":7543,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7215,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7199,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7204,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7214,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":7213,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7212,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":7191,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":7216,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7192,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":7216,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7195,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":7543,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7241,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7225,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7230,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7240,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":7239,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7238,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":7217,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":7242,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7218,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":7242,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7221,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":7543,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7267,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7251,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7256,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7266,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":7265,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":7243,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":7268,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7244,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":7268,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7247,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":7543,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7293,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7277,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7282,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7292,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":7291,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7290,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":7269,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":7294,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7270,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":7294,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7273,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":7543,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7319,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7303,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7308,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7318,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":7317,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7316,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":7295,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":7320,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7296,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7300,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":7320,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7299,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":7543,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7345,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7329,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7334,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7344,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":7343,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7342,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":7321,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":7346,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7322,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":7327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7326,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":7346,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7325,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":7543,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7371,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7355,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7360,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7370,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":7369,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7368,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":7347,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":7372,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7348,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":7372,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7351,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":7543,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7397,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7381,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7386,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7396,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":7395,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":7373,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":7398,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7374,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":7398,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7377,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":7543,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7423,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7407,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7412,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7422,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":7421,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7420,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":7399,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":7424,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7400,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":7424,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7403,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":7543,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7449,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7433,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7438,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7448,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":7447,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7446,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":7425,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":7450,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7426,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":7450,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7429,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":7543,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7475,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7459,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7464,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7474,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":7473,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7472,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":7451,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":7476,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7452,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":7457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7456,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":7476,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7455,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":7543,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7501,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7485,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7490,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7500,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":7499,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7494,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":7477,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7502,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":7502,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7478,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":7483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":7502,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7481,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":7543,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7531,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7514,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7513,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7511,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7525,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":7524,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":7521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7520,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7523,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7526,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7509,"id":7530,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":7503,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":7532,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7504,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7532,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7507,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":7543,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7541,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:22","statements":[{"nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:22"},"nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:22"},"nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7535,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":7538,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":7540,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":7533,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":7542,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7534,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":7542,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7537,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":7543,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7544,"src":"769:34173:22","usedErrors":[5788,5793,5800,5805],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7543],"SignedMath":[7687]},"id":7688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7545,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7688,"sourceUnit":7544,"src":"135:40:23","symbolAliases":[{"foreign":{"id":7546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"143:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7548,"nodeType":"StructuredDocumentation","src":"177:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7687,"linearizedBaseContracts":[7687],"name":"SignedMath","nameLocation":"266:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":7577,"nodeType":"Block","src":"746:215:23","statements":[{"id":7576,"nodeType":"UncheckedBlock","src":"756:199:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"894:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"900:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"904:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7569,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"932:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7567,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"916:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7543_$","typeString":"type(library SafeCast)"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7542,"src":"916:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7565,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:23","typeDescriptions":{}}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7559,"id":7575,"nodeType":"Return","src":"887:57:23"}]}]},"documentation":{"id":7549,"nodeType":"StructuredDocumentation","src":"283:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7578,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:23","nodeType":"FunctionDefinition","parameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"condition","nameLocation":"684:9:23","nodeType":"VariableDeclaration","scope":7578,"src":"679:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7550,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7553,"mutability":"mutable","name":"a","nameLocation":"702:1:23","nodeType":"VariableDeclaration","scope":7578,"src":"695:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7552,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7555,"mutability":"mutable","name":"b","nameLocation":"712:1:23","nodeType":"VariableDeclaration","scope":7578,"src":"705:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7554,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:23"},"returnParameters":{"id":7559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7578,"src":"738:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7557,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:23"},"scope":7687,"src":"662:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7596,"nodeType":"Block","src":"1102:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1127:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7590,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1134:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"1137:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7588,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"1119:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7587,"id":7595,"nodeType":"Return","src":"1112:27:23"}]},"documentation":{"id":7579,"nodeType":"StructuredDocumentation","src":"967:66:23","text":" @dev Returns the largest of two signed numbers."},"id":7597,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:23","nodeType":"FunctionDefinition","parameters":{"id":7584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7581,"mutability":"mutable","name":"a","nameLocation":"1058:1:23","nodeType":"VariableDeclaration","scope":7597,"src":"1051:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7580,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7583,"mutability":"mutable","name":"b","nameLocation":"1068:1:23","nodeType":"VariableDeclaration","scope":7597,"src":"1061:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7582,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:23"},"returnParameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7597,"src":"1094:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7585,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:23"},"scope":7687,"src":"1038:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7615,"nodeType":"Block","src":"1288:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"1313:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"1317:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"1320:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7607,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"1305:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7606,"id":7614,"nodeType":"Return","src":"1298:27:23"}]},"documentation":{"id":7598,"nodeType":"StructuredDocumentation","src":"1152:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":7616,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:23","nodeType":"FunctionDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"a","nameLocation":"1244:1:23","nodeType":"VariableDeclaration","scope":7616,"src":"1237:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7599,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7602,"mutability":"mutable","name":"b","nameLocation":"1254:1:23","nodeType":"VariableDeclaration","scope":7616,"src":"1247:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7601,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:23"},"returnParameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7616,"src":"1280:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7604,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:23"},"scope":7687,"src":"1224:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7659,"nodeType":"Block","src":"1537:162:23","statements":[{"assignments":[7627],"declarations":[{"constant":false,"id":7627,"mutability":"mutable","name":"x","nameLocation":"1606:1:23","nodeType":"VariableDeclaration","scope":7659,"src":"1599:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7626,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7640,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"1611:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7629,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"1615:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"1622:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"1626:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7646,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"1671:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{}}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7642,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:23","typeDescriptions":{}}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"1685:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"1689:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7625,"id":7658,"nodeType":"Return","src":"1644:48:23"}]},"documentation":{"id":7617,"nodeType":"StructuredDocumentation","src":"1338:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7660,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:23","nodeType":"FunctionDefinition","parameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"a","nameLocation":"1493:1:23","nodeType":"VariableDeclaration","scope":7660,"src":"1486:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7621,"mutability":"mutable","name":"b","nameLocation":"1503:1:23","nodeType":"VariableDeclaration","scope":7660,"src":"1496:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7620,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:23"},"returnParameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7660,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7623,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":7687,"src":"1469:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7685,"nodeType":"Block","src":"1843:767:23","statements":[{"id":7684,"nodeType":"UncheckedBlock","src":"1853:751:23","statements":[{"assignments":[7669],"declarations":[{"constant":false,"id":7669,"mutability":"mutable","name":"mask","nameLocation":"2424:4:23","nodeType":"VariableDeclaration","scope":7684,"src":"2417:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7668,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7673,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7670,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"2431:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7676,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"2576:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7677,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2580:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7680,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2588:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:23","typeDescriptions":{}}},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7667,"id":7683,"nodeType":"Return","src":"2560:33:23"}]}]},"documentation":{"id":7661,"nodeType":"StructuredDocumentation","src":"1705:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7686,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:23","nodeType":"FunctionDefinition","parameters":{"id":7664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"n","nameLocation":"1808:1:23","nodeType":"VariableDeclaration","scope":7686,"src":"1801:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7662,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:23"},"returnParameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7686,"src":"1834:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:23"},"scope":7687,"src":"1788:822:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7688,"src":"258:2354:23","usedErrors":[],"usedEvents":[]}],"src":"109:2504:23"},"id":23},"contracts/BulkPayroll.sol":{"ast":{"absolutePath":"contracts/BulkPayroll.sol","exportedSymbols":{"BulkPayroll":[8333],"Context":[1512],"IERC1363":[229],"IERC20":[992],"Ownable":[147],"ReentrancyGuard":[1741],"SafeERC20":[1482]},"id":8334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7689,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8334,"sourceUnit":1742,"src":"58:59:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8334,"sourceUnit":1483,"src":"118:65:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8334,"sourceUnit":993,"src":"184:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8334,"sourceUnit":148,"src":"241:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7695,"name":"ReentrancyGuard","nameLocations":["492:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":1741,"src":"492:15:24"},"id":7696,"nodeType":"InheritanceSpecifier","src":"492:15:24"},{"baseName":{"id":7697,"name":"Ownable","nameLocations":["509:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"509:7:24"},"id":7698,"nodeType":"InheritanceSpecifier","src":"509:7:24"}],"canonicalName":"BulkPayroll","contractDependencies":[],"contractKind":"contract","documentation":{"id":7694,"nodeType":"StructuredDocumentation","src":"295:172:24","text":" @title BulkPayroll\n @dev Enhanced bulk payment contract with failure isolation\n @notice Handles bulk ETH and ERC20 transfers with individual failure handling"},"fullyImplemented":true,"id":8333,"linearizedBaseContracts":[8333,147,1512,1741],"name":"BulkPayroll","nameLocation":"477:11:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7702,"libraryName":{"id":7699,"name":"SafeERC20","nameLocations":["529:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":1482,"src":"529:9:24"},"nodeType":"UsingForDirective","src":"523:27:24","typeName":{"id":7701,"nodeType":"UserDefinedTypeName","pathNode":{"id":7700,"name":"IERC20","nameLocations":["543:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"543:6:24"},"referencedDeclaration":992,"src":"543:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}},{"body":{"id":7709,"nodeType":"Block","src":"590:2:24","statements":[]},"id":7710,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"578:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"582:6:24","memberName":"sender","nodeType":"MemberAccess","src":"578:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7707,"kind":"baseConstructorSpecifier","modifierName":{"id":7704,"name":"Ownable","nameLocations":["570:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"570:7:24"},"nodeType":"ModifierInvocation","src":"570:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7703,"nodeType":"ParameterList","parameters":[],"src":"567:2:24"},"returnParameters":{"id":7708,"nodeType":"ParameterList","parameters":[],"src":"590:0:24"},"scope":8333,"src":"556:36:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":true,"documentation":{"id":7711,"nodeType":"StructuredDocumentation","src":"598:65:24","text":"@dev Maximum recipients per batch to prevent gas limit issues"},"functionSelector":"a6980ce2","id":7714,"mutability":"constant","name":"MAX_RECIPIENTS","nameLocation":"692:14:24","nodeType":"VariableDeclaration","scope":8333,"src":"668:44:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7712,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"709:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":true,"documentation":{"id":7715,"nodeType":"StructuredDocumentation","src":"723:56:24","text":"@dev Gas limit for ETH transfers to prevent griefing"},"functionSelector":"091d2788","id":7718,"mutability":"constant","name":"GAS_LIMIT","nameLocation":"808:9:24","nodeType":"VariableDeclaration","scope":8333,"src":"784:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030","id":7717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"820:5:24","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"visibility":"public"},{"constant":false,"documentation":{"id":7719,"nodeType":"StructuredDocumentation","src":"832:67:24","text":"@dev Mapping for failed transfers: recipient => token => amount"},"functionSelector":"1b60f266","id":7725,"mutability":"mutable","name":"failedTransfers","nameLocation":"959:15:24","nodeType":"VariableDeclaration","scope":8333,"src":"904:70:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":7724,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7720,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"904:47:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7723,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7721,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"923:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"documentation":{"id":7726,"nodeType":"StructuredDocumentation","src":"981:22:24","text":"@dev Custom errors"},"errorSelector":"ff633a38","id":7728,"name":"LengthMismatch","nameLocation":"1014:14:24","nodeType":"ErrorDefinition","parameters":{"id":7727,"nodeType":"ParameterList","parameters":[],"src":"1028:2:24"},"src":"1008:23:24"},{"errorSelector":"f4d678b8","id":7730,"name":"InsufficientBalance","nameLocation":"1042:19:24","nodeType":"ErrorDefinition","parameters":{"id":7729,"nodeType":"ParameterList","parameters":[],"src":"1061:2:24"},"src":"1036:28:24"},{"errorSelector":"13be252b","id":7732,"name":"InsufficientAllowance","nameLocation":"1075:21:24","nodeType":"ErrorDefinition","parameters":{"id":7731,"nodeType":"ParameterList","parameters":[],"src":"1096:2:24"},"src":"1069:30:24"},{"errorSelector":"4ffddc7c","id":7734,"name":"TransferError","nameLocation":"1110:13:24","nodeType":"ErrorDefinition","parameters":{"id":7733,"nodeType":"ParameterList","parameters":[],"src":"1123:2:24"},"src":"1104:22:24"},{"errorSelector":"f0c49d44","id":7736,"name":"RefundFailed","nameLocation":"1137:12:24","nodeType":"ErrorDefinition","parameters":{"id":7735,"nodeType":"ParameterList","parameters":[],"src":"1149:2:24"},"src":"1131:21:24"},{"errorSelector":"5531b495","id":7738,"name":"TooManyRecipients","nameLocation":"1163:17:24","nodeType":"ErrorDefinition","parameters":{"id":7737,"nodeType":"ParameterList","parameters":[],"src":"1180:2:24"},"src":"1157:26:24"},{"errorSelector":"b4fa3fb3","id":7740,"name":"InvalidInput","nameLocation":"1194:12:24","nodeType":"ErrorDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[],"src":"1206:2:24"},"src":"1188:21:24"},{"anonymous":false,"documentation":{"id":7741,"nodeType":"StructuredDocumentation","src":"1215:15:24","text":"@dev Events"},"eventSelector":"692e83d8616474b42f4087ee207b152ab184c8c509d2c1ee03ffebb618f8e100","id":7755,"name":"BulkTransferExecuted","nameLocation":"1241:20:24","nodeType":"EventDefinition","parameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1287:6:24","nodeType":"VariableDeclaration","scope":7755,"src":"1271:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7742,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7745,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1319:5:24","nodeType":"VariableDeclaration","scope":7755,"src":"1303:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7744,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7747,"indexed":false,"mutability":"mutable","name":"totalRecipients","nameLocation":"1342:15:24","nodeType":"VariableDeclaration","scope":7755,"src":"1334:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7749,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1375:11:24","nodeType":"VariableDeclaration","scope":7755,"src":"1367:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7751,"indexed":false,"mutability":"mutable","name":"successCount","nameLocation":"1404:12:24","nodeType":"VariableDeclaration","scope":7755,"src":"1396:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7753,"indexed":false,"mutability":"mutable","name":"failCount","nameLocation":"1434:9:24","nodeType":"VariableDeclaration","scope":7755,"src":"1426:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1261:188:24"},"src":"1235:215:24"},{"anonymous":false,"eventSelector":"bf182be802245e8ed88e4b8d3e4344c0863dd2a70334f089fd07265389306fcf","id":7763,"name":"TransferFailed","nameLocation":"1462:14:24","nodeType":"EventDefinition","parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7757,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1502:9:24","nodeType":"VariableDeclaration","scope":7763,"src":"1486:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7756,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7759,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1537:5:24","nodeType":"VariableDeclaration","scope":7763,"src":"1521:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7758,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7761,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1560:6:24","nodeType":"VariableDeclaration","scope":7763,"src":"1552:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1476:96:24"},"src":"1456:117:24"},{"anonymous":false,"eventSelector":"6f65559b767bf231652bb6bbc613c03da1500c2af09834b0c638fc41d4b21616","id":7771,"name":"FailedTransferClaimed","nameLocation":"1585:21:24","nodeType":"EventDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7765,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1632:9:24","nodeType":"VariableDeclaration","scope":7771,"src":"1616:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7764,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7767,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1659:5:24","nodeType":"VariableDeclaration","scope":7771,"src":"1651:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7766,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7769,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1682:6:24","nodeType":"VariableDeclaration","scope":7771,"src":"1674:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1606:88:24"},"src":"1579:116:24"},{"body":{"id":7873,"nodeType":"Block","src":"2211:707:24","statements":[{"assignments":[7786],"declarations":[{"constant":false,"id":7786,"mutability":"mutable","name":"length","nameLocation":"2229:6:24","nodeType":"VariableDeclaration","scope":7873,"src":"2221:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7789,"initialValue":{"expression":{"id":7787,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"2238:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2249:6:24","memberName":"length","nodeType":"MemberAccess","src":"2238:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2221:34:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7790,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2306:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2316:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2306:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7796,"nodeType":"IfStatement","src":"2302:38:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7793,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"2326:12:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7795,"nodeType":"RevertStatement","src":"2319:21:24"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7797,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7798,"name":"MAX_RECIPIENTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"2363:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2354:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7803,"nodeType":"IfStatement","src":"2350:55:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7800,"name":"TooManyRecipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"2386:17:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2386:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"RevertStatement","src":"2379:26:24"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7804,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2419:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7805,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2429:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2437:6:24","memberName":"length","nodeType":"MemberAccess","src":"2429:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2419:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7811,"nodeType":"IfStatement","src":"2415:53:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7808,"name":"LengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"2452:14:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7810,"nodeType":"RevertStatement","src":"2445:23:24"}},{"assignments":[7813],"declarations":[{"constant":false,"id":7813,"mutability":"mutable","name":"totalAmount","nameLocation":"2487:11:24","nodeType":"VariableDeclaration","scope":7873,"src":"2479:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7814,"nodeType":"VariableDeclarationStatement","src":"2479:19:24"},{"body":{"id":7849,"nodeType":"Block","src":"2537:168:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7821,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"2555:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7823,"indexExpression":{"id":7822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"2566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2555:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2572:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7824,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:24","typeDescriptions":{}}},"id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2572:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2555:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7829,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2586:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7831,"indexExpression":{"id":7830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"2594:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2586:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2600:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2586:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2555:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7838,"nodeType":"IfStatement","src":"2551:73:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7835,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"2610:12:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7837,"nodeType":"RevertStatement","src":"2603:21:24"}},{"expression":{"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7839,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2638:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":7840,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2653:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7842,"indexExpression":{"id":7841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"2661:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2653:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2638:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7844,"nodeType":"ExpressionStatement","src":"2638:25:24"},{"id":7848,"nodeType":"UncheckedBlock","src":"2677:18:24","statements":[{"expression":{"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2689:3:24","subExpression":{"id":7845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"2691:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7847,"nodeType":"ExpressionStatement","src":"2689:3:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7816,"src":"2524:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7819,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2528:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7850,"initializationExpression":{"assignments":[7816],"declarations":[{"constant":false,"id":7816,"mutability":"mutable","name":"i","nameLocation":"2521:1:24","nodeType":"VariableDeclaration","scope":7850,"src":"2513:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7817,"nodeType":"VariableDeclarationStatement","src":"2513:9:24"},"nodeType":"ForStatement","src":"2508:197:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7851,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"2719:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2736:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2728:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7852,"name":"address","nodeType":"ElementaryTypeName","src":"2728:7:24","typeDescriptions":{}}},"id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2719:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7871,"nodeType":"Block","src":"2826:86:24","statements":[{"expression":{"arguments":[{"id":7865,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7774,"src":"2861:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7866,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2868:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7867,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"2881:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":7868,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2893:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":7864,"name":"_handleERC20Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2840:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (address,uint256,address[] calldata,uint256[] calldata)"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2840:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7870,"nodeType":"ExpressionStatement","src":"2840:61:24"}]},"id":7872,"nodeType":"IfStatement","src":"2715:197:24","trueBody":{"id":7863,"nodeType":"Block","src":"2740:80:24","statements":[{"expression":{"arguments":[{"id":7858,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2776:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7859,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"2789:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":7860,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"2801:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":7857,"name":"_handleNativeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"2754:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,address[] calldata,uint256[] calldata)"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7862,"nodeType":"ExpressionStatement","src":"2754:55:24"}]}}]},"documentation":{"id":7772,"nodeType":"StructuredDocumentation","src":"1701:349:24","text":" @notice Executes a bulk transfer of tokens/Native currency with failure isolation\n @dev Failed transfers are stored for later claiming\n @param token ERC20 token address or address(0) for Native currency\n @param recipients Array of recipient addresses\n @param amounts Array of corresponding transfer amounts"},"functionSelector":"e886dade","id":7874,"implemented":true,"kind":"function","modifiers":[{"id":7783,"kind":"modifierInvocation","modifierName":{"id":7782,"name":"nonReentrant","nameLocations":["2198:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"2198:12:24"},"nodeType":"ModifierInvocation","src":"2198:12:24"}],"name":"bulkTransfer","nameLocation":"2064:12:24","nodeType":"FunctionDefinition","parameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"token","nameLocation":"2094:5:24","nodeType":"VariableDeclaration","scope":7874,"src":"2086:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7773,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7777,"mutability":"mutable","name":"recipients","nameLocation":"2128:10:24","nodeType":"VariableDeclaration","scope":7874,"src":"2109:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7775,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7776,"nodeType":"ArrayTypeName","src":"2109:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7780,"mutability":"mutable","name":"amounts","nameLocation":"2167:7:24","nodeType":"VariableDeclaration","scope":7874,"src":"2148:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7779,"nodeType":"ArrayTypeName","src":"2148:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2076:104:24"},"returnParameters":{"id":7784,"nodeType":"ParameterList","parameters":[],"src":"2211:0:24"},"scope":8333,"src":"2055:863:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7939,"nodeType":"Block","src":"3100:472:24","statements":[{"assignments":[7883],"declarations":[{"constant":false,"id":7883,"mutability":"mutable","name":"amount","nameLocation":"3118:6:24","nodeType":"VariableDeclaration","scope":7939,"src":"3110:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3110:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7890,"initialValue":{"baseExpression":{"baseExpression":{"id":7884,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"3127:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7887,"indexExpression":{"expression":{"id":7885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3143:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3143:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3127:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7889,"indexExpression":{"id":7888,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"3155:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3127:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3110:51:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"3175:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3185:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3175:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7897,"nodeType":"IfStatement","src":"3171:38:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7894,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"3195:12:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3195:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7896,"nodeType":"RevertStatement","src":"3188:21:24"}},{"expression":{"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7898,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"3220:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7902,"indexExpression":{"expression":{"id":7899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3236:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3240:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3236:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3220:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7903,"indexExpression":{"id":7901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"3248:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3220:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3257:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3220:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7906,"nodeType":"ExpressionStatement","src":"3220:38:24"},{"assignments":[7908],"declarations":[{"constant":false,"id":7908,"mutability":"mutable","name":"success","nameLocation":"3274:7:24","nodeType":"VariableDeclaration","scope":7939,"src":"3269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7907,"name":"bool","nodeType":"ElementaryTypeName","src":"3269:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7915,"initialValue":{"arguments":[{"expression":{"id":7910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3301:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3305:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3301:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7912,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"3313:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"3320:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7909,"name":"_attemptTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"3284:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3269:58:24"},{"condition":{"id":7916,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"3350:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7937,"nodeType":"Block","src":"3443:123:24","statements":[{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7925,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"3457:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7929,"indexExpression":{"expression":{"id":7926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3473:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3477:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3473:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3457:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7930,"indexExpression":{"id":7928,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"3485:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3457:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7931,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"3494:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7933,"nodeType":"ExpressionStatement","src":"3457:43:24"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7934,"name":"TransferError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"3540:13:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7936,"nodeType":"RevertStatement","src":"3533:22:24"}]},"id":7938,"nodeType":"IfStatement","src":"3346:220:24","trueBody":{"id":7924,"nodeType":"Block","src":"3359:78:24","statements":[{"eventCall":{"arguments":[{"expression":{"id":7918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3400:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3404:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3400:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"3412:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7921,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"3419:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7917,"name":"FailedTransferClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"3378:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3378:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7923,"nodeType":"EmitStatement","src":"3373:53:24"}]}}]},"documentation":{"id":7875,"nodeType":"StructuredDocumentation","src":"2924:105:24","text":" @notice Claim failed transfers\n @param token Token to claim (address(0) for ETH)"},"functionSelector":"09ae54be","id":7940,"implemented":true,"kind":"function","modifiers":[{"id":7880,"kind":"modifierInvocation","modifierName":{"id":7879,"name":"nonReentrant","nameLocations":["3087:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"3087:12:24"},"nodeType":"ModifierInvocation","src":"3087:12:24"}],"name":"claimFailedTransfer","nameLocation":"3043:19:24","nodeType":"FunctionDefinition","parameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"token","nameLocation":"3071:5:24","nodeType":"VariableDeclaration","scope":7940,"src":"3063:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7876,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3062:15:24"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[],"src":"3100:0:24"},"scope":8333,"src":"3034:538:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8048,"nodeType":"Block","src":"3811:712:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3825:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3829:5:24","memberName":"value","nodeType":"MemberAccess","src":"3825:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7954,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"3837:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3825:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7959,"nodeType":"IfStatement","src":"3821:57:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7956,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"3857:19:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"RevertStatement","src":"3850:28:24"}},{"assignments":[7961],"declarations":[{"constant":false,"id":7961,"mutability":"mutable","name":"successCount","nameLocation":"3897:12:24","nodeType":"VariableDeclaration","scope":8048,"src":"3889:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3889:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7963,"initialValue":{"hexValue":"30","id":7962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3912:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3889:24:24"},{"assignments":[7965],"declarations":[{"constant":false,"id":7965,"mutability":"mutable","name":"failCount","nameLocation":"3931:9:24","nodeType":"VariableDeclaration","scope":8048,"src":"3923:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7964,"name":"uint256","nodeType":"ElementaryTypeName","src":"3923:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7967,"initialValue":{"hexValue":"30","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3923:21:24"},{"body":{"id":8028,"nodeType":"Block","src":"3995:363:24","statements":[{"condition":{"arguments":[{"baseExpression":{"id":7976,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"4030:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7978,"indexExpression":{"id":7977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4041:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4030:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4053:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4045:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7979,"name":"address","nodeType":"ElementaryTypeName","src":"4045:7:24","typeDescriptions":{}}},"id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4045:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7983,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"4057:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7985,"indexExpression":{"id":7984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4065:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4057:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7975,"name":"_attemptTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"4013:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8022,"nodeType":"Block","src":"4123:194:24","statements":[{"expression":{"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4141:11:24","subExpression":{"id":7991,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"4141:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7993,"nodeType":"ExpressionStatement","src":"4141:11:24"},{"expression":{"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7994,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"4170:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":8002,"indexExpression":{"baseExpression":{"id":7995,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"4186:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7997,"indexExpression":{"id":7996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4197:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4186:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4170:30:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8003,"indexExpression":{"arguments":[{"hexValue":"30","id":8000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4209:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4201:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7998,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:24","typeDescriptions":{}}},"id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4201:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4170:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":8004,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"4216:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8006,"indexExpression":{"id":8005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4224:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4216:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4170:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8008,"nodeType":"ExpressionStatement","src":"4170:56:24"},{"eventCall":{"arguments":[{"baseExpression":{"id":8010,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"4264:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8012,"indexExpression":{"id":8011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4275:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4264:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4287:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4279:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8013,"name":"address","nodeType":"ElementaryTypeName","src":"4279:7:24","typeDescriptions":{}}},"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8017,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"4291:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8019,"indexExpression":{"id":8018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4299:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8009,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"4249:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4249:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8021,"nodeType":"EmitStatement","src":"4244:58:24"}]},"id":8023,"nodeType":"IfStatement","src":"4009:308:24","trueBody":{"id":7990,"nodeType":"Block","src":"4070:47:24","statements":[{"expression":{"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4088:14:24","subExpression":{"id":7987,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4088:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7989,"nodeType":"ExpressionStatement","src":"4088:14:24"}]}},{"id":8027,"nodeType":"UncheckedBlock","src":"4330:18:24","statements":[{"expression":{"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4342:3:24","subExpression":{"id":8024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4344:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8026,"nodeType":"ExpressionStatement","src":"4342:3:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"3971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7972,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"3975:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3986:6:24","memberName":"length","nodeType":"MemberAccess","src":"3975:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3971:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8029,"initializationExpression":{"assignments":[7969],"declarations":[{"constant":false,"id":7969,"mutability":"mutable","name":"i","nameLocation":"3968:1:24","nodeType":"VariableDeclaration","scope":8029,"src":"3960:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7970,"nodeType":"VariableDeclarationStatement","src":"3960:9:24"},"nodeType":"ForStatement","src":"3955:403:24"},{"eventCall":{"arguments":[{"expression":{"id":8031,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4394:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4398:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4394:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4414:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4406:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8033,"name":"address","nodeType":"ElementaryTypeName","src":"4406:7:24","typeDescriptions":{}}},"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4406:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8037,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"4418:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4429:6:24","memberName":"length","nodeType":"MemberAccess","src":"4418:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8039,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"4437:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8040,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"4450:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8041,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"4464:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8030,"name":"BulkTransferExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"4373:20:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:101:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8043,"nodeType":"EmitStatement","src":"4368:106:24"},{"expression":{"arguments":[{"id":8045,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"4504:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8044,"name":"_refundExcessNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"4484:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4484:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8047,"nodeType":"ExpressionStatement","src":"4484:32:24"}]},"documentation":{"id":7941,"nodeType":"StructuredDocumentation","src":"3578:79:24","text":" @dev Handle native currency transfers with failure isolation"},"id":8049,"implemented":true,"kind":"function","modifiers":[],"name":"_handleNativeTransfer","nameLocation":"3671:21:24","nodeType":"FunctionDefinition","parameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7943,"mutability":"mutable","name":"totalAmount","nameLocation":"3710:11:24","nodeType":"VariableDeclaration","scope":8049,"src":"3702:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7946,"mutability":"mutable","name":"recipients","nameLocation":"3750:10:24","nodeType":"VariableDeclaration","scope":8049,"src":"3731:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7944,"name":"address","nodeType":"ElementaryTypeName","src":"3731:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7945,"nodeType":"ArrayTypeName","src":"3731:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7949,"mutability":"mutable","name":"amounts","nameLocation":"3789:7:24","nodeType":"VariableDeclaration","scope":8049,"src":"3770:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7947,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7948,"nodeType":"ArrayTypeName","src":"3770:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3692:110:24"},"returnParameters":{"id":7951,"nodeType":"ParameterList","parameters":[],"src":"3811:0:24"},"scope":8333,"src":"3662:861:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8173,"nodeType":"Block","src":"4774:910:24","statements":[{"assignments":[8065],"declarations":[{"constant":false,"id":8065,"mutability":"mutable","name":"tokenContract","nameLocation":"4791:13:24","nodeType":"VariableDeclaration","scope":8173,"src":"4784:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":8064,"nodeType":"UserDefinedTypeName","pathNode":{"id":8063,"name":"IERC20","nameLocations":["4784:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"4784:6:24"},"referencedDeclaration":992,"src":"4784:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"}],"id":8069,"initialValue":{"arguments":[{"id":8067,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"4814:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8066,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4807:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4784:36:24"},{"assignments":[8071],"declarations":[{"constant":false,"id":8071,"mutability":"mutable","name":"allowance","nameLocation":"4838:9:24","nodeType":"VariableDeclaration","scope":8173,"src":"4830:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8070,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8081,"initialValue":{"arguments":[{"expression":{"id":8074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4874:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4874:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8078,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4894:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}],"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4886:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8076,"name":"address","nodeType":"ElementaryTypeName","src":"4886:7:24","typeDescriptions":{}}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8072,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"4850:13:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4864:9:24","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4850:23:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4850:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4830:70:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8082,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"4914:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8083,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"4926:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4914:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8088,"nodeType":"IfStatement","src":"4910:59:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8085,"name":"InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"4946:21:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4946:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8087,"nodeType":"RevertStatement","src":"4939:30:24"}},{"expression":{"arguments":[{"expression":{"id":8092,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5062:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5062:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8096,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5082:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}],"id":8095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5074:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8094,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:24","typeDescriptions":{}}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5074:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8098,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"5089:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8089,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"5031:13:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5045:16:24","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"5031:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5031:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8100,"nodeType":"ExpressionStatement","src":"5031:70:24"},{"assignments":[8102],"declarations":[{"constant":false,"id":8102,"mutability":"mutable","name":"successCount","nameLocation":"5120:12:24","nodeType":"VariableDeclaration","scope":8173,"src":"5112:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5112:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8104,"initialValue":{"hexValue":"30","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5112:24:24"},{"assignments":[8106],"declarations":[{"constant":false,"id":8106,"mutability":"mutable","name":"failCount","nameLocation":"5154:9:24","nodeType":"VariableDeclaration","scope":8173,"src":"5146:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5146:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8108,"initialValue":{"hexValue":"30","id":8107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5166:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5146:21:24"},{"body":{"id":8160,"nodeType":"Block","src":"5218:348:24","statements":[{"condition":{"arguments":[{"baseExpression":{"id":8117,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"5253:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8119,"indexExpression":{"id":8118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5264:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5253:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"5268:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8121,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"5275:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8123,"indexExpression":{"id":8122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5283:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5275:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8116,"name":"_attemptTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"5236:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8154,"nodeType":"Block","src":"5341:184:24","statements":[{"expression":{"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5359:11:24","subExpression":{"id":8129,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"5359:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8131,"nodeType":"ExpressionStatement","src":"5359:11:24"},{"expression":{"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8132,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"5388:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":8137,"indexExpression":{"baseExpression":{"id":8133,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"5404:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8135,"indexExpression":{"id":8134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5415:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5404:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:30:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8138,"indexExpression":{"id":8136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"5419:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5388:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":8139,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"5429:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8141,"indexExpression":{"id":8140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5437:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5429:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5388:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8143,"nodeType":"ExpressionStatement","src":"5388:51:24"},{"eventCall":{"arguments":[{"baseExpression":{"id":8145,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"5477:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8147,"indexExpression":{"id":8146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5488:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5477:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8148,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"5492:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8149,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"5499:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8151,"indexExpression":{"id":8150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5507:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5499:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8144,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"5462:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5462:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8153,"nodeType":"EmitStatement","src":"5457:53:24"}]},"id":8155,"nodeType":"IfStatement","src":"5232:293:24","trueBody":{"id":8128,"nodeType":"Block","src":"5288:47:24","statements":[{"expression":{"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5306:14:24","subExpression":{"id":8125,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"5306:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8127,"nodeType":"ExpressionStatement","src":"5306:14:24"}]}},{"id":8159,"nodeType":"UncheckedBlock","src":"5538:18:24","statements":[{"expression":{"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5550:3:24","subExpression":{"id":8156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5552:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8158,"nodeType":"ExpressionStatement","src":"5550:3:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"5194:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8113,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"5198:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5209:6:24","memberName":"length","nodeType":"MemberAccess","src":"5198:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5194:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8161,"initializationExpression":{"assignments":[8110],"declarations":[{"constant":false,"id":8110,"mutability":"mutable","name":"i","nameLocation":"5191:1:24","nodeType":"VariableDeclaration","scope":8161,"src":"5183:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5183:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8111,"nodeType":"VariableDeclarationStatement","src":"5183:9:24"},"nodeType":"ForStatement","src":"5178:388:24"},{"eventCall":{"arguments":[{"expression":{"id":8163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5602:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5606:6:24","memberName":"sender","nodeType":"MemberAccess","src":"5602:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8165,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"5614:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8166,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"5621:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:6:24","memberName":"length","nodeType":"MemberAccess","src":"5621:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8168,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"5640:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8169,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"5653:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8170,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"5667:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8162,"name":"BulkTransferExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"5581:20:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256)"}},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5581:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8172,"nodeType":"EmitStatement","src":"5576:101:24"}]},"documentation":{"id":8050,"nodeType":"StructuredDocumentation","src":"4529:69:24","text":" @dev Handle ERC20 transfers with failure isolation"},"id":8174,"implemented":true,"kind":"function","modifiers":[],"name":"_handleERC20Transfer","nameLocation":"4612:20:24","nodeType":"FunctionDefinition","parameters":{"id":8061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8052,"mutability":"mutable","name":"token","nameLocation":"4650:5:24","nodeType":"VariableDeclaration","scope":8174,"src":"4642:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8051,"name":"address","nodeType":"ElementaryTypeName","src":"4642:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8054,"mutability":"mutable","name":"totalAmount","nameLocation":"4673:11:24","nodeType":"VariableDeclaration","scope":8174,"src":"4665:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4665:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"recipients","nameLocation":"4713:10:24","nodeType":"VariableDeclaration","scope":8174,"src":"4694:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8055,"name":"address","nodeType":"ElementaryTypeName","src":"4694:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8056,"nodeType":"ArrayTypeName","src":"4694:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"amounts","nameLocation":"4752:7:24","nodeType":"VariableDeclaration","scope":8174,"src":"4733:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4733:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8059,"nodeType":"ArrayTypeName","src":"4733:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4632:133:24"},"returnParameters":{"id":8062,"nodeType":"ParameterList","parameters":[],"src":"4774:0:24"},"scope":8333,"src":"4603:1081:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8226,"nodeType":"Block","src":"5899:307:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8186,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"5913:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5922:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8187,"name":"address","nodeType":"ElementaryTypeName","src":"5922:7:24","typeDescriptions":{}}},"id":8190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5913:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8224,"nodeType":"Block","src":"6028:172:24","statements":[{"clauses":[{"block":{"id":8215,"nodeType":"Block","src":"6088:47:24","statements":[{"expression":{"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"6106:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6116:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6106:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8214,"nodeType":"ExpressionStatement","src":"6106:14:24"}]},"errorName":"","id":8216,"nodeType":"TryCatchClause","src":"6088:47:24"},{"block":{"id":8221,"nodeType":"Block","src":"6142:48:24","statements":[{"expression":{"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8217,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"6160:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6170:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6160:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8220,"nodeType":"ExpressionStatement","src":"6160:15:24"}]},"errorName":"","id":8222,"nodeType":"TryCatchClause","src":"6136:54:24"}],"externalCall":{"arguments":[{"id":8208,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"6069:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"6080:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"6053:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8204,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6046:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6060:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"6046:22:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:41:24","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8223,"nodeType":"TryStatement","src":"6042:148:24"}]},"id":8225,"nodeType":"IfStatement","src":"5909:291:24","trueBody":{"id":8203,"nodeType":"Block","src":"5934:88:24","statements":[{"expression":{"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8192,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"5949:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":8193,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5948:11:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":8199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6008:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8194,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"5962:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5972:4:24","memberName":"call","nodeType":"MemberAccess","src":"5962:14:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":8196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"5984:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8197,"name":"GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"5997:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5962:45:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"5948:63:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8202,"nodeType":"ExpressionStatement","src":"5948:63:24"}]}}]},"documentation":{"id":8175,"nodeType":"StructuredDocumentation","src":"5690:66:24","text":" @dev Attempt transfer with gas limit protection"},"id":8227,"implemented":true,"kind":"function","modifiers":[],"name":"_attemptTransfer","nameLocation":"5770:16:24","nodeType":"FunctionDefinition","parameters":{"id":8182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"recipient","nameLocation":"5804:9:24","nodeType":"VariableDeclaration","scope":8227,"src":"5796:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8176,"name":"address","nodeType":"ElementaryTypeName","src":"5796:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8179,"mutability":"mutable","name":"token","nameLocation":"5831:5:24","nodeType":"VariableDeclaration","scope":8227,"src":"5823:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8178,"name":"address","nodeType":"ElementaryTypeName","src":"5823:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8181,"mutability":"mutable","name":"amount","nameLocation":"5854:6:24","nodeType":"VariableDeclaration","scope":8227,"src":"5846:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8180,"name":"uint256","nodeType":"ElementaryTypeName","src":"5846:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5786:80:24"},"returnParameters":{"id":8185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8184,"mutability":"mutable","name":"success","nameLocation":"5890:7:24","nodeType":"VariableDeclaration","scope":8227,"src":"5885:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8183,"name":"bool","nodeType":"ElementaryTypeName","src":"5885:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5884:14:24"},"scope":8333,"src":"5761:445:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8262,"nodeType":"Block","src":"6328:233:24","statements":[{"assignments":[8234],"declarations":[{"constant":false,"id":8234,"mutability":"mutable","name":"remainder","nameLocation":"6346:9:24","nodeType":"VariableDeclaration","scope":8262,"src":"6338:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6338:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8239,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6358:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6362:5:24","memberName":"value","nodeType":"MemberAccess","src":"6358:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8237,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"6370:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6358:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6338:43:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8240,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"6395:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6407:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6395:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8261,"nodeType":"IfStatement","src":"6391:164:24","trueBody":{"id":8260,"nodeType":"Block","src":"6410:145:24","statements":[{"assignments":[8244,null],"declarations":[{"constant":false,"id":8244,"mutability":"mutable","name":"success","nameLocation":"6430:7:24","nodeType":"VariableDeclaration","scope":8260,"src":"6425:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8243,"name":"bool","nodeType":"ElementaryTypeName","src":"6425:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8253,"initialValue":{"arguments":[{"hexValue":"","id":8251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6492:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":8245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6442:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6446:6:24","memberName":"sender","nodeType":"MemberAccess","src":"6442:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6453:4:24","memberName":"call","nodeType":"MemberAccess","src":"6442:15:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":8248,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"6465:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8249,"name":"GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"6481:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6442:49:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6442:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6424:71:24"},{"condition":{"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6513:8:24","subExpression":{"id":8254,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"6514:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8259,"nodeType":"IfStatement","src":"6509:35:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8256,"name":"RefundFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"6530:12:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6530:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8258,"nodeType":"RevertStatement","src":"6523:21:24"}}]}}]},"documentation":{"id":8228,"nodeType":"StructuredDocumentation","src":"6212:53:24","text":" @dev Refund excess native currency"},"id":8263,"implemented":true,"kind":"function","modifiers":[],"name":"_refundExcessNative","nameLocation":"6279:19:24","nodeType":"FunctionDefinition","parameters":{"id":8231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8230,"mutability":"mutable","name":"totalAmount","nameLocation":"6307:11:24","nodeType":"VariableDeclaration","scope":8263,"src":"6299:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8229,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6298:21:24"},"returnParameters":{"id":8232,"nodeType":"ParameterList","parameters":[],"src":"6328:0:24"},"scope":8333,"src":"6270:291:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8279,"nodeType":"Block","src":"6732:57:24","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":8273,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"6749:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":8275,"indexExpression":{"id":8274,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"6765:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6749:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8277,"indexExpression":{"id":8276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8268,"src":"6776:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6749:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8272,"id":8278,"nodeType":"Return","src":"6742:40:24"}]},"documentation":{"id":8264,"nodeType":"StructuredDocumentation","src":"6567:69:24","text":" @notice Get failed transfer amount for a recipient"},"functionSelector":"e65c31c4","id":8280,"implemented":true,"kind":"function","modifiers":[],"name":"getFailedAmount","nameLocation":"6650:15:24","nodeType":"FunctionDefinition","parameters":{"id":8269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8266,"mutability":"mutable","name":"recipient","nameLocation":"6674:9:24","nodeType":"VariableDeclaration","scope":8280,"src":"6666:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8265,"name":"address","nodeType":"ElementaryTypeName","src":"6666:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8268,"mutability":"mutable","name":"token","nameLocation":"6693:5:24","nodeType":"VariableDeclaration","scope":8280,"src":"6685:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8267,"name":"address","nodeType":"ElementaryTypeName","src":"6685:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6665:34:24"},"returnParameters":{"id":8272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8280,"src":"6723:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8270,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6722:9:24"},"scope":8333,"src":"6641:148:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8327,"nodeType":"Block","src":"6942:220:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8288,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"6956:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6973:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6965:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8289,"name":"address","nodeType":"ElementaryTypeName","src":"6965:7:24","typeDescriptions":{}}},"id":8292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6965:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6956:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8325,"nodeType":"Block","src":"7056:100:24","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8312,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7097:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":8320,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7138:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}],"id":8319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7130:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8318,"name":"address","nodeType":"ElementaryTypeName","src":"7130:7:24","typeDescriptions":{}}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7130:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":8315,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"7113:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8314,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7106:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7120:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":949,"src":"7106:23:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8309,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"7077:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8308,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"7070:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7070:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7084:12:24","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"7070:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7070:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8324,"nodeType":"ExpressionStatement","src":"7070:75:24"}]},"id":8326,"nodeType":"IfStatement","src":"6952:204:24","trueBody":{"id":8307,"nodeType":"Block","src":"6977:73:24","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":8302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7025:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BulkPayroll_$8333","typeString":"contract BulkPayroll"}],"id":8301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8300,"name":"address","nodeType":"ElementaryTypeName","src":"7017:7:24","typeDescriptions":{}}},"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7017:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7031:7:24","memberName":"balance","nodeType":"MemberAccess","src":"7017:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6999:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6999:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6991:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8294,"name":"address","nodeType":"ElementaryTypeName","src":"6991:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6991:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7008:8:24","memberName":"transfer","nodeType":"MemberAccess","src":"6991:25:24","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6991:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8306,"nodeType":"ExpressionStatement","src":"6991:48:24"}]}}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"6795:81:24","text":" @notice Emergency withdrawal for owner (only failed transfers)"},"functionSelector":"6ff1c9bc","id":8328,"implemented":true,"kind":"function","modifiers":[{"id":8286,"kind":"modifierInvocation","modifierName":{"id":8285,"name":"onlyOwner","nameLocations":["6932:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6932:9:24"},"nodeType":"ModifierInvocation","src":"6932:9:24"}],"name":"emergencyWithdraw","nameLocation":"6890:17:24","nodeType":"FunctionDefinition","parameters":{"id":8284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"token","nameLocation":"6916:5:24","nodeType":"VariableDeclaration","scope":8328,"src":"6908:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8282,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6907:15:24"},"returnParameters":{"id":8287,"nodeType":"ParameterList","parameters":[],"src":"6942:0:24"},"scope":8333,"src":"6881:281:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8331,"nodeType":"Block","src":"7213:2:24","statements":[]},"id":8332,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8329,"nodeType":"ParameterList","parameters":[],"src":"7193:2:24"},"returnParameters":{"id":8330,"nodeType":"ParameterList","parameters":[],"src":"7213:0:24"},"scope":8333,"src":"7186:29:24","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8334,"src":"468:6749:24","usedErrors":[13,18,1030,1686,7728,7730,7732,7734,7736,7738,7740],"usedEvents":[24,7755,7763,7771]}],"src":"32:7186:24"},"id":24},"contracts/DummyUSDT.sol":{"ast":{"absolutePath":"contracts/DummyUSDT.sol","exportedSymbols":{"Context":[1512],"DummyUSDT":[8622],"ERC20":[914],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1018],"Ownable":[147]},"id":8623,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8335,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8623,"sourceUnit":915,"src":"58:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8623,"sourceUnit":148,"src":"114:52:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8339,"name":"ERC20","nameLocations":["377:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"377:5:25"},"id":8340,"nodeType":"InheritanceSpecifier","src":"377:5:25"},{"baseName":{"id":8341,"name":"Ownable","nameLocations":["384:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"384:7:25"},"id":8342,"nodeType":"InheritanceSpecifier","src":"384:7:25"}],"canonicalName":"DummyUSDT","contractDependencies":[],"contractKind":"contract","documentation":{"id":8338,"nodeType":"StructuredDocumentation","src":"168:186:25","text":" @title DummyUSDT\n @dev A simple ERC20 token for testing purposes with faucet functionality\n @notice Compatible with Kaia testnet, includes built-in faucet for easy testing"},"fullyImplemented":true,"id":8622,"linearizedBaseContracts":[8622,147,914,304,1018,992,1512],"name":"DummyUSDT","nameLocation":"364:9:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":8343,"nodeType":"StructuredDocumentation","src":"399:29:25","text":"@dev Faucet configuration"},"functionSelector":"76697640","id":8350,"mutability":"constant","name":"FAUCET_AMOUNT","nameLocation":"457:13:25","nodeType":"VariableDeclaration","scope":8622,"src":"433:53:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":8345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:4:25","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"480:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"484:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"480:6:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"473:13:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"7d1d5d19","id":8353,"mutability":"constant","name":"FAUCET_COOLDOWN","nameLocation":"531:15:25","nodeType":"VariableDeclaration","scope":8622,"src":"507:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8351,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3234","id":8352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"549:8:25","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"24"},"visibility":"public"},{"constant":false,"documentation":{"id":8354,"nodeType":"StructuredDocumentation","src":"568:48:25","text":"@dev Mapping to track last faucet claim time"},"functionSelector":"8a877205","id":8358,"mutability":"mutable","name":"lastFaucetClaim","nameLocation":"656:15:25","nodeType":"VariableDeclaration","scope":8622,"src":"621:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8357,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8355,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"621:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":8359,"nodeType":"StructuredDocumentation","src":"678:15:25","text":"@dev Events"},"eventSelector":"5d4f415c63cd8a5874d9d291cdd64cec37e5dc236d90d659c958d109d78074b3","id":8365,"name":"FaucetClaimed","nameLocation":"704:13:25","nodeType":"EventDefinition","parameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"734:4:25","nodeType":"VariableDeclaration","scope":8365,"src":"718:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8360,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8363,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:25","nodeType":"VariableDeclaration","scope":8365,"src":"740:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:38:25"},"src":"698:58:25"},{"anonymous":false,"eventSelector":"1d2d38bd8a2bbf569e5c5ab629156e01d52761e35f52df2cba12da70e27bf8c9","id":8369,"name":"FaucetFunded","nameLocation":"767:12:25","nodeType":"EventDefinition","parameters":{"id":8368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8367,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"788:6:25","nodeType":"VariableDeclaration","scope":8369,"src":"780:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8366,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"779:16:25"},"src":"761:35:25"},{"documentation":{"id":8370,"nodeType":"StructuredDocumentation","src":"802:22:25","text":"@dev Custom errors"},"errorSelector":"62771006","id":8372,"name":"FaucetCooldown","nameLocation":"835:14:25","nodeType":"ErrorDefinition","parameters":{"id":8371,"nodeType":"ParameterList","parameters":[],"src":"849:2:25"},"src":"829:23:25"},{"errorSelector":"c1336f85","id":8374,"name":"FaucetEmpty","nameLocation":"863:11:25","nodeType":"ErrorDefinition","parameters":{"id":8373,"nodeType":"ParameterList","parameters":[],"src":"874:2:25"},"src":"857:20:25"},{"body":{"id":8423,"nodeType":"Block","src":"1119:332:25","statements":[{"expression":{"arguments":[{"expression":{"id":8389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1175:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1175:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8391,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"1187:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8393,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1207:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1207:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1203:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1187:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8388,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1169:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1169:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8398,"nodeType":"ExpressionStatement","src":"1169:49:25"},{"assignments":[8400],"declarations":[{"constant":false,"id":8400,"mutability":"mutable","name":"faucetFunding","nameLocation":"1295:13:25","nodeType":"VariableDeclaration","scope":8423,"src":"1287:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8401,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"1312:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1328:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8403,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1332:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1332:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1328:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1312:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1311:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1346:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1311:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1287:61:25"},{"expression":{"arguments":[{"arguments":[{"id":8414,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1372:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1364:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8412,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:25","typeDescriptions":{}}},"id":8415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8416,"name":"faucetFunding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"1379:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8411,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1358:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1358:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8418,"nodeType":"ExpressionStatement","src":"1358:35:25"},{"eventCall":{"arguments":[{"id":8420,"name":"faucetFunding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8400,"src":"1430:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8419,"name":"FaucetFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"1417:12:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8422,"nodeType":"EmitStatement","src":"1412:32:25"}]},"documentation":{"id":8375,"nodeType":"StructuredDocumentation","src":"883:147:25","text":" @dev Constructor - creates initial supply and sets up faucet\n @param initialSupply Initial token supply (without decimals)"},"id":8424,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44756d6d792055534454","id":8380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1076:12:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e837d5ff0b50d441e2965cc6349dbfebee60090f0ef6a21cf159af179bdb538","typeString":"literal_string \"Dummy USDT\""},"value":"Dummy USDT"},{"hexValue":"4455534454","id":8381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1090:7:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_06dab35b7e692a44458ec80cd1f612e27c60b1cc845a1b5c8c751d2c47bbc6d7","typeString":"literal_string \"DUSDT\""},"value":"DUSDT"}],"id":8382,"kind":"baseConstructorSpecifier","modifierName":{"id":8379,"name":"ERC20","nameLocations":["1070:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"1070:5:25"},"nodeType":"ModifierInvocation","src":"1070:28:25"},{"arguments":[{"expression":{"id":8384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1107:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1111:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1107:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8386,"kind":"baseConstructorSpecifier","modifierName":{"id":8383,"name":"Ownable","nameLocations":["1099:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1099:7:25"},"nodeType":"ModifierInvocation","src":"1099:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8377,"mutability":"mutable","name":"initialSupply","nameLocation":"1055:13:25","nodeType":"VariableDeclaration","scope":8424,"src":"1047:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1046:23:25"},"returnParameters":{"id":8387,"nodeType":"ParameterList","parameters":[],"src":"1119:0:25"},"scope":8622,"src":"1035:416:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8479,"nodeType":"Block","src":"1612:594:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8428,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1652:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1658:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"1652:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8430,"name":"lastFaucetClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"1670:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8433,"indexExpression":{"expression":{"id":8431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1686:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1690:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1686:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1670:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8434,"name":"FAUCET_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"1700:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1670:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1652:63:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8441,"nodeType":"IfStatement","src":"1648:117:25","trueBody":{"id":8440,"nodeType":"Block","src":"1717:48:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8437,"name":"FaucetCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"1738:14:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1738:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8439,"nodeType":"RevertStatement","src":"1731:23:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8445,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1837:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1829:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8443,"name":"address","nodeType":"ElementaryTypeName","src":"1829:7:25","typeDescriptions":{}}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8442,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1819:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8448,"name":"FAUCET_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"1846:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1819:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8454,"nodeType":"IfStatement","src":"1815:91:25","trueBody":{"id":8453,"nodeType":"Block","src":"1861:45:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8450,"name":"FaucetEmpty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"1882:11:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8452,"nodeType":"RevertStatement","src":"1875:20:25"}]}},{"expression":{"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8455,"name":"lastFaucetClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"1993:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8458,"indexExpression":{"expression":{"id":8456,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2009:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2013:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2009:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1993:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2023:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2029:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"2023:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1993:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8462,"nodeType":"ExpressionStatement","src":"1993:45:25"},{"expression":{"arguments":[{"arguments":[{"id":8466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2102:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8464,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:25","typeDescriptions":{}}},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2109:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2113:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2109:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8470,"name":"FAUCET_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"2121:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8463,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2084:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8472,"nodeType":"ExpressionStatement","src":"2084:51:25"},{"eventCall":{"arguments":[{"expression":{"id":8474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2173:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2177:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2173:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8476,"name":"FAUCET_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"2185:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8473,"name":"FaucetClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"2159:13:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8478,"nodeType":"EmitStatement","src":"2154:45:25"}]},"documentation":{"id":8425,"nodeType":"StructuredDocumentation","src":"1457:123:25","text":" @notice Claim tokens from faucet (once per 24 hours)\n @dev Anyone can call this to get test tokens"},"functionSelector":"de5f72fd","id":8480,"implemented":true,"kind":"function","modifiers":[],"name":"faucet","nameLocation":"1594:6:25","nodeType":"FunctionDefinition","parameters":{"id":8426,"nodeType":"ParameterList","parameters":[],"src":"1600:2:25"},"returnParameters":{"id":8427,"nodeType":"ParameterList","parameters":[],"src":"1612:0:25"},"scope":8622,"src":"1585:621:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8495,"nodeType":"Block","src":"2428:34:25","statements":[{"expression":{"arguments":[{"id":8491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"2444:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"2448:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8490,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2438:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8494,"nodeType":"ExpressionStatement","src":"2438:17:25"}]},"documentation":{"id":8481,"nodeType":"StructuredDocumentation","src":"2212:150:25","text":" @notice Mint new tokens (only owner)\n @param to Address to mint tokens to\n @param amount Amount to mint (with decimals)"},"functionSelector":"40c10f19","id":8496,"implemented":true,"kind":"function","modifiers":[{"id":8488,"kind":"modifierInvocation","modifierName":{"id":8487,"name":"onlyOwner","nameLocations":["2418:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2418:9:25"},"nodeType":"ModifierInvocation","src":"2418:9:25"}],"name":"mint","nameLocation":"2376:4:25","nodeType":"FunctionDefinition","parameters":{"id":8486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"to","nameLocation":"2389:2:25","nodeType":"VariableDeclaration","scope":8496,"src":"2381:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8482,"name":"address","nodeType":"ElementaryTypeName","src":"2381:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8485,"mutability":"mutable","name":"amount","nameLocation":"2401:6:25","nodeType":"VariableDeclaration","scope":8496,"src":"2393:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2380:28:25"},"returnParameters":{"id":8489,"nodeType":"ParameterList","parameters":[],"src":"2428:0:25"},"scope":8622,"src":"2367:95:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8518,"nodeType":"Block","src":"2631:96:25","statements":[{"expression":{"arguments":[{"expression":{"id":8505,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2651:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2651:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8509,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2671:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8507,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:25","typeDescriptions":{}}},"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8511,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"2678:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8504,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"2641:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8513,"nodeType":"ExpressionStatement","src":"2641:44:25"},{"eventCall":{"arguments":[{"id":8515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"2713:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8514,"name":"FaucetFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"2700:12:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8517,"nodeType":"EmitStatement","src":"2695:25:25"}]},"documentation":{"id":8497,"nodeType":"StructuredDocumentation","src":"2468:103:25","text":" @notice Fund the faucet (only owner)\n @param amount Amount to fund faucet with"},"functionSelector":"ae0140b4","id":8519,"implemented":true,"kind":"function","modifiers":[{"id":8502,"kind":"modifierInvocation","modifierName":{"id":8501,"name":"onlyOwner","nameLocations":["2621:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2621:9:25"},"nodeType":"ModifierInvocation","src":"2621:9:25"}],"name":"fundFaucet","nameLocation":"2585:10:25","nodeType":"FunctionDefinition","parameters":{"id":8500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8499,"mutability":"mutable","name":"amount","nameLocation":"2604:6:25","nodeType":"VariableDeclaration","scope":8519,"src":"2596:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2595:16:25"},"returnParameters":{"id":8503,"nodeType":"ParameterList","parameters":[],"src":"2631:0:25"},"scope":8622,"src":"2576:151:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8532,"nodeType":"Block","src":"2843:48:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":8528,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2878:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2870:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8526,"name":"address","nodeType":"ElementaryTypeName","src":"2870:7:25","typeDescriptions":{}}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8525,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2860:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8524,"id":8531,"nodeType":"Return","src":"2853:31:25"}]},"documentation":{"id":8520,"nodeType":"StructuredDocumentation","src":"2733:45:25","text":" @notice Get faucet balance"},"functionSelector":"f1f959a6","id":8533,"implemented":true,"kind":"function","modifiers":[],"name":"getFaucetBalance","nameLocation":"2792:16:25","nodeType":"FunctionDefinition","parameters":{"id":8521,"nodeType":"ParameterList","parameters":[],"src":"2808:2:25"},"returnParameters":{"id":8524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8533,"src":"2834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2833:9:25"},"scope":8622,"src":"2783:108:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8562,"nodeType":"Block","src":"3083:196:25","statements":[{"assignments":[8542],"declarations":[{"constant":false,"id":8542,"mutability":"mutable","name":"nextClaim","nameLocation":"3101:9:25","nodeType":"VariableDeclaration","scope":8562,"src":"3093:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8543,"name":"lastFaucetClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"3113:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8545,"indexExpression":{"id":8544,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8536,"src":"3129:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3113:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8546,"name":"FAUCET_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"3137:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3113:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3093:59:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3166:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"3166:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8551,"name":"nextClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"3185:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3166:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8556,"nodeType":"IfStatement","src":"3162:67:25","trueBody":{"id":8555,"nodeType":"Block","src":"3196:33:25","statements":[{"expression":{"hexValue":"30","id":8553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3217:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8540,"id":8554,"nodeType":"Return","src":"3210:8:25"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8557,"name":"nextClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"3245:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8558,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3257:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"3257:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3245:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8540,"id":8561,"nodeType":"Return","src":"3238:34:25"}]},"documentation":{"id":8534,"nodeType":"StructuredDocumentation","src":"2897:104:25","text":" @notice Get time until next faucet claim for user\n @param user Address to check"},"functionSelector":"6d07b7e5","id":8563,"implemented":true,"kind":"function","modifiers":[],"name":"getTimeUntilNextClaim","nameLocation":"3015:21:25","nodeType":"FunctionDefinition","parameters":{"id":8537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8536,"mutability":"mutable","name":"user","nameLocation":"3045:4:25","nodeType":"VariableDeclaration","scope":8563,"src":"3037:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8535,"name":"address","nodeType":"ElementaryTypeName","src":"3037:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3036:14:25"},"returnParameters":{"id":8540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8563,"src":"3074:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8538,"name":"uint256","nodeType":"ElementaryTypeName","src":"3074:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3073:9:25"},"scope":8622,"src":"3006:273:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8589,"nodeType":"Block","src":"3455:143:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8571,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3472:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3478:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"3472:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8573,"name":"lastFaucetClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"3491:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8575,"indexExpression":{"id":8574,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"3507:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3491:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8576,"name":"FAUCET_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"3515:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3491:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3472:58:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8582,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3568:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3560:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8580,"name":"address","nodeType":"ElementaryTypeName","src":"3560:7:25","typeDescriptions":{}}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8579,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3550:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8585,"name":"FAUCET_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"3578:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3550:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3472:119:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8570,"id":8588,"nodeType":"Return","src":"3465:126:25"}]},"documentation":{"id":8564,"nodeType":"StructuredDocumentation","src":"3285:98:25","text":" @notice Check if user can claim from faucet\n @param user Address to check"},"functionSelector":"01d8a296","id":8590,"implemented":true,"kind":"function","modifiers":[],"name":"canClaimFaucet","nameLocation":"3397:14:25","nodeType":"FunctionDefinition","parameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8566,"mutability":"mutable","name":"user","nameLocation":"3420:4:25","nodeType":"VariableDeclaration","scope":8590,"src":"3412:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8565,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3411:14:25"},"returnParameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8590,"src":"3449:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8568,"name":"bool","nodeType":"ElementaryTypeName","src":"3449:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3448:6:25"},"scope":8622,"src":"3388:210:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8620,"nodeType":"Block","src":"3735:152:25","statements":[{"assignments":[8597],"declarations":[{"constant":false,"id":8597,"mutability":"mutable","name":"balance","nameLocation":"3753:7:25","nodeType":"VariableDeclaration","scope":8620,"src":"3745:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3745:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8604,"initialValue":{"arguments":[{"arguments":[{"id":8601,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3781:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3773:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8599,"name":"address","nodeType":"ElementaryTypeName","src":"3773:7:25","typeDescriptions":{}}},"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8598,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3763:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3763:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3745:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8605,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"3801:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3811:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3801:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8619,"nodeType":"IfStatement","src":"3797:84:25","trueBody":{"id":8618,"nodeType":"Block","src":"3814:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":8611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3846:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DummyUSDT_$8622","typeString":"contract DummyUSDT"}],"id":8610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3838:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8609,"name":"address","nodeType":"ElementaryTypeName","src":"3838:7:25","typeDescriptions":{}}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8613,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3853:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8615,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8608,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3828:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3828:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8617,"nodeType":"ExpressionStatement","src":"3828:42:25"}]}}]},"documentation":{"id":8591,"nodeType":"StructuredDocumentation","src":"3604:76:25","text":" @notice Emergency withdrawal of faucet funds (only owner)"},"functionSelector":"08828c98","id":8621,"implemented":true,"kind":"function","modifiers":[{"id":8594,"kind":"modifierInvocation","modifierName":{"id":8593,"name":"onlyOwner","nameLocations":["3725:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3725:9:25"},"nodeType":"ModifierInvocation","src":"3725:9:25"}],"name":"withdrawFaucetFunds","nameLocation":"3694:19:25","nodeType":"FunctionDefinition","parameters":{"id":8592,"nodeType":"ParameterList","parameters":[],"src":"3713:2:25"},"returnParameters":{"id":8595,"nodeType":"ParameterList","parameters":[],"src":"3735:0:25"},"scope":8622,"src":"3685:202:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8623,"src":"355:3534:25","usedErrors":[13,18,274,279,284,293,298,303,8372,8374],"usedEvents":[24,926,935,8365,8369]}],"src":"32:3858:25"},"id":25},"contracts/InvoiceSubscription.sol":{"ast":{"absolutePath":"contracts/InvoiceSubscription.sol","exportedSymbols":{"AutomationCompatibleInterface":[8645],"Context":[1512],"ECDSA":[3832],"EIP712":[4059],"IERC1363":[229],"IERC20":[992],"IERC5267":[262],"InvoiceSubscription":[9973],"MessageHashUtils":[4145],"Ownable":[147],"Pausable":[1672],"ReentrancyGuard":[1741],"SafeERC20":[1482],"ShortString":[1747],"ShortStrings":[1958]},"id":9974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8624,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":1742,"src":"58:59:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":1483,"src":"118:65:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":148,"src":"184:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":1673,"src":"237:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":8629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":4060,"src":"290:63:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":8630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9974,"sourceUnit":3833,"src":"354:62:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8645,"linearizedBaseContracts":[8645],"name":"AutomationCompatibleInterface","nameLocation":"462:29:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6e04ff0d","id":8639,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"507:11:26","nodeType":"FunctionDefinition","parameters":{"id":8633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8632,"mutability":"mutable","name":"checkData","nameLocation":"534:9:26","nodeType":"VariableDeclaration","scope":8639,"src":"519:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8631,"name":"bytes","nodeType":"ElementaryTypeName","src":"519:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"518:26:26"},"returnParameters":{"id":8638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8635,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"573:12:26","nodeType":"VariableDeclaration","scope":8639,"src":"568:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8634,"name":"bool","nodeType":"ElementaryTypeName","src":"568:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8637,"mutability":"mutable","name":"performData","nameLocation":"600:11:26","nodeType":"VariableDeclaration","scope":8639,"src":"587:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8636,"name":"bytes","nodeType":"ElementaryTypeName","src":"587:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"567:45:26"},"scope":8645,"src":"498:115:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4585e33b","id":8644,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"627:13:26","nodeType":"FunctionDefinition","parameters":{"id":8642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8641,"mutability":"mutable","name":"performData","nameLocation":"656:11:26","nodeType":"VariableDeclaration","scope":8644,"src":"641:26:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8640,"name":"bytes","nodeType":"ElementaryTypeName","src":"641:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"640:28:26"},"returnParameters":{"id":8643,"nodeType":"ParameterList","parameters":[],"src":"677:0:26"},"scope":8645,"src":"618:60:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9974,"src":"452:228:26","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8647,"name":"ReentrancyGuard","nameLocations":["1038:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":1741,"src":"1038:15:26"},"id":8648,"nodeType":"InheritanceSpecifier","src":"1038:15:26"},{"baseName":{"id":8649,"name":"Ownable","nameLocations":["1055:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1055:7:26"},"id":8650,"nodeType":"InheritanceSpecifier","src":"1055:7:26"},{"baseName":{"id":8651,"name":"Pausable","nameLocations":["1064:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"1064:8:26"},"id":8652,"nodeType":"InheritanceSpecifier","src":"1064:8:26"},{"baseName":{"id":8653,"name":"EIP712","nameLocations":["1074:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"1074:6:26"},"id":8654,"nodeType":"InheritanceSpecifier","src":"1074:6:26"},{"baseName":{"id":8655,"name":"AutomationCompatibleInterface","nameLocations":["1082:29:26"],"nodeType":"IdentifierPath","referencedDeclaration":8645,"src":"1082:29:26"},"id":8656,"nodeType":"InheritanceSpecifier","src":"1082:29:26"}],"canonicalName":"InvoiceSubscription","contractDependencies":[],"contractKind":"contract","documentation":{"id":8646,"nodeType":"StructuredDocumentation","src":"682:323:26","text":" @title InvoiceSubscription\n @dev Enhanced contract for invoice payments and subscription management with Chainlink Automation\n @notice Handles one-time invoices and subscription-based payments via EIP-712 signatures\n Features automatic escrow release via Chainlink Automation when invoices are fully funded"},"fullyImplemented":true,"id":9973,"linearizedBaseContracts":[9973,8645,4059,262,1672,147,1512,1741],"name":"InvoiceSubscription","nameLocation":"1015:19:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8660,"libraryName":{"id":8657,"name":"SafeERC20","nameLocations":["1124:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":1482,"src":"1124:9:26"},"nodeType":"UsingForDirective","src":"1118:27:26","typeName":{"id":8659,"nodeType":"UserDefinedTypeName","pathNode":{"id":8658,"name":"IERC20","nameLocations":["1138:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1138:6:26"},"referencedDeclaration":992,"src":"1138:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}},{"global":false,"id":8663,"libraryName":{"id":8661,"name":"ECDSA","nameLocations":["1156:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"1156:5:26"},"nodeType":"UsingForDirective","src":"1150:24:26","typeName":{"id":8662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1166:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"InvoiceSubscription.Invoice","documentation":{"id":8664,"nodeType":"StructuredDocumentation","src":"1180:26:26","text":"@dev Invoice structure"},"id":8686,"members":[{"constant":false,"id":8666,"mutability":"mutable","name":"seller","nameLocation":"1244:6:26","nodeType":"VariableDeclaration","scope":8686,"src":"1236:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8665,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8668,"mutability":"mutable","name":"invoiceAmount","nameLocation":"1268:13:26","nodeType":"VariableDeclaration","scope":8686,"src":"1260:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8670,"mutability":"mutable","name":"token","nameLocation":"1299:5:26","nodeType":"VariableDeclaration","scope":8686,"src":"1291:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8669,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8672,"mutability":"mutable","name":"deadline","nameLocation":"1344:8:26","nodeType":"VariableDeclaration","scope":8686,"src":"1336:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8674,"mutability":"mutable","name":"totalContributed","nameLocation":"1370:16:26","nodeType":"VariableDeclaration","scope":8686,"src":"1362:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8676,"mutability":"mutable","name":"released","nameLocation":"1401:8:26","nodeType":"VariableDeclaration","scope":8686,"src":"1396:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8675,"name":"bool","nodeType":"ElementaryTypeName","src":"1396:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8678,"mutability":"mutable","name":"refunded","nameLocation":"1424:8:26","nodeType":"VariableDeclaration","scope":8686,"src":"1419:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8677,"name":"bool","nodeType":"ElementaryTypeName","src":"1419:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8682,"mutability":"mutable","name":"contributions","nameLocation":"1470:13:26","nodeType":"VariableDeclaration","scope":8686,"src":"1442:41:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8681,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8679,"name":"address","nodeType":"ElementaryTypeName","src":"1450:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1442:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":8685,"mutability":"mutable","name":"contributors","nameLocation":"1503:12:26","nodeType":"VariableDeclaration","scope":8686,"src":"1493:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8683,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8684,"nodeType":"ArrayTypeName","src":"1493:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"Invoice","nameLocation":"1218:7:26","nodeType":"StructDefinition","scope":9973,"src":"1211:311:26","visibility":"public"},{"canonicalName":"InvoiceSubscription.SubscriptionConsent","documentation":{"id":8687,"nodeType":"StructuredDocumentation","src":"1528:51:26","text":"@dev Subscription consent structure for EIP-712"},"id":8704,"members":[{"constant":false,"id":8689,"mutability":"mutable","name":"buyer","nameLocation":"1629:5:26","nodeType":"VariableDeclaration","scope":8704,"src":"1621:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8688,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8691,"mutability":"mutable","name":"seller","nameLocation":"1652:6:26","nodeType":"VariableDeclaration","scope":8704,"src":"1644:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8690,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8693,"mutability":"mutable","name":"token","nameLocation":"1676:5:26","nodeType":"VariableDeclaration","scope":8704,"src":"1668:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8692,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8695,"mutability":"mutable","name":"amountPerInterval","nameLocation":"1699:17:26","nodeType":"VariableDeclaration","scope":8704,"src":"1691:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8697,"mutability":"mutable","name":"intervalSeconds","nameLocation":"1734:15:26","nodeType":"VariableDeclaration","scope":8704,"src":"1726:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8699,"mutability":"mutable","name":"startTimestamp","nameLocation":"1767:14:26","nodeType":"VariableDeclaration","scope":8704,"src":"1759:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8701,"mutability":"mutable","name":"endTimestamp","nameLocation":"1799:12:26","nodeType":"VariableDeclaration","scope":8704,"src":"1791:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8703,"mutability":"mutable","name":"nonce","nameLocation":"1829:5:26","nodeType":"VariableDeclaration","scope":8704,"src":"1821:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SubscriptionConsent","nameLocation":"1591:19:26","nodeType":"StructDefinition","scope":9973,"src":"1584:257:26","visibility":"public"},{"canonicalName":"InvoiceSubscription.ActiveSubscription","documentation":{"id":8705,"nodeType":"StructuredDocumentation","src":"1847:37:26","text":"@dev Active subscription tracking"},"id":8724,"members":[{"constant":false,"id":8707,"mutability":"mutable","name":"buyer","nameLocation":"1933:5:26","nodeType":"VariableDeclaration","scope":8724,"src":"1925:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8706,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8709,"mutability":"mutable","name":"seller","nameLocation":"1956:6:26","nodeType":"VariableDeclaration","scope":8724,"src":"1948:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8708,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8711,"mutability":"mutable","name":"token","nameLocation":"1980:5:26","nodeType":"VariableDeclaration","scope":8724,"src":"1972:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8710,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8713,"mutability":"mutable","name":"amountPerInterval","nameLocation":"2003:17:26","nodeType":"VariableDeclaration","scope":8724,"src":"1995:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8715,"mutability":"mutable","name":"intervalSeconds","nameLocation":"2038:15:26","nodeType":"VariableDeclaration","scope":8724,"src":"2030:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8717,"mutability":"mutable","name":"nextDue","nameLocation":"2071:7:26","nodeType":"VariableDeclaration","scope":8724,"src":"2063:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8719,"mutability":"mutable","name":"endTimestamp","nameLocation":"2096:12:26","nodeType":"VariableDeclaration","scope":8724,"src":"2088:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2088:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8721,"mutability":"mutable","name":"active","nameLocation":"2123:6:26","nodeType":"VariableDeclaration","scope":8724,"src":"2118:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8720,"name":"bool","nodeType":"ElementaryTypeName","src":"2118:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8723,"mutability":"mutable","name":"totalPaid","nameLocation":"2147:9:26","nodeType":"VariableDeclaration","scope":8724,"src":"2139:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ActiveSubscription","nameLocation":"1896:18:26","nodeType":"StructDefinition","scope":9973,"src":"1889:274:26","visibility":"public"},{"constant":true,"documentation":{"id":8725,"nodeType":"StructuredDocumentation","src":"2169:51:26","text":"@dev EIP-712 type hash for subscription consent"},"functionSelector":"dc93ed78","id":8730,"mutability":"constant","name":"SUBSCRIPTION_CONSENT_TYPEHASH","nameLocation":"2249:29:26","nodeType":"VariableDeclaration","scope":9973,"src":"2225:254:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"537562736372697074696f6e436f6e73656e7428616464726573732062757965722c616464726573732073656c6c65722c6164647265737320746f6b656e2c75696e7432353620616d6f756e74506572496e74657276616c2c75696e7432353620696e74657276616c5365636f6e64732c75696e7432353620737461727454696d657374616d702c75696e7432353620656e6454696d657374616d702c75696e74323536206e6f6e636529","id":8728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2300:173:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b9571210281","typeString":"literal_string \"SubscriptionConsent(address buyer,address seller,address token,uint256 amountPerInterval,uint256 intervalSeconds,uint256 startTimestamp,uint256 endTimestamp,uint256 nonce)\""},"value":"SubscriptionConsent(address buyer,address seller,address token,uint256 amountPerInterval,uint256 intervalSeconds,uint256 startTimestamp,uint256 endTimestamp,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b9571210281","typeString":"literal_string \"SubscriptionConsent(address buyer,address seller,address token,uint256 amountPerInterval,uint256 intervalSeconds,uint256 startTimestamp,uint256 endTimestamp,uint256 nonce)\""}],"id":8727,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2281:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:198:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":8731,"nodeType":"StructuredDocumentation","src":"2486:48:26","text":"@dev Mapping from invoice ID to invoice data"},"functionSelector":"f8a8a076","id":8736,"mutability":"mutable","name":"invoices","nameLocation":"2574:8:26","nodeType":"VariableDeclaration","scope":9973,"src":"2539:43:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice)"},"typeName":{"id":8735,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2547:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2539:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8734,"nodeType":"UserDefinedTypeName","pathNode":{"id":8733,"name":"Invoice","nameLocations":["2558:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"2558:7:26"},"referencedDeclaration":8686,"src":"2558:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}}},"visibility":"public"},{"constant":false,"documentation":{"id":8737,"nodeType":"StructuredDocumentation","src":"2593:50:26","text":"@dev Mapping from consent nonce to used status"},"functionSelector":"6a8a6894","id":8743,"mutability":"mutable","name":"usedNonces","nameLocation":"2700:10:26","nodeType":"VariableDeclaration","scope":9973,"src":"2648:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":8742,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8738,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2648:44:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8741,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2675:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2667:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8740,"name":"bool","nodeType":"ElementaryTypeName","src":"2686:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"documentation":{"id":8744,"nodeType":"StructuredDocumentation","src":"2721:61:26","text":"@dev Mapping from subscription key to active subscription"},"functionSelector":"94259c6c","id":8749,"mutability":"mutable","name":"subscriptions","nameLocation":"2833:13:26","nodeType":"VariableDeclaration","scope":9973,"src":"2787:59:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ActiveSubscription_$8724_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.ActiveSubscription)"},"typeName":{"id":8748,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2787:38:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ActiveSubscription_$8724_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.ActiveSubscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8747,"nodeType":"UserDefinedTypeName","pathNode":{"id":8746,"name":"ActiveSubscription","nameLocations":["2806:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":8724,"src":"2806:18:26"},"referencedDeclaration":8724,"src":"2806:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription"}}},"visibility":"public"},{"constant":false,"documentation":{"id":8750,"nodeType":"StructuredDocumentation","src":"2857:61:26","text":"@dev Array to track all invoice IDs for automation checks"},"functionSelector":"e739d90d","id":8753,"mutability":"mutable","name":"allInvoiceIds","nameLocation":"2940:13:26","nodeType":"VariableDeclaration","scope":9973,"src":"2923:30:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2923:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8752,"nodeType":"ArrayTypeName","src":"2923:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":8754,"nodeType":"StructuredDocumentation","src":"2964:58:26","text":"@dev Mapping to check if invoice ID is already tracked"},"functionSelector":"42f144be","id":8758,"mutability":"mutable","name":"invoiceTracked","nameLocation":"3059:14:26","nodeType":"VariableDeclaration","scope":9973,"src":"3027:46:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":8757,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3035:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3027:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8756,"name":"bool","nodeType":"ElementaryTypeName","src":"3046:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"documentation":{"id":8759,"nodeType":"StructuredDocumentation","src":"3080:22:26","text":"@dev Custom errors"},"errorSelector":"93fe191e","id":8761,"name":"InvalidInvoice","nameLocation":"3113:14:26","nodeType":"ErrorDefinition","parameters":{"id":8760,"nodeType":"ParameterList","parameters":[],"src":"3127:2:26"},"src":"3107:23:26"},{"errorSelector":"2c5211c6","id":8763,"name":"InvalidAmount","nameLocation":"3141:13:26","nodeType":"ErrorDefinition","parameters":{"id":8762,"nodeType":"ParameterList","parameters":[],"src":"3154:2:26"},"src":"3135:22:26"},{"errorSelector":"f04e9cf0","id":8765,"name":"InvoiceExpired","nameLocation":"3168:14:26","nodeType":"ErrorDefinition","parameters":{"id":8764,"nodeType":"ParameterList","parameters":[],"src":"3182:2:26"},"src":"3162:23:26"},{"errorSelector":"87f42190","id":8767,"name":"InvoiceAlreadyReleased","nameLocation":"3196:22:26","nodeType":"ErrorDefinition","parameters":{"id":8766,"nodeType":"ParameterList","parameters":[],"src":"3218:2:26"},"src":"3190:31:26"},{"errorSelector":"30f53a1f","id":8769,"name":"InvoiceNotExpired","nameLocation":"3232:17:26","nodeType":"ErrorDefinition","parameters":{"id":8768,"nodeType":"ParameterList","parameters":[],"src":"3249:2:26"},"src":"3226:26:26"},{"errorSelector":"65c7efcc","id":8771,"name":"NoContribution","nameLocation":"3263:14:26","nodeType":"ErrorDefinition","parameters":{"id":8770,"nodeType":"ParameterList","parameters":[],"src":"3277:2:26"},"src":"3257:23:26"},{"errorSelector":"90b8ec18","id":8773,"name":"TransferFailed","nameLocation":"3291:14:26","nodeType":"ErrorDefinition","parameters":{"id":8772,"nodeType":"ParameterList","parameters":[],"src":"3305:2:26"},"src":"3285:23:26"},{"errorSelector":"8baa579f","id":8775,"name":"InvalidSignature","nameLocation":"3319:16:26","nodeType":"ErrorDefinition","parameters":{"id":8774,"nodeType":"ParameterList","parameters":[],"src":"3335:2:26"},"src":"3313:25:26"},{"errorSelector":"1f6d5aef","id":8777,"name":"NonceUsed","nameLocation":"3349:9:26","nodeType":"ErrorDefinition","parameters":{"id":8776,"nodeType":"ParameterList","parameters":[],"src":"3358:2:26"},"src":"3343:18:26"},{"errorSelector":"893dcecf","id":8779,"name":"SubscriptionExpired","nameLocation":"3372:19:26","nodeType":"ErrorDefinition","parameters":{"id":8778,"nodeType":"ParameterList","parameters":[],"src":"3391:2:26"},"src":"3366:28:26"},{"errorSelector":"856a7577","id":8781,"name":"SubscriptionNotDue","nameLocation":"3405:18:26","nodeType":"ErrorDefinition","parameters":{"id":8780,"nodeType":"ParameterList","parameters":[],"src":"3423:2:26"},"src":"3399:27:26"},{"errorSelector":"df0f4e90","id":8783,"name":"InvalidConsent","nameLocation":"3437:14:26","nodeType":"ErrorDefinition","parameters":{"id":8782,"nodeType":"ParameterList","parameters":[],"src":"3451:2:26"},"src":"3431:23:26"},{"anonymous":false,"documentation":{"id":8784,"nodeType":"StructuredDocumentation","src":"3460:15:26","text":"@dev Events"},"eventSelector":"8f26321c4618ec8c97913b89682571e04749f4b1788dba40abd70fdcee9a6005","id":8796,"name":"InvoiceCreated","nameLocation":"3486:14:26","nodeType":"EventDefinition","parameters":{"id":8795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8786,"indexed":true,"mutability":"mutable","name":"invoiceId","nameLocation":"3526:9:26","nodeType":"VariableDeclaration","scope":8796,"src":"3510:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3510:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8788,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"3561:6:26","nodeType":"VariableDeclaration","scope":8796,"src":"3545:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8787,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8790,"indexed":false,"mutability":"mutable","name":"invoiceAmount","nameLocation":"3585:13:26","nodeType":"VariableDeclaration","scope":8796,"src":"3577:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8792,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"3616:5:26","nodeType":"VariableDeclaration","scope":8796,"src":"3608:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8791,"name":"address","nodeType":"ElementaryTypeName","src":"3608:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8794,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"3639:8:26","nodeType":"VariableDeclaration","scope":8796,"src":"3631:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3500:153:26"},"src":"3480:174:26"},{"anonymous":false,"eventSelector":"86823b9f3f8a793cb18f1212a5fe5661d166ffe64228e2e3c43dc38959fba8dc","id":8806,"name":"InvoiceFunded","nameLocation":"3666:13:26","nodeType":"EventDefinition","parameters":{"id":8805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"indexed":true,"mutability":"mutable","name":"invoiceId","nameLocation":"3705:9:26","nodeType":"VariableDeclaration","scope":8806,"src":"3689:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3689:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8800,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"3740:11:26","nodeType":"VariableDeclaration","scope":8806,"src":"3724:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8799,"name":"address","nodeType":"ElementaryTypeName","src":"3724:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8802,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3769:6:26","nodeType":"VariableDeclaration","scope":8806,"src":"3761:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3761:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8804,"indexed":false,"mutability":"mutable","name":"totalContributed","nameLocation":"3793:16:26","nodeType":"VariableDeclaration","scope":8806,"src":"3785:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8803,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3679:136:26"},"src":"3660:156:26"},{"anonymous":false,"eventSelector":"133405e74fa883cc1e7a54282140c2473da655a05387dae06a5c0da4c7565829","id":8814,"name":"InvoiceReleased","nameLocation":"3828:15:26","nodeType":"EventDefinition","parameters":{"id":8813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"indexed":true,"mutability":"mutable","name":"invoiceId","nameLocation":"3869:9:26","nodeType":"VariableDeclaration","scope":8814,"src":"3853:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3853:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8810,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"3904:6:26","nodeType":"VariableDeclaration","scope":8814,"src":"3888:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8809,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8812,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3928:6:26","nodeType":"VariableDeclaration","scope":8814,"src":"3920:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3843:97:26"},"src":"3822:119:26"},{"anonymous":false,"eventSelector":"ef652412e5d49b8285c2154153b00be5e175328caf6225b8a37db5712fb62a1a","id":8822,"name":"InvoiceRefunded","nameLocation":"3953:15:26","nodeType":"EventDefinition","parameters":{"id":8821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8816,"indexed":true,"mutability":"mutable","name":"invoiceId","nameLocation":"3994:9:26","nodeType":"VariableDeclaration","scope":8822,"src":"3978:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3978:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8818,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"4029:11:26","nodeType":"VariableDeclaration","scope":8822,"src":"4013:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8817,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8820,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4058:6:26","nodeType":"VariableDeclaration","scope":8822,"src":"4050:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8819,"name":"uint256","nodeType":"ElementaryTypeName","src":"4050:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3968:102:26"},"src":"3947:124:26"},{"anonymous":false,"eventSelector":"50994af435709064071e6160587eb110aee99f876e414493ea76df89d06e1b4d","id":8834,"name":"SubscriptionCreated","nameLocation":"4083:19:26","nodeType":"EventDefinition","parameters":{"id":8833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8824,"indexed":true,"mutability":"mutable","name":"subscriptionKey","nameLocation":"4128:15:26","nodeType":"VariableDeclaration","scope":8834,"src":"4112:31:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8826,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"4169:5:26","nodeType":"VariableDeclaration","scope":8834,"src":"4153:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8825,"name":"address","nodeType":"ElementaryTypeName","src":"4153:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8828,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"4200:6:26","nodeType":"VariableDeclaration","scope":8834,"src":"4184:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8827,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8830,"indexed":false,"mutability":"mutable","name":"amountPerInterval","nameLocation":"4224:17:26","nodeType":"VariableDeclaration","scope":8834,"src":"4216:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4216:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8832,"indexed":false,"mutability":"mutable","name":"intervalSeconds","nameLocation":"4259:15:26","nodeType":"VariableDeclaration","scope":8834,"src":"4251:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4102:178:26"},"src":"4077:204:26"},{"anonymous":false,"eventSelector":"3c383309b20dfae2b367289760fd90de73b4fce8f3a3667600a9a66b6adef5bc","id":8846,"name":"SubscriptionPayment","nameLocation":"4293:19:26","nodeType":"EventDefinition","parameters":{"id":8845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8836,"indexed":true,"mutability":"mutable","name":"subscriptionKey","nameLocation":"4338:15:26","nodeType":"VariableDeclaration","scope":8846,"src":"4322:31:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4322:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8838,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"4379:5:26","nodeType":"VariableDeclaration","scope":8846,"src":"4363:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8837,"name":"address","nodeType":"ElementaryTypeName","src":"4363:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8840,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"4410:6:26","nodeType":"VariableDeclaration","scope":8846,"src":"4394:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8839,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8842,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4434:6:26","nodeType":"VariableDeclaration","scope":8846,"src":"4426:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8844,"indexed":false,"mutability":"mutable","name":"nextDue","nameLocation":"4458:7:26","nodeType":"VariableDeclaration","scope":8846,"src":"4450:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4312:159:26"},"src":"4287:185:26"},{"anonymous":false,"eventSelector":"1295fc1476ea13733f3084effff7a9178daf713e97031b21ed33bf8f4e71a452","id":8852,"name":"AutomationTriggered","nameLocation":"4484:19:26","nodeType":"EventDefinition","parameters":{"id":8851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8848,"indexed":true,"mutability":"mutable","name":"invoiceId","nameLocation":"4529:9:26","nodeType":"VariableDeclaration","scope":8852,"src":"4513:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4513:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8850,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4556:9:26","nodeType":"VariableDeclaration","scope":8852,"src":"4548:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4503:68:26"},"src":"4478:94:26"},{"body":{"id":8863,"nodeType":"Block","src":"4647:2:26","statements":[]},"id":8864,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"496e766f696365537562736372697074696f6e","id":8855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4599:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1752586bdd1275de756d3436c19abbca19cbc6e9d9b55633f377df20d3f77a7","typeString":"literal_string \"InvoiceSubscription\""},"value":"InvoiceSubscription"},{"hexValue":"31","id":8856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4622:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8857,"kind":"baseConstructorSpecifier","modifierName":{"id":8854,"name":"EIP712","nameLocations":["4592:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"4592:6:26"},"nodeType":"ModifierInvocation","src":"4592:34:26"},{"arguments":[{"expression":{"id":8859,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4635:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4639:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4635:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8861,"kind":"baseConstructorSpecifier","modifierName":{"id":8858,"name":"Ownable","nameLocations":["4627:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4627:7:26"},"nodeType":"ModifierInvocation","src":"4627:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8853,"nodeType":"ParameterList","parameters":[],"src":"4589:2:26"},"returnParameters":{"id":8862,"nodeType":"ParameterList","parameters":[],"src":"4647:0:26"},"scope":9973,"src":"4578:71:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8973,"nodeType":"Block","src":"5105:748:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8880,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"5119:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5137:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5129:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8881,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:26","typeDescriptions":{}}},"id":8884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5129:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5119:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8886,"name":"invoiceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5143:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5160:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5143:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5119:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8893,"nodeType":"IfStatement","src":"5115:71:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8890,"name":"InvalidInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"5170:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8892,"nodeType":"RevertStatement","src":"5163:23:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8894,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5200:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8895,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5212:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5218:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"5212:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5200:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8901,"nodeType":"IfStatement","src":"5196:56:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8898,"name":"InvalidInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"5236:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8900,"nodeType":"RevertStatement","src":"5229:23:26"}},{"expression":{"id":8914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8902,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5263:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":8906,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"5302:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8907,"name":"invoiceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5310:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8908,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"5325:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8909,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5332:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8910,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5342:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"5342:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8904,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5285:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"5285:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5285:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8903,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5275:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:84:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5263:96:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8915,"nodeType":"ExpressionStatement","src":"5263:96:26"},{"assignments":[8918],"declarations":[{"constant":false,"id":8918,"mutability":"mutable","name":"invoice","nameLocation":"5394:7:26","nodeType":"VariableDeclaration","scope":8973,"src":"5378:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":8917,"nodeType":"UserDefinedTypeName","pathNode":{"id":8916,"name":"Invoice","nameLocations":["5378:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"5378:7:26"},"referencedDeclaration":8686,"src":"5378:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":8922,"initialValue":{"baseExpression":{"id":8919,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"5404:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":8921,"indexExpression":{"id":8920,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5413:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5404:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5378:45:26"},{"expression":{"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8923,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"5433:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":8925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5441:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"5433:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8926,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"5450:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5433:23:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8928,"nodeType":"ExpressionStatement","src":"5433:23:26"},{"expression":{"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8929,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"5466:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":8931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5474:13:26","memberName":"invoiceAmount","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"5466:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8932,"name":"invoiceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5490:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5466:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8934,"nodeType":"ExpressionStatement","src":"5466:37:26"},{"expression":{"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8935,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"5513:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":8937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5521:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"5513:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8938,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"5529:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5513:21:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8940,"nodeType":"ExpressionStatement","src":"5513:21:26"},{"expression":{"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8941,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"5544:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":8943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5552:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"5544:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8944,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5563:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5544:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8946,"nodeType":"ExpressionStatement","src":"5544:27:26"},{"condition":{"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5638:26:26","subExpression":{"baseExpression":{"id":8947,"name":"invoiceTracked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"5639:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8949,"indexExpression":{"id":8948,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5654:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5639:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8964,"nodeType":"IfStatement","src":"5634:132:26","trueBody":{"id":8963,"nodeType":"Block","src":"5666:100:26","statements":[{"expression":{"arguments":[{"id":8954,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5699:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8951,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"5680:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5694:4:26","memberName":"push","nodeType":"MemberAccess","src":"5680:18:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5680:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8956,"nodeType":"ExpressionStatement","src":"5680:29:26"},{"expression":{"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8957,"name":"invoiceTracked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"5723:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8959,"indexExpression":{"id":8958,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5738:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5723:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5751:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5723:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8962,"nodeType":"ExpressionStatement","src":"5723:32:26"}]}},{"eventCall":{"arguments":[{"id":8966,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"5796:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8967,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"5807:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8968,"name":"invoiceAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"5815:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8969,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"5830:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8970,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5837:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8965,"name":"InvoiceCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"5781:14:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,address,uint256)"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5781:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8972,"nodeType":"EmitStatement","src":"5776:70:26"}]},"documentation":{"id":8865,"nodeType":"StructuredDocumentation","src":"4655:261:26","text":" @notice Create a new invoice\n @param seller Address that will receive the payment\n @param invoiceAmount Total amount required\n @param token Token address (address(0) for ETH)\n @param deadline Payment deadline timestamp"},"functionSelector":"4dd9d955","id":8974,"implemented":true,"kind":"function","modifiers":[{"id":8876,"kind":"modifierInvocation","modifierName":{"id":8875,"name":"whenNotPaused","nameLocations":["5063:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"5063:13:26"},"nodeType":"ModifierInvocation","src":"5063:13:26"}],"name":"createInvoice","nameLocation":"4930:13:26","nodeType":"FunctionDefinition","parameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8867,"mutability":"mutable","name":"seller","nameLocation":"4961:6:26","nodeType":"VariableDeclaration","scope":8974,"src":"4953:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8866,"name":"address","nodeType":"ElementaryTypeName","src":"4953:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8869,"mutability":"mutable","name":"invoiceAmount","nameLocation":"4985:13:26","nodeType":"VariableDeclaration","scope":8974,"src":"4977:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4977:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8871,"mutability":"mutable","name":"token","nameLocation":"5016:5:26","nodeType":"VariableDeclaration","scope":8974,"src":"5008:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8870,"name":"address","nodeType":"ElementaryTypeName","src":"5008:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8873,"mutability":"mutable","name":"deadline","nameLocation":"5039:8:26","nodeType":"VariableDeclaration","scope":8974,"src":"5031:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5031:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4943:110:26"},"returnParameters":{"id":8879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8878,"mutability":"mutable","name":"invoiceId","nameLocation":"5094:9:26","nodeType":"VariableDeclaration","scope":8974,"src":"5086:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5086:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5085:19:26"},"scope":9973,"src":"4921:932:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9127,"nodeType":"Block","src":"6060:1158:26","statements":[{"assignments":[8986],"declarations":[{"constant":false,"id":8986,"mutability":"mutable","name":"invoice","nameLocation":"6086:7:26","nodeType":"VariableDeclaration","scope":9127,"src":"6070:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":8985,"nodeType":"UserDefinedTypeName","pathNode":{"id":8984,"name":"Invoice","nameLocations":["6070:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"6070:7:26"},"referencedDeclaration":8686,"src":"6070:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":8990,"initialValue":{"baseExpression":{"id":8987,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"6096:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":8989,"indexExpression":{"id":8988,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"6105:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6096:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6070:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8991,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6129:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":8992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"6129:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6155:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6147:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8993,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:26","typeDescriptions":{}}},"id":8996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6129:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9001,"nodeType":"IfStatement","src":"6125:57:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8998,"name":"InvalidInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"6166:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9000,"nodeType":"RevertStatement","src":"6159:23:26"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9002,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6196:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6204:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"6196:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":9004,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6216:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6224:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"6216:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6196:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9010,"nodeType":"IfStatement","src":"6192:73:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9007,"name":"InvoiceAlreadyReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"6241:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6241:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9009,"nodeType":"RevertStatement","src":"6234:31:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9011,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6279:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6285:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"6279:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9013,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6297:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6305:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"6297:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6279:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9019,"nodeType":"IfStatement","src":"6275:63:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9016,"name":"InvoiceExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"6322:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9018,"nodeType":"RevertStatement","src":"6315:23:26"}},{"assignments":[9021],"declarations":[{"constant":false,"id":9021,"mutability":"mutable","name":"amount","nameLocation":"6357:6:26","nodeType":"VariableDeclaration","scope":9127,"src":"6349:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6349:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9022,"nodeType":"VariableDeclarationStatement","src":"6349:14:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9023,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6377:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6385:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"6377:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6402:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6394:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9025,"name":"address","nodeType":"ElementaryTypeName","src":"6394:7:26","typeDescriptions":{}}},"id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6377:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9065,"nodeType":"Block","src":"6455:179:26","statements":[{"expression":{"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9036,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6469:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9042,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6510:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6514:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6510:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9046,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6530:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_InvoiceSubscription_$9973","typeString":"contract InvoiceSubscription"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InvoiceSubscription_$9973","typeString":"contract InvoiceSubscription"}],"id":9045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6522:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9044,"name":"address","nodeType":"ElementaryTypeName","src":"6522:7:26","typeDescriptions":{}}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6522:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":9038,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6485:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6493:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"6485:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9037,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6478:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6478:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":9041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6500:9:26","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"6478:31:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6478:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6469:67:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9050,"nodeType":"ExpressionStatement","src":"6469:67:26"},{"expression":{"arguments":[{"expression":{"id":9056,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6589:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6589:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9060,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6609:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_InvoiceSubscription_$9973","typeString":"contract InvoiceSubscription"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InvoiceSubscription_$9973","typeString":"contract InvoiceSubscription"}],"id":9059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6601:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9058,"name":"address","nodeType":"ElementaryTypeName","src":"6601:7:26","typeDescriptions":{}}},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6601:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6616:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":9052,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6557:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6565:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"6557:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9051,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6550:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6572:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"6550:38:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9064,"nodeType":"ExpressionStatement","src":"6550:73:26"}]},"id":9066,"nodeType":"IfStatement","src":"6373:261:26","trueBody":{"id":9035,"nodeType":"Block","src":"6406:43:26","statements":[{"expression":{"id":9033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6420:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9031,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6429:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6433:5:26","memberName":"value","nodeType":"MemberAccess","src":"6429:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6420:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9034,"nodeType":"ExpressionStatement","src":"6420:18:26"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9067,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6648:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6658:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9073,"nodeType":"IfStatement","src":"6644:39:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9070,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"6668:13:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9072,"nodeType":"RevertStatement","src":"6661:22:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":9074,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6746:13:26","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"6738:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9078,"indexExpression":{"expression":{"id":9076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6760:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6764:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6760:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6738:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6775:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6738:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9091,"nodeType":"IfStatement","src":"6734:106:26","trueBody":{"id":9090,"nodeType":"Block","src":"6778:62:26","statements":[{"expression":{"arguments":[{"expression":{"id":9086,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6818:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6822:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6818:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":9081,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6792:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6800:12:26","memberName":"contributors","nodeType":"MemberAccess","referencedDeclaration":8685,"src":"6792:20:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6813:4:26","memberName":"push","nodeType":"MemberAccess","src":"6792:25:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9089,"nodeType":"ExpressionStatement","src":"6792:37:26"}]}},{"expression":{"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9092,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6849:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:13:26","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"6849:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9097,"indexExpression":{"expression":{"id":9094,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6871:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6875:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6871:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6849:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6886:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6849:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9100,"nodeType":"ExpressionStatement","src":"6849:43:26"},{"expression":{"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9101,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6902:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6910:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"6902:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6930:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6902:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9106,"nodeType":"ExpressionStatement","src":"6902:34:26"},{"eventCall":{"arguments":[{"id":9108,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"6966:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6977:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6981:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6977:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9021,"src":"6989:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9112,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"6997:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7005:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"6997:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9107,"name":"InvoiceFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"6952:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6952:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9115,"nodeType":"EmitStatement","src":"6947:75:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9116,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"7110:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7118:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"7110:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9118,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"7138:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7146:13:26","memberName":"invoiceAmount","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"7138:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7110:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9126,"nodeType":"IfStatement","src":"7106:106:26","trueBody":{"id":9125,"nodeType":"Block","src":"7161:51:26","statements":[{"expression":{"arguments":[{"id":9122,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"7191:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9121,"name":"_releaseInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9644,"src":"7175:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":9123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9124,"nodeType":"ExpressionStatement","src":"7175:26:26"}]}}]},"documentation":{"id":8975,"nodeType":"StructuredDocumentation","src":"5859:112:26","text":" @notice Fund an invoice (partial or full payment)\n @param invoiceId The invoice to fund"},"functionSelector":"e9c9bd99","id":9128,"implemented":true,"kind":"function","modifiers":[{"id":8980,"kind":"modifierInvocation","modifierName":{"id":8979,"name":"nonReentrant","nameLocations":["6033:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"6033:12:26"},"nodeType":"ModifierInvocation","src":"6033:12:26"},{"id":8982,"kind":"modifierInvocation","modifierName":{"id":8981,"name":"whenNotPaused","nameLocations":["6046:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"6046:13:26"},"nodeType":"ModifierInvocation","src":"6046:13:26"}],"name":"fundInvoice","nameLocation":"5985:11:26","nodeType":"FunctionDefinition","parameters":{"id":8978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8977,"mutability":"mutable","name":"invoiceId","nameLocation":"6005:9:26","nodeType":"VariableDeclaration","scope":9128,"src":"5997:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5997:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5996:19:26"},"returnParameters":{"id":8983,"nodeType":"ParameterList","parameters":[],"src":"6060:0:26"},"scope":9973,"src":"5976:1242:26","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9307,"nodeType":"Block","src":"7553:1735:26","statements":[{"assignments":[9142],"declarations":[{"constant":false,"id":9142,"mutability":"mutable","name":"structHash","nameLocation":"7599:10:26","nodeType":"VariableDeclaration","scope":9307,"src":"7591:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7591:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9165,"initialValue":{"arguments":[{"arguments":[{"id":9146,"name":"SUBSCRIPTION_CONSENT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"7646:29:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9147,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7689:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7697:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"7689:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9149,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7716:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7724:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8691,"src":"7716:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9151,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7744:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7752:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8693,"src":"7744:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9153,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7771:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7779:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8695,"src":"7771:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9155,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7810:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7818:15:26","memberName":"intervalSeconds","nodeType":"MemberAccess","referencedDeclaration":8697,"src":"7810:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9157,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7847:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7855:14:26","memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":8699,"src":"7847:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9159,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7883:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7891:12:26","memberName":"endTimestamp","nodeType":"MemberAccess","referencedDeclaration":8701,"src":"7883:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9161,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"7917:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7925:5:26","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":8703,"src":"7917:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9144,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7622:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7626:6:26","memberName":"encode","nodeType":"MemberAccess","src":"7622:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:318:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9143,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7612:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:329:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7591:350:26"},{"assignments":[9167],"declarations":[{"constant":false,"id":9167,"mutability":"mutable","name":"hash","nameLocation":"7960:4:26","nodeType":"VariableDeclaration","scope":9307,"src":"7952:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7952:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9171,"initialValue":{"arguments":[{"id":9169,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"7984:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9168,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"7967:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7967:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7952:43:26"},{"assignments":[9173],"declarations":[{"constant":false,"id":9173,"mutability":"mutable","name":"signer","nameLocation":"8013:6:26","nodeType":"VariableDeclaration","scope":9307,"src":"8005:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9172,"name":"address","nodeType":"ElementaryTypeName","src":"8005:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9178,"initialValue":{"arguments":[{"id":9176,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9134,"src":"8035:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":9174,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9167,"src":"8022:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8027:7:26","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3588,"src":"8022:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":9177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8022:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8005:40:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9179,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"8068:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9180,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8078:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8086:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"8078:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8068:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9186,"nodeType":"IfStatement","src":"8064:54:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9183,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8775,"src":"8100:16:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8100:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9185,"nodeType":"RevertStatement","src":"8093:25:26"}},{"condition":{"baseExpression":{"baseExpression":{"id":9187,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"8132:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":9190,"indexExpression":{"expression":{"id":9188,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8143:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8151:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"8143:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8132:25:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9193,"indexExpression":{"expression":{"id":9191,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8158:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8166:5:26","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":8703,"src":"8158:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8132:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9197,"nodeType":"IfStatement","src":"8128:64:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9194,"name":"NonceUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"8181:9:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8181:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9196,"nodeType":"RevertStatement","src":"8174:18:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9198,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8206:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8212:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"8206:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9200,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8224:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8232:12:26","memberName":"endTimestamp","nodeType":"MemberAccess","referencedDeclaration":8701,"src":"8224:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8206:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9206,"nodeType":"IfStatement","src":"8202:72:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9203,"name":"SubscriptionExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"8253:19:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8253:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9205,"nodeType":"RevertStatement","src":"8246:28:26"}},{"expression":{"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9207,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"8315:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":9212,"indexExpression":{"expression":{"id":9208,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8326:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8334:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"8326:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8315:25:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9213,"indexExpression":{"expression":{"id":9210,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8341:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8349:5:26","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":8703,"src":"8341:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8315:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8358:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8315:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9216,"nodeType":"ExpressionStatement","src":"8315:47:26"},{"assignments":[9218],"declarations":[{"constant":false,"id":9218,"mutability":"mutable","name":"subscriptionKey","nameLocation":"8412:15:26","nodeType":"VariableDeclaration","scope":9307,"src":"8404:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9232,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":9222,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8470:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"8470:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9224,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8498:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8506:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8691,"src":"8498:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9226,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8527:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8535:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8693,"src":"8527:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9228,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8554:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8562:5:26","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":8703,"src":"8554:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9220,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8440:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8444:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"8440:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:137:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9219,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8430:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8430:148:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8404:174:26"},{"assignments":[9235],"declarations":[{"constant":false,"id":9235,"mutability":"mutable","name":"subscription","nameLocation":"8616:12:26","nodeType":"VariableDeclaration","scope":9307,"src":"8589:39:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription"},"typeName":{"id":9234,"nodeType":"UserDefinedTypeName","pathNode":{"id":9233,"name":"ActiveSubscription","nameLocations":["8589:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":8724,"src":"8589:18:26"},"referencedDeclaration":8724,"src":"8589:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription"}},"visibility":"internal"}],"id":9239,"initialValue":{"baseExpression":{"id":9236,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8749,"src":"8631:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ActiveSubscription_$8724_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.ActiveSubscription storage ref)"}},"id":9238,"indexExpression":{"id":9237,"name":"subscriptionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"8645:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:30:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage","typeString":"struct InvoiceSubscription.ActiveSubscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8589:72:26"},{"expression":{"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9240,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8671:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8684:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"8671:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9243,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8692:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8700:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"8692:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8671:34:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9246,"nodeType":"ExpressionStatement","src":"8671:34:26"},{"expression":{"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9247,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8715:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8728:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8709,"src":"8715:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9250,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8737:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8745:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8691,"src":"8737:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8715:36:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9253,"nodeType":"ExpressionStatement","src":"8715:36:26"},{"expression":{"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9254,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8761:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8774:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"8761:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9257,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8782:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8790:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8693,"src":"8782:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8761:34:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9260,"nodeType":"ExpressionStatement","src":"8761:34:26"},{"expression":{"id":9266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9261,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8805:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8818:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"8805:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9264,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8838:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8846:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8695,"src":"8838:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8805:58:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9267,"nodeType":"ExpressionStatement","src":"8805:58:26"},{"expression":{"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9268,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8873:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8886:15:26","memberName":"intervalSeconds","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"8873:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9271,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8904:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8912:15:26","memberName":"intervalSeconds","nodeType":"MemberAccess","referencedDeclaration":8697,"src":"8904:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8873:54:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9274,"nodeType":"ExpressionStatement","src":"8873:54:26"},{"expression":{"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9275,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8937:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8950:7:26","memberName":"nextDue","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"8937:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9278,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"8960:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8968:14:26","memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":8699,"src":"8960:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8937:45:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9281,"nodeType":"ExpressionStatement","src":"8937:45:26"},{"expression":{"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9282,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"8992:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9005:12:26","memberName":"endTimestamp","nodeType":"MemberAccess","referencedDeclaration":8719,"src":"8992:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9285,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"9020:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9028:12:26","memberName":"endTimestamp","nodeType":"MemberAccess","referencedDeclaration":8701,"src":"9020:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8992:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9288,"nodeType":"ExpressionStatement","src":"8992:48:26"},{"expression":{"id":9293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9289,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9235,"src":"9050:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9063:6:26","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8721,"src":"9050:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9072:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9050:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9294,"nodeType":"ExpressionStatement","src":"9050:26:26"},{"eventCall":{"arguments":[{"id":9296,"name":"subscriptionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"9125:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9297,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"9154:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9162:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8689,"src":"9154:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9299,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"9181:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9189:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8691,"src":"9181:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9301,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"9209:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9217:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8695,"src":"9209:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9303,"name":"consent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"9248:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent calldata"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9256:15:26","memberName":"intervalSeconds","nodeType":"MemberAccess","referencedDeclaration":8697,"src":"9248:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9295,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"9092:19:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,uint256)"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:189:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9306,"nodeType":"EmitStatement","src":"9087:194:26"}]},"documentation":{"id":9129,"nodeType":"StructuredDocumentation","src":"7224:163:26","text":" @notice Create subscription via EIP-712 signature\n @param consent The subscription consent data\n @param signature The signed consent"},"functionSelector":"3d478ba9","id":9308,"implemented":true,"kind":"function","modifiers":[{"id":9137,"kind":"modifierInvocation","modifierName":{"id":9136,"name":"nonReentrant","nameLocations":["7526:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"7526:12:26"},"nodeType":"ModifierInvocation","src":"7526:12:26"},{"id":9139,"kind":"modifierInvocation","modifierName":{"id":9138,"name":"whenNotPaused","nameLocations":["7539:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"7539:13:26"},"nodeType":"ModifierInvocation","src":"7539:13:26"}],"name":"createSubscriptionWithConsent","nameLocation":"7401:29:26","nodeType":"FunctionDefinition","parameters":{"id":9135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9132,"mutability":"mutable","name":"consent","nameLocation":"7469:7:26","nodeType":"VariableDeclaration","scope":9308,"src":"7440:36:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_calldata_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent"},"typeName":{"id":9131,"nodeType":"UserDefinedTypeName","pathNode":{"id":9130,"name":"SubscriptionConsent","nameLocations":["7440:19:26"],"nodeType":"IdentifierPath","referencedDeclaration":8704,"src":"7440:19:26"},"referencedDeclaration":8704,"src":"7440:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConsent_$8704_storage_ptr","typeString":"struct InvoiceSubscription.SubscriptionConsent"}},"visibility":"internal"},{"constant":false,"id":9134,"mutability":"mutable","name":"signature","nameLocation":"7501:9:26","nodeType":"VariableDeclaration","scope":9308,"src":"7486:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9133,"name":"bytes","nodeType":"ElementaryTypeName","src":"7486:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7430:86:26"},"returnParameters":{"id":9140,"nodeType":"ParameterList","parameters":[],"src":"7553:0:26"},"scope":9973,"src":"7392:1896:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9452,"nodeType":"Block","src":"9514:1636:26","statements":[{"assignments":[9320],"declarations":[{"constant":false,"id":9320,"mutability":"mutable","name":"subscription","nameLocation":"9551:12:26","nodeType":"VariableDeclaration","scope":9452,"src":"9524:39:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription"},"typeName":{"id":9319,"nodeType":"UserDefinedTypeName","pathNode":{"id":9318,"name":"ActiveSubscription","nameLocations":["9524:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":8724,"src":"9524:18:26"},"referencedDeclaration":8724,"src":"9524:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription"}},"visibility":"internal"}],"id":9324,"initialValue":{"baseExpression":{"id":9321,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8749,"src":"9566:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ActiveSubscription_$8724_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.ActiveSubscription storage ref)"}},"id":9323,"indexExpression":{"id":9322,"name":"subscriptionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"9580:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9566:30:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage","typeString":"struct InvoiceSubscription.ActiveSubscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9524:72:26"},{"condition":{"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9619:20:26","subExpression":{"expression":{"id":9325,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"9620:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9633:6:26","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8721,"src":"9620:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9331,"nodeType":"IfStatement","src":"9615:49:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9328,"name":"InvalidConsent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"9648:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9648:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9330,"nodeType":"RevertStatement","src":"9641:23:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9332,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9678:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9684:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"9678:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9334,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"9696:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9709:12:26","memberName":"endTimestamp","nodeType":"MemberAccess","referencedDeclaration":8719,"src":"9696:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9678:43:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9340,"nodeType":"IfStatement","src":"9674:77:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9337,"name":"SubscriptionExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"9730:19:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9339,"nodeType":"RevertStatement","src":"9723:28:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9341,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9765:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9771:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"9765:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9343,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"9783:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9796:7:26","memberName":"nextDue","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"9783:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9765:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9349,"nodeType":"IfStatement","src":"9761:71:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9346,"name":"SubscriptionNotDue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8781,"src":"9812:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9812:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9348,"nodeType":"RevertStatement","src":"9805:27:26"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9350,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"9874:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9887:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"9874:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9904:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9896:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9352,"name":"address","nodeType":"ElementaryTypeName","src":"9896:7:26","typeDescriptions":{}}},"id":9355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9874:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9424,"nodeType":"Block","src":"10529:232:26","statements":[{"expression":{"arguments":[{"expression":{"id":9416,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10633:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10646:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"10633:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9418,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10669:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10682:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8709,"src":"10669:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9420,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10706:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10719:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10706:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":9412,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10579:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10592:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8711,"src":"10579:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9411,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10572:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":9414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10572:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10599:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"10572:43:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10572:178:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9423,"nodeType":"ExpressionStatement","src":"10572:178:26"}]},"id":9425,"nodeType":"IfStatement","src":"9870:891:26","trueBody":{"id":9410,"nodeType":"Block","src":"9908:615:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9992:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9996:5:26","memberName":"value","nodeType":"MemberAccess","src":"9992:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9359,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10004:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10017:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10004:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9992:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9365,"nodeType":"IfStatement","src":"9988:70:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9362,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10043:13:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10043:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9364,"nodeType":"RevertStatement","src":"10036:22:26"}},{"assignments":[9367,null],"declarations":[{"constant":false,"id":9367,"mutability":"mutable","name":"success","nameLocation":"10091:7:26","nodeType":"VariableDeclaration","scope":9410,"src":"10086:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9366,"name":"bool","nodeType":"ElementaryTypeName","src":"10086:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9376,"initialValue":{"arguments":[{"hexValue":"","id":9374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10167:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":9368,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10103:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10116:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8709,"src":"10103:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10123:4:26","memberName":"call","nodeType":"MemberAccess","src":"10103:24:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":9371,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10135:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10148:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10135:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10103:63:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10085:85:26"},{"condition":{"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10188:8:26","subExpression":{"id":9377,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"10189:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9382,"nodeType":"IfStatement","src":"10184:37:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9379,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"10205:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10205:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9381,"nodeType":"RevertStatement","src":"10198:23:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10281:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10285:5:26","memberName":"value","nodeType":"MemberAccess","src":"10281:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9385,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10293:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10306:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10293:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10281:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9409,"nodeType":"IfStatement","src":"10277:236:26","trueBody":{"id":9408,"nodeType":"Block","src":"10325:188:26","statements":[{"assignments":[9389,null],"declarations":[{"constant":false,"id":9389,"mutability":"mutable","name":"refundSuccess","nameLocation":"10349:13:26","nodeType":"VariableDeclaration","scope":9408,"src":"10344:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9388,"name":"bool","nodeType":"ElementaryTypeName","src":"10344:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9401,"initialValue":{"arguments":[{"hexValue":"","id":9399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10434:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":9390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10367:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10371:6:26","memberName":"sender","nodeType":"MemberAccess","src":"10367:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10378:4:26","memberName":"call","nodeType":"MemberAccess","src":"10367:15:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10390:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10394:5:26","memberName":"value","nodeType":"MemberAccess","src":"10390:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9395,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10402:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10415:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10402:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10367:66:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10367:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10343:94:26"},{"condition":{"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10459:14:26","subExpression":{"id":9402,"name":"refundSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"10460:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9407,"nodeType":"IfStatement","src":"10455:43:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9404,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"10482:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10482:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9406,"nodeType":"RevertStatement","src":"10475:23:26"}}]}}]}},{"expression":{"id":9431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9426,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10808:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10821:7:26","memberName":"nextDue","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"10808:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9429,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10832:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10845:15:26","memberName":"intervalSeconds","nodeType":"MemberAccess","referencedDeclaration":8715,"src":"10832:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10808:52:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9432,"nodeType":"ExpressionStatement","src":"10808:52:26"},{"expression":{"id":9438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9433,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10870:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10883:9:26","memberName":"totalPaid","nodeType":"MemberAccess","referencedDeclaration":8723,"src":"10870:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9436,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"10896:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10909:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"10896:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10870:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9439,"nodeType":"ExpressionStatement","src":"10870:56:26"},{"eventCall":{"arguments":[{"id":9441,"name":"subscriptionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"10975:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9442,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"11004:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11017:5:26","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":8707,"src":"11004:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9444,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"11036:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8709,"src":"11036:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9446,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"11069:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11082:17:26","memberName":"amountPerInterval","nodeType":"MemberAccess","referencedDeclaration":8713,"src":"11069:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9448,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"11113:12:26","typeDescriptions":{"typeIdentifier":"t_struct$_ActiveSubscription_$8724_storage_ptr","typeString":"struct InvoiceSubscription.ActiveSubscription storage pointer"}},"id":9449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11126:7:26","memberName":"nextDue","nodeType":"MemberAccess","referencedDeclaration":8717,"src":"11113:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9440,"name":"SubscriptionPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"10942:19:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,uint256)"}},"id":9450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10942:201:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9451,"nodeType":"EmitStatement","src":"10937:206:26"}]},"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"9294:113:26","text":" @notice Execute subscription payment\n @param subscriptionKey The subscription to process"},"functionSelector":"41508efa","id":9453,"implemented":true,"kind":"function","modifiers":[{"id":9314,"kind":"modifierInvocation","modifierName":{"id":9313,"name":"nonReentrant","nameLocations":["9487:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"9487:12:26"},"nodeType":"ModifierInvocation","src":"9487:12:26"},{"id":9316,"kind":"modifierInvocation","modifierName":{"id":9315,"name":"whenNotPaused","nameLocations":["9500:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"9500:13:26"},"nodeType":"ModifierInvocation","src":"9500:13:26"}],"name":"pullSubscriptionPayment","nameLocation":"9421:23:26","nodeType":"FunctionDefinition","parameters":{"id":9312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"subscriptionKey","nameLocation":"9453:15:26","nodeType":"VariableDeclaration","scope":9453,"src":"9445:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9445:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9444:25:26"},"returnParameters":{"id":9317,"nodeType":"ParameterList","parameters":[],"src":"9514:0:26"},"scope":9973,"src":"9412:1738:26","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9570,"nodeType":"Block","src":"11332:856:26","statements":[{"assignments":[9463],"declarations":[{"constant":false,"id":9463,"mutability":"mutable","name":"invoice","nameLocation":"11358:7:26","nodeType":"VariableDeclaration","scope":9570,"src":"11342:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":9462,"nodeType":"UserDefinedTypeName","pathNode":{"id":9461,"name":"Invoice","nameLocations":["11342:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"11342:7:26"},"referencedDeclaration":8686,"src":"11342:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":9467,"initialValue":{"baseExpression":{"id":9464,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"11368:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9466,"indexExpression":{"id":9465,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9456,"src":"11377:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11368:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11342:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9468,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11401:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11409:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"11401:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11427:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11419:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9470,"name":"address","nodeType":"ElementaryTypeName","src":"11419:7:26","typeDescriptions":{}}},"id":9473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11419:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11401:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9478,"nodeType":"IfStatement","src":"11397:57:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9475,"name":"InvalidInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8761,"src":"11438:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11438:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9477,"nodeType":"RevertStatement","src":"11431:23:26"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9479,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11468:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11476:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"11468:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":9481,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11488:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11496:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"11488:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11468:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9487,"nodeType":"IfStatement","src":"11464:73:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9484,"name":"InvoiceAlreadyReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"11513:22:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9486,"nodeType":"RevertStatement","src":"11506:31:26"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11551:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11557:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"11551:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9490,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11570:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11578:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"11570:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11551:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9496,"nodeType":"IfStatement","src":"11547:67:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9493,"name":"InvoiceNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"11595:17:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11595:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9495,"nodeType":"RevertStatement","src":"11588:26:26"}},{"assignments":[9498],"declarations":[{"constant":false,"id":9498,"mutability":"mutable","name":"contribution","nameLocation":"11633:12:26","nodeType":"VariableDeclaration","scope":9570,"src":"11625:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9497,"name":"uint256","nodeType":"ElementaryTypeName","src":"11625:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9504,"initialValue":{"baseExpression":{"expression":{"id":9499,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11648:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11656:13:26","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"11648:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9503,"indexExpression":{"expression":{"id":9501,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11670:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11674:6:26","memberName":"sender","nodeType":"MemberAccess","src":"11670:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11648:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11625:56:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9505,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"11695:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11711:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11695:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9511,"nodeType":"IfStatement","src":"11691:46:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9508,"name":"NoContribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"11721:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11721:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9510,"nodeType":"RevertStatement","src":"11714:23:26"}},{"expression":{"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9512,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11748:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11756:13:26","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"11748:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9517,"indexExpression":{"expression":{"id":9514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11770:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11774:6:26","memberName":"sender","nodeType":"MemberAccess","src":"11770:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11748:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11784:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11748:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9520,"nodeType":"ExpressionStatement","src":"11748:37:26"},{"expression":{"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9521,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11795:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11803:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"11795:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11814:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11795:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9526,"nodeType":"ExpressionStatement","src":"11795:23:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9527,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"11860:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11868:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"11860:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11885:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11877:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9529,"name":"address","nodeType":"ElementaryTypeName","src":"11877:7:26","typeDescriptions":{}}},"id":9532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11860:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9561,"nodeType":"Block","src":"12029:85:26","statements":[{"expression":{"arguments":[{"expression":{"id":9556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12078:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12078:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9558,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"12090:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":9552,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"12050:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12058:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"12050:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9551,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"12043:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12043:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12065:12:26","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"12043:34:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12043:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9560,"nodeType":"ExpressionStatement","src":"12043:60:26"}]},"id":9562,"nodeType":"IfStatement","src":"11856:258:26","trueBody":{"id":9550,"nodeType":"Block","src":"11889:134:26","statements":[{"assignments":[9535,null],"declarations":[{"constant":false,"id":9535,"mutability":"mutable","name":"success","nameLocation":"11909:7:26","nodeType":"VariableDeclaration","scope":9550,"src":"11904:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9534,"name":"bool","nodeType":"ElementaryTypeName","src":"11904:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9543,"initialValue":{"arguments":[{"hexValue":"","id":9541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11958:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":9536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11921:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11925:6:26","memberName":"sender","nodeType":"MemberAccess","src":"11921:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11932:4:26","memberName":"call","nodeType":"MemberAccess","src":"11921:15:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9539,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"11944:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11921:36:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11903:58:26"},{"condition":{"id":9545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11979:8:26","subExpression":{"id":9544,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"11980:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9549,"nodeType":"IfStatement","src":"11975:37:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9546,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"11996:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11996:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9548,"nodeType":"RevertStatement","src":"11989:23:26"}}]}},{"eventCall":{"arguments":[{"id":9564,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9456,"src":"12145:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12156:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12160:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12156:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9567,"name":"contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9498,"src":"12168:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9563,"name":"InvoiceRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"12129:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9569,"nodeType":"EmitStatement","src":"12124:57:26"}]},"documentation":{"id":9454,"nodeType":"StructuredDocumentation","src":"11156:107:26","text":" @notice Request refund for expired invoice\n @param invoiceId The invoice to refund"},"functionSelector":"775274a1","id":9571,"implemented":true,"kind":"function","modifiers":[{"id":9459,"kind":"modifierInvocation","modifierName":{"id":9458,"name":"nonReentrant","nameLocations":["11319:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"11319:12:26"},"nodeType":"ModifierInvocation","src":"11319:12:26"}],"name":"requestRefund","nameLocation":"11277:13:26","nodeType":"FunctionDefinition","parameters":{"id":9457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9456,"mutability":"mutable","name":"invoiceId","nameLocation":"11299:9:26","nodeType":"VariableDeclaration","scope":9571,"src":"11291:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11291:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11290:19:26"},"returnParameters":{"id":9460,"nodeType":"ParameterList","parameters":[],"src":"11332:0:26"},"scope":9973,"src":"11268:920:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9643,"nodeType":"Block","src":"12320:576:26","statements":[{"assignments":[9579],"declarations":[{"constant":false,"id":9579,"mutability":"mutable","name":"invoice","nameLocation":"12346:7:26","nodeType":"VariableDeclaration","scope":9643,"src":"12330:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":9578,"nodeType":"UserDefinedTypeName","pathNode":{"id":9577,"name":"Invoice","nameLocations":["12330:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"12330:7:26"},"referencedDeclaration":8686,"src":"12330:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":9583,"initialValue":{"baseExpression":{"id":9580,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"12356:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9582,"indexExpression":{"id":9581,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"12365:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12356:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12330:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9584,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12389:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12397:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"12389:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":9586,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12409:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12417:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"12409:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12389:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9590,"nodeType":"IfStatement","src":"12385:49:26","trueBody":{"functionReturnParameters":9576,"id":9589,"nodeType":"Return","src":"12427:7:26"}},{"expression":{"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9591,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12444:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12452:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"12444:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12463:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12444:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9596,"nodeType":"ExpressionStatement","src":"12444:23:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9597,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12520:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12528:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"12520:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12545:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12537:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9599,"name":"address","nodeType":"ElementaryTypeName","src":"12537:7:26","typeDescriptions":{}}},"id":9602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12537:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12520:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9633,"nodeType":"Block","src":"12705:101:26","statements":[{"expression":{"arguments":[{"expression":{"id":9627,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12754:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12762:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"12754:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9629,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12770:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12778:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"12770:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":9623,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12726:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12734:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"12726:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9622,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"12719:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":9625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12719:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":9626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12741:12:26","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"12719:34:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12719:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9632,"nodeType":"ExpressionStatement","src":"12719:76:26"}]},"id":9634,"nodeType":"IfStatement","src":"12516:290:26","trueBody":{"id":9621,"nodeType":"Block","src":"12549:150:26","statements":[{"assignments":[9605,null],"declarations":[{"constant":false,"id":9605,"mutability":"mutable","name":"success","nameLocation":"12569:7:26","nodeType":"VariableDeclaration","scope":9621,"src":"12564:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9604,"name":"bool","nodeType":"ElementaryTypeName","src":"12564:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9614,"initialValue":{"arguments":[{"hexValue":"","id":9612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12634:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":9606,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12581:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12589:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"12581:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12596:4:26","memberName":"call","nodeType":"MemberAccess","src":"12581:19:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":9609,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12608:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12616:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"12608:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12581:52:26","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12581:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12563:74:26"},{"condition":{"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12655:8:26","subExpression":{"id":9615,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9605,"src":"12656:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9620,"nodeType":"IfStatement","src":"12651:37:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9617,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"12672:14:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12672:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9619,"nodeType":"RevertStatement","src":"12665:23:26"}}]}},{"eventCall":{"arguments":[{"id":9636,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"12837:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9637,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12848:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12856:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"12848:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9639,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12864:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12872:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"12864:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9635,"name":"InvoiceReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"12821:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12821:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9642,"nodeType":"EmitStatement","src":"12816:73:26"}]},"documentation":{"id":9572,"nodeType":"StructuredDocumentation","src":"12194:68:26","text":" @dev Internal function to release invoice payment"},"id":9644,"implemented":true,"kind":"function","modifiers":[],"name":"_releaseInvoice","nameLocation":"12276:15:26","nodeType":"FunctionDefinition","parameters":{"id":9575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9574,"mutability":"mutable","name":"invoiceId","nameLocation":"12300:9:26","nodeType":"VariableDeclaration","scope":9644,"src":"12292:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12292:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12291:19:26"},"returnParameters":{"id":9576,"nodeType":"ParameterList","parameters":[],"src":"12320:0:26"},"scope":9973,"src":"12267:629:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[8639],"body":{"id":9785,"nodeType":"Block","src":"13375:1378:26","statements":[{"expression":{"id":9655,"name":"checkData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9647,"src":"13385:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9656,"nodeType":"ExpressionStatement","src":"13385:9:26"},{"assignments":[9661],"declarations":[{"constant":false,"id":9661,"mutability":"mutable","name":"invoicesToRelease","nameLocation":"13466:17:26","nodeType":"VariableDeclaration","scope":9785,"src":"13449:34:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13449:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9660,"nodeType":"ArrayTypeName","src":"13449:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9668,"initialValue":{"arguments":[{"expression":{"id":9665,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"13500:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13514:6:26","memberName":"length","nodeType":"MemberAccess","src":"13500:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13486:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":9662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13490:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9663,"nodeType":"ArrayTypeName","src":"13490:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13486:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13449:72:26"},{"assignments":[9670],"declarations":[{"constant":false,"id":9670,"mutability":"mutable","name":"count","nameLocation":"13539:5:26","nodeType":"VariableDeclaration","scope":9785,"src":"13531:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9669,"name":"uint256","nodeType":"ElementaryTypeName","src":"13531:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9672,"initialValue":{"hexValue":"30","id":9671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13547:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13531:17:26"},{"body":{"id":9727,"nodeType":"Block","src":"13688:495:26","statements":[{"assignments":[9685],"declarations":[{"constant":false,"id":9685,"mutability":"mutable","name":"invoiceId","nameLocation":"13710:9:26","nodeType":"VariableDeclaration","scope":9727,"src":"13702:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13702:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9689,"initialValue":{"baseExpression":{"id":9686,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"13722:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9688,"indexExpression":{"id":9687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13736:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13722:16:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13702:36:26"},{"assignments":[9692],"declarations":[{"constant":false,"id":9692,"mutability":"mutable","name":"invoice","nameLocation":"13768:7:26","nodeType":"VariableDeclaration","scope":9727,"src":"13752:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":9691,"nodeType":"UserDefinedTypeName","pathNode":{"id":9690,"name":"Invoice","nameLocations":["13752:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"13752:7:26"},"referencedDeclaration":8686,"src":"13752:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":9696,"initialValue":{"baseExpression":{"id":9693,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"13778:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9695,"indexExpression":{"id":9694,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9685,"src":"13787:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13778:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13752:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13897:17:26","subExpression":{"expression":{"id":9697,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"13898:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13906:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"13898:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13935:17:26","subExpression":{"expression":{"id":9700,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"13936:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13944:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"13936:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13897:55:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9704,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"13973:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13981:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"13973:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9706,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"14001:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14009:13:26","memberName":"invoiceAmount","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"14001:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13973:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13897:125:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9710,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14042:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14048:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"14042:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9712,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"14061:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14069:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"14061:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14042:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13897:180:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9726,"nodeType":"IfStatement","src":"13893:280:26","trueBody":{"id":9725,"nodeType":"Block","src":"14079:94:26","statements":[{"expression":{"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9716,"name":"invoicesToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"14097:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9718,"indexExpression":{"id":9717,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"14115:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14097:24:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9719,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9685,"src":"14124:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14097:36:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9721,"nodeType":"ExpressionStatement","src":"14097:36:26"},{"expression":{"id":9723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14151:7:26","subExpression":{"id":9722,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"14151:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9724,"nodeType":"ExpressionStatement","src":"14151:7:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13657:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9678,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"13661:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13675:6:26","memberName":"length","nodeType":"MemberAccess","src":"13661:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13657:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9728,"initializationExpression":{"assignments":[9674],"declarations":[{"constant":false,"id":9674,"mutability":"mutable","name":"i","nameLocation":"13650:1:26","nodeType":"VariableDeclaration","scope":9728,"src":"13642:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9673,"name":"uint256","nodeType":"ElementaryTypeName","src":"13642:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9676,"initialValue":{"hexValue":"30","id":9675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13654:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13642:13:26"},"loopExpression":{"expression":{"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13683:3:26","subExpression":{"id":9681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13683:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9683,"nodeType":"ExpressionStatement","src":"13683:3:26"},"nodeType":"ForStatement","src":"13637:546:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9729,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"14275:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14283:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14275:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9783,"nodeType":"Block","src":"14672:75:26","statements":[{"expression":{"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9775,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"14686:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14701:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14686:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9778,"nodeType":"ExpressionStatement","src":"14686:20:26"},{"expression":{"id":9781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9779,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"14720:11:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":9780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14734:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14720:16:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9782,"nodeType":"ExpressionStatement","src":"14720:16:26"}]},"id":9784,"nodeType":"IfStatement","src":"14271:476:26","trueBody":{"id":9774,"nodeType":"Block","src":"14286:380:26","statements":[{"expression":{"id":9734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9732,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"14300:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14315:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14300:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9735,"nodeType":"ExpressionStatement","src":"14300:19:26"},{"assignments":[9740],"declarations":[{"constant":false,"id":9740,"mutability":"mutable","name":"finalInvoices","nameLocation":"14432:13:26","nodeType":"VariableDeclaration","scope":9774,"src":"14415:30:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14415:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9739,"nodeType":"ArrayTypeName","src":"14415:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9746,"initialValue":{"arguments":[{"id":9744,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"14462:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14448:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":9741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14452:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9742,"nodeType":"ArrayTypeName","src":"14452:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14448:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14415:53:26"},{"body":{"id":9765,"nodeType":"Block","src":"14518:72:26","statements":[{"expression":{"id":9763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9757,"name":"finalInvoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"14536:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9759,"indexExpression":{"id":9758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"14550:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14536:16:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9760,"name":"invoicesToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9661,"src":"14555:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9762,"indexExpression":{"id":9761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"14573:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14555:20:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14536:39:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9764,"nodeType":"ExpressionStatement","src":"14536:39:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"14502:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9752,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"14506:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14502:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9766,"initializationExpression":{"assignments":[9748],"declarations":[{"constant":false,"id":9748,"mutability":"mutable","name":"i","nameLocation":"14495:1:26","nodeType":"VariableDeclaration","scope":9766,"src":"14487:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9747,"name":"uint256","nodeType":"ElementaryTypeName","src":"14487:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9750,"initialValue":{"hexValue":"30","id":9749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14499:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14487:13:26"},"loopExpression":{"expression":{"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14513:3:26","subExpression":{"id":9754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"14513:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9756,"nodeType":"ExpressionStatement","src":"14513:3:26"},"nodeType":"ForStatement","src":"14482:108:26"},{"expression":{"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9767,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"14616:11:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9770,"name":"finalInvoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"14641:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":9768,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14630:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14634:6:26","memberName":"encode","nodeType":"MemberAccess","src":"14630:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14630:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14616:39:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9773,"nodeType":"ExpressionStatement","src":"14616:39:26"}]}}]},"documentation":{"id":9645,"nodeType":"StructuredDocumentation","src":"12902:303:26","text":" @notice Chainlink Automation: Check if any invoices need to be automatically released\n @param checkData Additional data (not used in this implementation)\n @return upkeepNeeded True if upkeep is needed\n @return performData Encoded invoice IDs that need to be released"},"functionSelector":"6e04ff0d","id":9786,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"13219:11:26","nodeType":"FunctionDefinition","overrides":{"id":9649,"nodeType":"OverrideSpecifier","overrides":[],"src":"13298:8:26"},"parameters":{"id":9648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9647,"mutability":"mutable","name":"checkData","nameLocation":"13246:9:26","nodeType":"VariableDeclaration","scope":9786,"src":"13231:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9646,"name":"bytes","nodeType":"ElementaryTypeName","src":"13231:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13230:26:26"},"returnParameters":{"id":9654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9651,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"13330:12:26","nodeType":"VariableDeclaration","scope":9786,"src":"13325:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9650,"name":"bool","nodeType":"ElementaryTypeName","src":"13325:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9653,"mutability":"mutable","name":"performData","nameLocation":"13357:11:26","nodeType":"VariableDeclaration","scope":9786,"src":"13344:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9652,"name":"bytes","nodeType":"ElementaryTypeName","src":"13344:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13324:45:26"},"scope":9973,"src":"13210:1543:26","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8644],"body":{"id":9864,"nodeType":"Block","src":"14995:764:26","statements":[{"assignments":[9797],"declarations":[{"constant":false,"id":9797,"mutability":"mutable","name":"invoicesToRelease","nameLocation":"15056:17:26","nodeType":"VariableDeclaration","scope":9864,"src":"15039:34:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15039:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9796,"nodeType":"ArrayTypeName","src":"15039:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":9806,"initialValue":{"arguments":[{"id":9800,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"15087:11:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"baseExpression":{"id":9802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15101:7:26","typeDescriptions":{}}},"id":9803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"15101:9:26","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"type(bytes32[] memory)"}}],"id":9804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15100:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"type(bytes32[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"type(bytes32[] memory)"}],"expression":{"id":9798,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15076:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15080:6:26","memberName":"decode","nodeType":"MemberAccess","src":"15076:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15076:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15039:73:26"},{"body":{"id":9862,"nodeType":"Block","src":"15228:525:26","statements":[{"assignments":[9819],"declarations":[{"constant":false,"id":9819,"mutability":"mutable","name":"invoiceId","nameLocation":"15250:9:26","nodeType":"VariableDeclaration","scope":9862,"src":"15242:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15242:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9823,"initialValue":{"baseExpression":{"id":9820,"name":"invoicesToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9797,"src":"15262:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9822,"indexExpression":{"id":9821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"15280:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15262:20:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15242:40:26"},{"assignments":[9826],"declarations":[{"constant":false,"id":9826,"mutability":"mutable","name":"invoice","nameLocation":"15312:7:26","nodeType":"VariableDeclaration","scope":9862,"src":"15296:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":9825,"nodeType":"UserDefinedTypeName","pathNode":{"id":9824,"name":"Invoice","nameLocations":["15296:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"15296:7:26"},"referencedDeclaration":8686,"src":"15296:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":9830,"initialValue":{"baseExpression":{"id":9827,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"15322:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9829,"indexExpression":{"id":9828,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"15331:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15322:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15296:45:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15432:17:26","subExpression":{"expression":{"id":9831,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9826,"src":"15433:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15441:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"15433:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15470:17:26","subExpression":{"expression":{"id":9834,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9826,"src":"15471:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15479:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"15471:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15432:55:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9838,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9826,"src":"15508:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15516:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"15508:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9840,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9826,"src":"15536:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15544:13:26","memberName":"invoiceAmount","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"15536:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15508:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15432:125:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9844,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15577:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15583:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"15577:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9846,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9826,"src":"15596:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15604:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"15596:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15577:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15432:180:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9861,"nodeType":"IfStatement","src":"15428:315:26","trueBody":{"id":9860,"nodeType":"Block","src":"15614:129:26","statements":[{"expression":{"arguments":[{"id":9851,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"15648:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9850,"name":"_releaseInvoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9644,"src":"15632:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":9852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15632:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9853,"nodeType":"ExpressionStatement","src":"15632:26:26"},{"eventCall":{"arguments":[{"id":9855,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"15701:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9856,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15712:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15718:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"15712:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9854,"name":"AutomationTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"15681:19:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15681:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9859,"nodeType":"EmitStatement","src":"15676:52:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"15193:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9812,"name":"invoicesToRelease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9797,"src":"15197:17:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15215:6:26","memberName":"length","nodeType":"MemberAccess","src":"15197:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15193:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9863,"initializationExpression":{"assignments":[9808],"declarations":[{"constant":false,"id":9808,"mutability":"mutable","name":"i","nameLocation":"15186:1:26","nodeType":"VariableDeclaration","scope":9863,"src":"15178:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9807,"name":"uint256","nodeType":"ElementaryTypeName","src":"15178:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9810,"initialValue":{"hexValue":"30","id":9809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15190:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15178:13:26"},"loopExpression":{"expression":{"id":9816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15223:3:26","subExpression":{"id":9815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"15223:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9817,"nodeType":"ExpressionStatement","src":"15223:3:26"},"nodeType":"ForStatement","src":"15173:580:26"}]},"documentation":{"id":9787,"nodeType":"StructuredDocumentation","src":"14759:162:26","text":" @notice Chainlink Automation: Perform the upkeep by releasing funds for ready invoices\n @param performData Encoded invoice IDs to release"},"functionSelector":"4585e33b","id":9865,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"14935:13:26","nodeType":"FunctionDefinition","overrides":{"id":9791,"nodeType":"OverrideSpecifier","overrides":[],"src":"14986:8:26"},"parameters":{"id":9790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9789,"mutability":"mutable","name":"performData","nameLocation":"14964:11:26","nodeType":"VariableDeclaration","scope":9865,"src":"14949:26:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9788,"name":"bytes","nodeType":"ElementaryTypeName","src":"14949:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14948:28:26"},"returnParameters":{"id":9792,"nodeType":"ParameterList","parameters":[],"src":"14995:0:26"},"scope":9973,"src":"14926:833:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9907,"nodeType":"Block","src":"16039:307:26","statements":[{"assignments":[9886],"declarations":[{"constant":false,"id":9886,"mutability":"mutable","name":"invoice","nameLocation":"16065:7:26","nodeType":"VariableDeclaration","scope":9907,"src":"16049:23:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"},"typeName":{"id":9885,"nodeType":"UserDefinedTypeName","pathNode":{"id":9884,"name":"Invoice","nameLocations":["16049:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"16049:7:26"},"referencedDeclaration":8686,"src":"16049:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice"}},"visibility":"internal"}],"id":9890,"initialValue":{"baseExpression":{"id":9887,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"16075:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9889,"indexExpression":{"id":9888,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"16084:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16075:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16049:45:26"},{"expression":{"components":[{"expression":{"id":9891,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16125:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16133:6:26","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"16125:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9893,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16153:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16161:13:26","memberName":"invoiceAmount","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"16153:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9895,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16188:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16196:5:26","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"16188:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9897,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16215:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16223:8:26","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"16215:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9899,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16245:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16253:16:26","memberName":"totalContributed","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"16245:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9901,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16283:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16291:8:26","memberName":"released","nodeType":"MemberAccess","referencedDeclaration":8676,"src":"16283:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":9903,"name":"invoice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"16313:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage_ptr","typeString":"struct InvoiceSubscription.Invoice storage pointer"}},"id":9904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16321:8:26","memberName":"refunded","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"16313:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16111:228:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$","typeString":"tuple(address,uint256,address,uint256,uint256,bool,bool)"}},"functionReturnParameters":9883,"id":9906,"nodeType":"Return","src":"16104:235:26"}]},"functionSelector":"cb802c8b","id":9908,"implemented":true,"kind":"function","modifiers":[],"name":"getInvoice","nameLocation":"15796:10:26","nodeType":"FunctionDefinition","parameters":{"id":9868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9867,"mutability":"mutable","name":"invoiceId","nameLocation":"15815:9:26","nodeType":"VariableDeclaration","scope":9908,"src":"15807:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15807:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15806:19:26"},"returnParameters":{"id":9883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9870,"mutability":"mutable","name":"seller","nameLocation":"15866:6:26","nodeType":"VariableDeclaration","scope":9908,"src":"15858:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9869,"name":"address","nodeType":"ElementaryTypeName","src":"15858:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9872,"mutability":"mutable","name":"invoiceAmount","nameLocation":"15890:13:26","nodeType":"VariableDeclaration","scope":9908,"src":"15882:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9871,"name":"uint256","nodeType":"ElementaryTypeName","src":"15882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9874,"mutability":"mutable","name":"token","nameLocation":"15921:5:26","nodeType":"VariableDeclaration","scope":9908,"src":"15913:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9873,"name":"address","nodeType":"ElementaryTypeName","src":"15913:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9876,"mutability":"mutable","name":"deadline","nameLocation":"15944:8:26","nodeType":"VariableDeclaration","scope":9908,"src":"15936:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9875,"name":"uint256","nodeType":"ElementaryTypeName","src":"15936:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9878,"mutability":"mutable","name":"totalContributed","nameLocation":"15970:16:26","nodeType":"VariableDeclaration","scope":9908,"src":"15962:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9877,"name":"uint256","nodeType":"ElementaryTypeName","src":"15962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9880,"mutability":"mutable","name":"released","nameLocation":"16001:8:26","nodeType":"VariableDeclaration","scope":9908,"src":"15996:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9879,"name":"bool","nodeType":"ElementaryTypeName","src":"15996:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9882,"mutability":"mutable","name":"refunded","nameLocation":"16024:8:26","nodeType":"VariableDeclaration","scope":9908,"src":"16019:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9881,"name":"bool","nodeType":"ElementaryTypeName","src":"16019:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15848:190:26"},"scope":9973,"src":"15787:559:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9924,"nodeType":"Block","src":"16449:70:26","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":9917,"name":"invoices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"16466:8:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Invoice_$8686_storage_$","typeString":"mapping(bytes32 => struct InvoiceSubscription.Invoice storage ref)"}},"id":9919,"indexExpression":{"id":9918,"name":"invoiceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"16475:9:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16466:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Invoice_$8686_storage","typeString":"struct InvoiceSubscription.Invoice storage ref"}},"id":9920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16486:13:26","memberName":"contributions","nodeType":"MemberAccess","referencedDeclaration":8682,"src":"16466:33:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9922,"indexExpression":{"id":9921,"name":"contributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"16500:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16466:46:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9916,"id":9923,"nodeType":"Return","src":"16459:53:26"}]},"functionSelector":"6693643f","id":9925,"implemented":true,"kind":"function","modifiers":[],"name":"getContribution","nameLocation":"16361:15:26","nodeType":"FunctionDefinition","parameters":{"id":9913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9910,"mutability":"mutable","name":"invoiceId","nameLocation":"16385:9:26","nodeType":"VariableDeclaration","scope":9925,"src":"16377:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9912,"mutability":"mutable","name":"contributor","nameLocation":"16404:11:26","nodeType":"VariableDeclaration","scope":9925,"src":"16396:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9911,"name":"address","nodeType":"ElementaryTypeName","src":"16396:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16376:40:26"},"returnParameters":{"id":9916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9925,"src":"16440:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9914,"name":"uint256","nodeType":"ElementaryTypeName","src":"16440:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16439:9:26"},"scope":9973,"src":"16352:167:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9933,"nodeType":"Block","src":"16589:44:26","statements":[{"expression":{"expression":{"id":9930,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"16606:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16620:6:26","memberName":"length","nodeType":"MemberAccess","src":"16606:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9929,"id":9932,"nodeType":"Return","src":"16599:27:26"}]},"functionSelector":"29433dea","id":9934,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalInvoiceCount","nameLocation":"16534:20:26","nodeType":"FunctionDefinition","parameters":{"id":9926,"nodeType":"ParameterList","parameters":[],"src":"16554:2:26"},"returnParameters":{"id":9929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9934,"src":"16580:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9927,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16579:9:26"},"scope":9973,"src":"16525:108:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9953,"nodeType":"Block","src":"16715:114:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9942,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"16733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9943,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"16741:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16755:6:26","memberName":"length","nodeType":"MemberAccess","src":"16741:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16733:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":9946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16763:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":9941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16725:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16725:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9948,"nodeType":"ExpressionStatement","src":"16725:60:26"},{"expression":{"baseExpression":{"id":9949,"name":"allInvoiceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"16802:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":9951,"indexExpression":{"id":9950,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9936,"src":"16816:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16802:20:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9940,"id":9952,"nodeType":"Return","src":"16795:27:26"}]},"functionSelector":"dedc0b04","id":9954,"implemented":true,"kind":"function","modifiers":[],"name":"getInvoiceIdAtIndex","nameLocation":"16648:19:26","nodeType":"FunctionDefinition","parameters":{"id":9937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9936,"mutability":"mutable","name":"index","nameLocation":"16676:5:26","nodeType":"VariableDeclaration","scope":9954,"src":"16668:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9935,"name":"uint256","nodeType":"ElementaryTypeName","src":"16668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16667:15:26"},"returnParameters":{"id":9940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9954,"src":"16706:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16706:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16705:9:26"},"scope":9973,"src":"16639:190:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9962,"nodeType":"Block","src":"16894:25:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9959,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"16904:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16904:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9961,"nodeType":"ExpressionStatement","src":"16904:8:26"}]},"functionSelector":"8456cb59","id":9963,"implemented":true,"kind":"function","modifiers":[{"id":9957,"kind":"modifierInvocation","modifierName":{"id":9956,"name":"onlyOwner","nameLocations":["16884:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16884:9:26"},"nodeType":"ModifierInvocation","src":"16884:9:26"}],"name":"pause","nameLocation":"16867:5:26","nodeType":"FunctionDefinition","parameters":{"id":9955,"nodeType":"ParameterList","parameters":[],"src":"16872:2:26"},"returnParameters":{"id":9958,"nodeType":"ParameterList","parameters":[],"src":"16894:0:26"},"scope":9973,"src":"16858:61:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9971,"nodeType":"Block","src":"16963:27:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9968,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"16973:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16973:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9970,"nodeType":"ExpressionStatement","src":"16973:10:26"}]},"functionSelector":"3f4ba83a","id":9972,"implemented":true,"kind":"function","modifiers":[{"id":9966,"kind":"modifierInvocation","modifierName":{"id":9965,"name":"onlyOwner","nameLocations":["16953:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16953:9:26"},"nodeType":"ModifierInvocation","src":"16953:9:26"}],"name":"unpause","nameLocation":"16934:7:26","nodeType":"FunctionDefinition","parameters":{"id":9964,"nodeType":"ParameterList","parameters":[],"src":"16941:2:26"},"returnParameters":{"id":9967,"nodeType":"ParameterList","parameters":[],"src":"16963:0:26"},"scope":9973,"src":"16925:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9974,"src":"1006:15986:26","usedErrors":[13,18,1030,1586,1589,1686,1755,1757,3495,3500,3505,8761,8763,8765,8767,8769,8771,8773,8775,8777,8779,8781,8783],"usedEvents":[24,242,1578,1583,8796,8806,8814,8822,8834,8846,8852]}],"src":"32:16961:26"},"id":26},"contracts/SplitBilling.sol":{"ast":{"absolutePath":"contracts/SplitBilling.sol","exportedSymbols":{"IERC20":[992],"ReentrancyGuard":[1741],"SplitBilling":[10906]},"id":10907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9975,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":1742,"src":"58:59:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":9977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10907,"sourceUnit":993,"src":"118:56:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9979,"name":"ReentrancyGuard","nameLocations":["406:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":1741,"src":"406:15:27"},"id":9980,"nodeType":"InheritanceSpecifier","src":"406:15:27"}],"canonicalName":"SplitBilling","contractDependencies":[],"contractKind":"contract","documentation":{"id":9978,"nodeType":"StructuredDocumentation","src":"176:204:27","text":" @title SplitBilling  \n @dev Enhanced contract for splitting payments with deadline management\n @notice Allows payment splitting among recipients with deadline tracking and failure isolation"},"fullyImplemented":true,"id":10906,"linearizedBaseContracts":[10906,1741],"name":"SplitBilling","nameLocation":"390:12:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e1f1c4a7","id":9983,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"474:12:27","nodeType":"VariableDeclaration","scope":10906,"src":"450:44:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9981,"name":"uint256","nodeType":"ElementaryTypeName","src":"450:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":9982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"489:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"a6980ce2","id":9986,"mutability":"constant","name":"MAX_RECIPIENTS","nameLocation":"524:14:27","nodeType":"VariableDeclaration","scope":10906,"src":"500:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9984,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":9985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"541:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"091d2788","id":9989,"mutability":"constant","name":"GAS_LIMIT","nameLocation":"573:9:27","nodeType":"VariableDeclaration","scope":10906,"src":"549:41:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9987,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030","id":9988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:5:27","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"visibility":"public"},{"constant":true,"functionSelector":"58bc8337","id":9995,"mutability":"constant","name":"ETH_TOKEN","nameLocation":"620:9:27","nodeType":"VariableDeclaration","scope":10906,"src":"596:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9990,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":9993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"640:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"632:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9991,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:27","typeDescriptions":{}}},"id":9994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"632:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"SplitBilling.SplitRequest","id":10024,"members":[{"constant":false,"id":9997,"mutability":"mutable","name":"payer","nameLocation":"702:5:27","nodeType":"VariableDeclaration","scope":10024,"src":"694:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9996,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9999,"mutability":"mutable","name":"token","nameLocation":"725:5:27","nodeType":"VariableDeclaration","scope":10024,"src":"717:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9998,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10001,"mutability":"mutable","name":"totalAmount","nameLocation":"748:11:27","nodeType":"VariableDeclaration","scope":10024,"src":"740:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10000,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10003,"mutability":"mutable","name":"deadline","nameLocation":"777:8:27","nodeType":"VariableDeclaration","scope":10024,"src":"769:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10002,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10005,"mutability":"mutable","name":"completed","nameLocation":"800:9:27","nodeType":"VariableDeclaration","scope":10024,"src":"795:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10004,"name":"bool","nodeType":"ElementaryTypeName","src":"795:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10007,"mutability":"mutable","name":"successCount","nameLocation":"827:12:27","nodeType":"VariableDeclaration","scope":10024,"src":"819:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10006,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10009,"mutability":"mutable","name":"failCount","nameLocation":"857:9:27","nodeType":"VariableDeclaration","scope":10024,"src":"849:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10008,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10012,"mutability":"mutable","name":"recipients","nameLocation":"886:10:27","nodeType":"VariableDeclaration","scope":10024,"src":"876:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10010,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10011,"nodeType":"ArrayTypeName","src":"876:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10015,"mutability":"mutable","name":"shares","nameLocation":"916:6:27","nodeType":"VariableDeclaration","scope":10024,"src":"906:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10013,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10014,"nodeType":"ArrayTypeName","src":"906:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10019,"mutability":"mutable","name":"hasPaid","nameLocation":"957:7:27","nodeType":"VariableDeclaration","scope":10024,"src":"932:32:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":10018,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10016,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"932:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10017,"name":"bool","nodeType":"ElementaryTypeName","src":"951:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":10023,"mutability":"mutable","name":"expectedAmounts","nameLocation":"1002:15:27","nodeType":"VariableDeclaration","scope":10024,"src":"974:43:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":10022,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10020,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"974:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10021,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"SplitRequest","nameLocation":"671:12:27","nodeType":"StructDefinition","scope":10906,"src":"664:360:27","visibility":"public"},{"constant":false,"functionSelector":"1b60f266","id":10030,"mutability":"mutable","name":"failedTransfers","nameLocation":"1100:15:27","nodeType":"VariableDeclaration","scope":10906,"src":"1045:70:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":10029,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10025,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1045:47:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10028,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10026,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1064:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"1319afc3","id":10035,"mutability":"mutable","name":"splitRequests","nameLocation":"1193:13:27","nodeType":"VariableDeclaration","scope":10906,"src":"1153:53:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest)"},"typeName":{"id":10034,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1153:32:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10033,"nodeType":"UserDefinedTypeName","pathNode":{"id":10032,"name":"SplitRequest","nameLocations":["1172:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":10024,"src":"1172:12:27"},"referencedDeclaration":10024,"src":"1172:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"c854a85d","id":10037,"mutability":"mutable","name":"splitCounter","nameLocation":"1227:12:27","nodeType":"VariableDeclaration","scope":10906,"src":"1212:27:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b010e520439ff6123538d2bf911123dce8a3c0e4007bc029fb3373d9d3bdf8b4","id":10055,"name":"SplitCreated","nameLocation":"1266:12:27","nodeType":"EventDefinition","parameters":{"id":10054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10039,"indexed":true,"mutability":"mutable","name":"splitId","nameLocation":"1304:7:27","nodeType":"VariableDeclaration","scope":10055,"src":"1288:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1288:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10041,"indexed":true,"mutability":"mutable","name":"payer","nameLocation":"1337:5:27","nodeType":"VariableDeclaration","scope":10055,"src":"1321:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10040,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10043,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1360:5:27","nodeType":"VariableDeclaration","scope":10055,"src":"1352:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10042,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10045,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1383:11:27","nodeType":"VariableDeclaration","scope":10055,"src":"1375:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10047,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"1412:8:27","nodeType":"VariableDeclaration","scope":10055,"src":"1404:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10050,"indexed":false,"mutability":"mutable","name":"recipients","nameLocation":"1440:10:27","nodeType":"VariableDeclaration","scope":10055,"src":"1430:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10048,"name":"address","nodeType":"ElementaryTypeName","src":"1430:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10049,"nodeType":"ArrayTypeName","src":"1430:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10053,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1470:6:27","nodeType":"VariableDeclaration","scope":10055,"src":"1460:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1460:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10052,"nodeType":"ArrayTypeName","src":"1460:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1278:204:27"},"src":"1260:223:27"},{"anonymous":false,"eventSelector":"d2afa6c26b683e76d6a420af12cb290fb3fd4f25c412e8275ba2d41ac70da1c6","id":10069,"name":"SplitExecuted","nameLocation":"1495:13:27","nodeType":"EventDefinition","parameters":{"id":10068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10057,"indexed":true,"mutability":"mutable","name":"splitId","nameLocation":"1534:7:27","nodeType":"VariableDeclaration","scope":10069,"src":"1518:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10059,"indexed":true,"mutability":"mutable","name":"payer","nameLocation":"1567:5:27","nodeType":"VariableDeclaration","scope":10069,"src":"1551:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10058,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10061,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1590:5:27","nodeType":"VariableDeclaration","scope":10069,"src":"1582:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10060,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10063,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1613:11:27","nodeType":"VariableDeclaration","scope":10069,"src":"1605:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10065,"indexed":false,"mutability":"mutable","name":"successCount","nameLocation":"1642:12:27","nodeType":"VariableDeclaration","scope":10069,"src":"1634:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10067,"indexed":false,"mutability":"mutable","name":"failCount","nameLocation":"1672:9:27","nodeType":"VariableDeclaration","scope":10069,"src":"1664:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1664:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:179:27"},"src":"1489:199:27"},{"anonymous":false,"eventSelector":"d7e0fd52becd56b3d1eb5c8bb25f88a58351ad495ad2b43f0897c755e81ed509","id":10079,"name":"TransferFailed","nameLocation":"1700:14:27","nodeType":"EventDefinition","parameters":{"id":10078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10071,"indexed":true,"mutability":"mutable","name":"splitId","nameLocation":"1740:7:27","nodeType":"VariableDeclaration","scope":10079,"src":"1724:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10073,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1773:9:27","nodeType":"VariableDeclaration","scope":10079,"src":"1757:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10072,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10075,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1800:5:27","nodeType":"VariableDeclaration","scope":10079,"src":"1792:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10074,"name":"address","nodeType":"ElementaryTypeName","src":"1792:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10077,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1823:6:27","nodeType":"VariableDeclaration","scope":10079,"src":"1815:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:121:27"},"src":"1694:142:27"},{"anonymous":false,"eventSelector":"6f65559b767bf231652bb6bbc613c03da1500c2af09834b0c638fc41d4b21616","id":10087,"name":"FailedTransferClaimed","nameLocation":"1848:21:27","nodeType":"EventDefinition","parameters":{"id":10086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10081,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1895:9:27","nodeType":"VariableDeclaration","scope":10087,"src":"1879:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10080,"name":"address","nodeType":"ElementaryTypeName","src":"1879:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10083,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1922:5:27","nodeType":"VariableDeclaration","scope":10087,"src":"1914:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10082,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10085,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1945:6:27","nodeType":"VariableDeclaration","scope":10087,"src":"1937:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1869:88:27"},"src":"1842:116:27"},{"anonymous":false,"eventSelector":"c944e3c30d2006adf5afb37e5fe589410b4ae34dad46f311007daac3720ee960","id":10095,"name":"UnpaidRecipientAlert","nameLocation":"1970:20:27","nodeType":"EventDefinition","parameters":{"id":10094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10089,"indexed":true,"mutability":"mutable","name":"splitId","nameLocation":"2016:7:27","nodeType":"VariableDeclaration","scope":10095,"src":"2000:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10091,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2049:9:27","nodeType":"VariableDeclaration","scope":10095,"src":"2033:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10090,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10093,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"2076:8:27","nodeType":"VariableDeclaration","scope":10095,"src":"2068:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1990:100:27"},"src":"1964:127:27"},{"anonymous":false,"eventSelector":"e1e3cfb155281894efb6d6350898a96e1bbb0b3518440f9e92342c5fd6f4be09","id":10105,"name":"RecipientPaid","nameLocation":"2103:13:27","nodeType":"EventDefinition","parameters":{"id":10104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10097,"indexed":true,"mutability":"mutable","name":"splitId","nameLocation":"2142:7:27","nodeType":"VariableDeclaration","scope":10105,"src":"2126:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10099,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2175:9:27","nodeType":"VariableDeclaration","scope":10105,"src":"2159:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10098,"name":"address","nodeType":"ElementaryTypeName","src":"2159:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10101,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"2202:5:27","nodeType":"VariableDeclaration","scope":10105,"src":"2194:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10100,"name":"address","nodeType":"ElementaryTypeName","src":"2194:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10103,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2225:6:27","nodeType":"VariableDeclaration","scope":10105,"src":"2217:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2217:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2116:121:27"},"src":"2097:141:27"},{"errorSelector":"b4fa3fb3","id":10107,"name":"InvalidInput","nameLocation":"2271:12:27","nodeType":"ErrorDefinition","parameters":{"id":10106,"nodeType":"ParameterList","parameters":[],"src":"2283:2:27"},"src":"2265:21:27"},{"errorSelector":"7022d24a","id":10109,"name":"ClaimTransferFailed","nameLocation":"2297:19:27","nodeType":"ErrorDefinition","parameters":{"id":10108,"nodeType":"ParameterList","parameters":[],"src":"2316:2:27"},"src":"2291:28:27"},{"errorSelector":"289e2d1b","id":10111,"name":"SplitExpired","nameLocation":"2330:12:27","nodeType":"ErrorDefinition","parameters":{"id":10110,"nodeType":"ParameterList","parameters":[],"src":"2342:2:27"},"src":"2324:21:27"},{"errorSelector":"80df5539","id":10113,"name":"SplitNotFound","nameLocation":"2356:13:27","nodeType":"ErrorDefinition","parameters":{"id":10112,"nodeType":"ParameterList","parameters":[],"src":"2369:2:27"},"src":"2350:22:27"},{"errorSelector":"d70a0e30","id":10115,"name":"AlreadyPaid","nameLocation":"2383:11:27","nodeType":"ErrorDefinition","parameters":{"id":10114,"nodeType":"ParameterList","parameters":[],"src":"2394:2:27"},"src":"2377:20:27"},{"errorSelector":"2c5211c6","id":10117,"name":"InvalidAmount","nameLocation":"2408:13:27","nodeType":"ErrorDefinition","parameters":{"id":10116,"nodeType":"ParameterList","parameters":[],"src":"2421:2:27"},"src":"2402:22:27"},{"body":{"id":10352,"nodeType":"Block","src":"2947:1672:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10135,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"2989:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3000:6:27","memberName":"length","nodeType":"MemberAccess","src":"2989:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3010:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2989:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10139,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"3015:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3026:6:27","memberName":"length","nodeType":"MemberAccess","src":"3015:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10141,"name":"MAX_RECIPIENTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"3035:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3015:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2989:60:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10147,"nodeType":"IfStatement","src":"2985:87:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10144,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3058:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10146,"nodeType":"RevertStatement","src":"3051:21:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10148,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"3086:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:6:27","memberName":"length","nodeType":"MemberAccess","src":"3086:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":10150,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"3107:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3114:6:27","memberName":"length","nodeType":"MemberAccess","src":"3107:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10156,"nodeType":"IfStatement","src":"3082:61:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10153,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3129:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3129:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10155,"nodeType":"RevertStatement","src":"3122:21:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10157,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"3157:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10158,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3169:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3175:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3169:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3157:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10164,"nodeType":"IfStatement","src":"3153:54:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10161,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3193:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3193:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10163,"nodeType":"RevertStatement","src":"3186:21:27"}},{"assignments":[10166],"declarations":[{"constant":false,"id":10166,"mutability":"mutable","name":"totalAmount","nameLocation":"3234:11:27","nodeType":"VariableDeclaration","scope":10352,"src":"3226:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10174,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10167,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"3248:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10168,"name":"ETH_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"3257:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3248:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":10172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3281:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":10173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3248:34:27","trueExpression":{"expression":{"id":10170,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3269:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3273:5:27","memberName":"value","nodeType":"MemberAccess","src":"3269:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3226:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10175,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"3296:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3311:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3296:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10178,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"3316:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10179,"name":"ETH_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"3325:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3316:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3296:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10185,"nodeType":"IfStatement","src":"3292:65:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10182,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3343:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10184,"nodeType":"RevertStatement","src":"3336:21:27"}},{"assignments":[10187],"declarations":[{"constant":false,"id":10187,"mutability":"mutable","name":"totalShares","nameLocation":"3384:11:27","nodeType":"VariableDeclaration","scope":10352,"src":"3376:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10189,"initialValue":{"hexValue":"30","id":10188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3398:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3376:23:27"},{"body":{"id":10225,"nodeType":"Block","src":"3453:135:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10201,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"3471:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10203,"indexExpression":{"id":10202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3482:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3471:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10204,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:27","typeDescriptions":{}}},"id":10207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3471:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10209,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"3502:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10211,"indexExpression":{"id":10210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3509:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3502:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3471:45:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10218,"nodeType":"IfStatement","src":"3467:72:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10215,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3525:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10217,"nodeType":"RevertStatement","src":"3518:21:27"}},{"expression":{"id":10223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10219,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"3553:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":10220,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"3568:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10222,"indexExpression":{"id":10221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3575:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3568:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3553:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10224,"nodeType":"ExpressionStatement","src":"3553:24:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3429:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10195,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"3433:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3440:6:27","memberName":"length","nodeType":"MemberAccess","src":"3433:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3429:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10226,"initializationExpression":{"assignments":[10191],"declarations":[{"constant":false,"id":10191,"mutability":"mutable","name":"i","nameLocation":"3422:1:27","nodeType":"VariableDeclaration","scope":10226,"src":"3414:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10193,"initialValue":{"hexValue":"30","id":10192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3414:13:27"},"loopExpression":{"expression":{"id":10199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3448:3:27","subExpression":{"id":10198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3448:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10200,"nodeType":"ExpressionStatement","src":"3448:3:27"},"nodeType":"ForStatement","src":"3409:179:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10227,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"3601:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10228,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"3616:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3601:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10233,"nodeType":"IfStatement","src":"3597:54:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10230,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"3637:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3637:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10232,"nodeType":"RevertStatement","src":"3630:21:27"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"3711:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10235,"name":"ETH_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"3720:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3711:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10257,"nodeType":"IfStatement","src":"3707:165:27","trueBody":{"id":10256,"nodeType":"Block","src":"3731:141:27","statements":[{"expression":{"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10237,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"3745:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10239,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"3775:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10238,"name":"_getERC20Amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10790,"src":"3759:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3759:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3745:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10242,"nodeType":"ExpressionStatement","src":"3745:36:27"},{"expression":{"arguments":[{"expression":{"id":10247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3822:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3826:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3822:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3842:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SplitBilling_$10906","typeString":"contract SplitBilling"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SplitBilling_$10906","typeString":"contract SplitBilling"}],"id":10250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3834:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10249,"name":"address","nodeType":"ElementaryTypeName","src":"3834:7:27","typeDescriptions":{}}},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10253,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"3849:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10244,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"3802:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10243,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"3795:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":10245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3795:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:12:27","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"3795:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3795:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10255,"nodeType":"ExpressionStatement","src":"3795:66:27"}]}},{"expression":{"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10258,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10133,"src":"3914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3924:14:27","subExpression":{"id":10259,"name":"splitCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"3926:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10262,"nodeType":"ExpressionStatement","src":"3914:24:27"},{"assignments":[10265],"declarations":[{"constant":false,"id":10265,"mutability":"mutable","name":"split","nameLocation":"3969:5:27","nodeType":"VariableDeclaration","scope":10352,"src":"3948:26:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"},"typeName":{"id":10264,"nodeType":"UserDefinedTypeName","pathNode":{"id":10263,"name":"SplitRequest","nameLocations":["3948:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":10024,"src":"3948:12:27"},"referencedDeclaration":10024,"src":"3948:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"}},"visibility":"internal"}],"id":10269,"initialValue":{"baseExpression":{"id":10266,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"3977:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10268,"indexExpression":{"id":10267,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10133,"src":"3991:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3977:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3948:51:27"},{"expression":{"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10270,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4009:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4015:5:27","memberName":"payer","nodeType":"MemberAccess","referencedDeclaration":9997,"src":"4009:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4023:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4027:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4023:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4009:24:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10276,"nodeType":"ExpressionStatement","src":"4009:24:27"},{"expression":{"id":10281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10277,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4043:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4049:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"4043:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10280,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"4057:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4043:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10282,"nodeType":"ExpressionStatement","src":"4043:19:27"},{"expression":{"id":10287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10283,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4072:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4078:11:27","memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":10001,"src":"4072:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10286,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"4092:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4072:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10288,"nodeType":"ExpressionStatement","src":"4072:31:27"},{"expression":{"id":10293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10289,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4113:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4119:8:27","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":10003,"src":"4113:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10292,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"4130:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10294,"nodeType":"ExpressionStatement","src":"4113:25:27"},{"expression":{"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10295,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4148:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4154:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"4148:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10298,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4167:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"src":"4148:29:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10300,"nodeType":"ExpressionStatement","src":"4148:29:27"},{"expression":{"id":10305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10301,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4187:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4193:6:27","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":10015,"src":"4187:12:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10304,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"4202:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"src":"4187:21:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10306,"nodeType":"ExpressionStatement","src":"4187:21:27"},{"body":{"id":10335,"nodeType":"Block","src":"4332:104:27","statements":[{"expression":{"id":10333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10318,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10265,"src":"4346:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4352:15:27","memberName":"expectedAmounts","nodeType":"MemberAccess","referencedDeclaration":10023,"src":"4346:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10324,"indexExpression":{"baseExpression":{"id":10320,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4368:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10322,"indexExpression":{"id":10321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10308,"src":"4379:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4368:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4346:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10325,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"4386:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":10326,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"4400:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10328,"indexExpression":{"id":10327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10308,"src":"4407:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4400:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4386:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4385:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10331,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"4413:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4385:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4346:79:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10334,"nodeType":"ExpressionStatement","src":"4346:79:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10308,"src":"4304:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10312,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4308:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4319:6:27","memberName":"length","nodeType":"MemberAccess","src":"4308:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4304:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10336,"initializationExpression":{"assignments":[10308],"declarations":[{"constant":false,"id":10308,"mutability":"mutable","name":"i","nameLocation":"4297:1:27","nodeType":"VariableDeclaration","scope":10336,"src":"4289:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4289:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10310,"initialValue":{"hexValue":"30","id":10309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4301:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4289:13:27"},"loopExpression":{"expression":{"id":10316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4327:3:27","subExpression":{"id":10315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10308,"src":"4327:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10317,"nodeType":"ExpressionStatement","src":"4327:3:27"},"nodeType":"ForStatement","src":"4284:152:27"},{"eventCall":{"arguments":[{"id":10338,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10133,"src":"4464:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10339,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4473:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4477:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4473:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10341,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10126,"src":"4485:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10342,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"4492:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10343,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"4505:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10344,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4515:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":10345,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"4527:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":10337,"name":"SplitCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10055,"src":"4451:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,uint256,address[] memory,uint256[] memory)"}},"id":10346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10347,"nodeType":"EmitStatement","src":"4446:88:27"},{"expression":{"arguments":[{"id":10349,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10133,"src":"4604:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10348,"name":"_executeSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10719,"src":"4590:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4590:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10351,"nodeType":"ExpressionStatement","src":"4590:22:27"}]},"documentation":{"id":10118,"nodeType":"StructuredDocumentation","src":"2430:306:27","text":" @dev Create a split payment request with deadline\n @param recipients Array of recipient addresses (max 20)\n @param shares Array of shares in basis points (must sum to 10000)\n @param token Token address (address(0) for ETH)\n @param deadline Unix timestamp deadline"},"functionSelector":"9d71463a","id":10353,"implemented":true,"kind":"function","modifiers":[{"id":10131,"kind":"modifierInvocation","modifierName":{"id":10130,"name":"nonReentrant","nameLocations":["2908:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"2908:12:27"},"nodeType":"ModifierInvocation","src":"2908:12:27"}],"name":"createSplit","nameLocation":"2750:11:27","nodeType":"FunctionDefinition","parameters":{"id":10129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10121,"mutability":"mutable","name":"recipients","nameLocation":"2790:10:27","nodeType":"VariableDeclaration","scope":10353,"src":"2771:29:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10119,"name":"address","nodeType":"ElementaryTypeName","src":"2771:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10120,"nodeType":"ArrayTypeName","src":"2771:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10124,"mutability":"mutable","name":"shares","nameLocation":"2829:6:27","nodeType":"VariableDeclaration","scope":10353,"src":"2810:25:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10123,"nodeType":"ArrayTypeName","src":"2810:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10126,"mutability":"mutable","name":"token","nameLocation":"2853:5:27","nodeType":"VariableDeclaration","scope":10353,"src":"2845:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10125,"name":"address","nodeType":"ElementaryTypeName","src":"2845:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10128,"mutability":"mutable","name":"deadline","nameLocation":"2876:8:27","nodeType":"VariableDeclaration","scope":10353,"src":"2868:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2761:129:27"},"returnParameters":{"id":10134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10133,"mutability":"mutable","name":"splitId","nameLocation":"2938:7:27","nodeType":"VariableDeclaration","scope":10353,"src":"2930:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2930:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2929:17:27"},"scope":10906,"src":"2741:1878:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10395,"nodeType":"Block","src":"4845:278:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10361,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"4859:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4870:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4859:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10364,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"4875:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10365,"name":"splitCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"4885:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4875:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4859:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10371,"nodeType":"IfStatement","src":"4855:66:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10368,"name":"SplitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"4906:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10370,"nodeType":"RevertStatement","src":"4899:22:27"}},{"condition":{"expression":{"baseExpression":{"id":10372,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"4935:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10374,"indexExpression":{"id":10373,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"4949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4935:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"id":10375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4958:9:27","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":10005,"src":"4935:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10379,"nodeType":"IfStatement","src":"4931:58:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10376,"name":"AlreadyPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"4976:11:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4976:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10378,"nodeType":"RevertStatement","src":"4969:20:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10380,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5003:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5009:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5003:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":10382,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"5021:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10384,"indexExpression":{"id":10383,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"5035:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5021:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"id":10385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5044:8:27","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":10003,"src":"5021:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10390,"nodeType":"IfStatement","src":"4999:76:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10387,"name":"SplitExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"5061:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10389,"nodeType":"RevertStatement","src":"5054:21:27"}},{"expression":{"arguments":[{"id":10392,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"5108:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10391,"name":"_executeSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10719,"src":"5094:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10394,"nodeType":"ExpressionStatement","src":"5094:22:27"}]},"documentation":{"id":10354,"nodeType":"StructuredDocumentation","src":"4625:154:27","text":" @dev Execute split with failure isolation - can be called by anyone after creation\n @param splitId The ID of the split to execute"},"functionSelector":"4bbffcb1","id":10396,"implemented":true,"kind":"function","modifiers":[{"id":10359,"kind":"modifierInvocation","modifierName":{"id":10358,"name":"nonReentrant","nameLocations":["4832:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"4832:12:27"},"nodeType":"ModifierInvocation","src":"4832:12:27"}],"name":"executeSplit","nameLocation":"4793:12:27","nodeType":"FunctionDefinition","parameters":{"id":10357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10356,"mutability":"mutable","name":"splitId","nameLocation":"4814:7:27","nodeType":"VariableDeclaration","scope":10396,"src":"4806:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4806:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4805:17:27"},"returnParameters":{"id":10360,"nodeType":"ParameterList","parameters":[],"src":"4845:0:27"},"scope":10906,"src":"4784:339:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10464,"nodeType":"Block","src":"5324:497:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10402,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5338:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5349:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5338:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10405,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5354:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10406,"name":"splitCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"5364:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5354:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5338:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10412,"nodeType":"IfStatement","src":"5334:66:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10409,"name":"SplitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"5385:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5385:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10411,"nodeType":"RevertStatement","src":"5378:22:27"}},{"assignments":[10415],"declarations":[{"constant":false,"id":10415,"mutability":"mutable","name":"split","nameLocation":"5440:5:27","nodeType":"VariableDeclaration","scope":10464,"src":"5419:26:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"},"typeName":{"id":10414,"nodeType":"UserDefinedTypeName","pathNode":{"id":10413,"name":"SplitRequest","nameLocations":["5419:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":10024,"src":"5419:12:27"},"referencedDeclaration":10024,"src":"5419:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"}},"visibility":"internal"}],"id":10419,"initialValue":{"baseExpression":{"id":10416,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"5448:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10418,"indexExpression":{"id":10417,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5462:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5448:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5419:51:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10420,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5484:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5490:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5484:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10422,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"5503:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5509:8:27","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":10003,"src":"5503:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5484:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10428,"nodeType":"IfStatement","src":"5480:60:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10425,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"5526:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5526:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10427,"nodeType":"RevertStatement","src":"5519:21:27"}},{"body":{"id":10462,"nodeType":"Block","src":"5613:202:27","statements":[{"assignments":[10442],"declarations":[{"constant":false,"id":10442,"mutability":"mutable","name":"recipient","nameLocation":"5635:9:27","nodeType":"VariableDeclaration","scope":10462,"src":"5627:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10441,"name":"address","nodeType":"ElementaryTypeName","src":"5627:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10447,"initialValue":{"baseExpression":{"expression":{"id":10443,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"5647:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5653:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"5647:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10446,"indexExpression":{"id":10445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10430,"src":"5664:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5647:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5627:39:27"},{"condition":{"id":10452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5684:25:27","subExpression":{"baseExpression":{"expression":{"id":10448,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"5685:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5691:7:27","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":10019,"src":"5685:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10451,"indexExpression":{"id":10450,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10442,"src":"5699:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5685:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10461,"nodeType":"IfStatement","src":"5680:125:27","trueBody":{"id":10460,"nodeType":"Block","src":"5711:94:27","statements":[{"eventCall":{"arguments":[{"id":10454,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5755:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10455,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10442,"src":"5764:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10456,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"5775:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5781:8:27","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":10003,"src":"5775:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10453,"name":"UnpaidRecipientAlert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10095,"src":"5734:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":10458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10459,"nodeType":"EmitStatement","src":"5729:61:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10430,"src":"5579:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":10434,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"5583:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5589:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"5583:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5600:6:27","memberName":"length","nodeType":"MemberAccess","src":"5583:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5579:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10463,"initializationExpression":{"assignments":[10430],"declarations":[{"constant":false,"id":10430,"mutability":"mutable","name":"i","nameLocation":"5572:1:27","nodeType":"VariableDeclaration","scope":10463,"src":"5564:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5564:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10432,"initialValue":{"hexValue":"30","id":10431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5576:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5564:13:27"},"loopExpression":{"expression":{"id":10439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5608:3:27","subExpression":{"id":10438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10430,"src":"5608:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10440,"nodeType":"ExpressionStatement","src":"5608:3:27"},"nodeType":"ForStatement","src":"5559:256:27"}]},"documentation":{"id":10397,"nodeType":"StructuredDocumentation","src":"5129:133:27","text":" @dev Check for unpaid recipients after deadline and emit alerts\n @param splitId The ID of the split to check"},"functionSelector":"a24e6e04","id":10465,"implemented":true,"kind":"function","modifiers":[],"name":"checkUnpaidRecipients","nameLocation":"5276:21:27","nodeType":"FunctionDefinition","parameters":{"id":10400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10399,"mutability":"mutable","name":"splitId","nameLocation":"5306:7:27","nodeType":"VariableDeclaration","scope":10465,"src":"5298:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10398,"name":"uint256","nodeType":"ElementaryTypeName","src":"5298:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5297:17:27"},"returnParameters":{"id":10401,"nodeType":"ParameterList","parameters":[],"src":"5324:0:27"},"scope":10906,"src":"5267:554:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10563,"nodeType":"Block","src":"6000:725:27","statements":[{"assignments":[10474],"declarations":[{"constant":false,"id":10474,"mutability":"mutable","name":"amount","nameLocation":"6018:6:27","nodeType":"VariableDeclaration","scope":10563,"src":"6010:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10473,"name":"uint256","nodeType":"ElementaryTypeName","src":"6010:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10481,"initialValue":{"baseExpression":{"baseExpression":{"id":10475,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"6027:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10478,"indexExpression":{"expression":{"id":10476,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6043:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6043:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6027:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10480,"indexExpression":{"id":10479,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6055:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6027:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6010:51:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6075:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6085:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6075:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10488,"nodeType":"IfStatement","src":"6071:38:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10485,"name":"InvalidInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10107,"src":"6095:12:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10487,"nodeType":"RevertStatement","src":"6088:21:27"}},{"expression":{"id":10496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":10489,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"6120:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10493,"indexExpression":{"expression":{"id":10490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6136:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6140:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6136:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6120:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10494,"indexExpression":{"id":10492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6148:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6120:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6120:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10497,"nodeType":"ExpressionStatement","src":"6120:38:27"},{"assignments":[10499],"declarations":[{"constant":false,"id":10499,"mutability":"mutable","name":"success","nameLocation":"6174:7:27","nodeType":"VariableDeclaration","scope":10563,"src":"6169:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10498,"name":"bool","nodeType":"ElementaryTypeName","src":"6169:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10500,"nodeType":"VariableDeclarationStatement","src":"6169:12:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6195:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10502,"name":"ETH_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"6204:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10538,"nodeType":"Block","src":"6310:173:27","statements":[{"clauses":[{"block":{"id":10529,"nodeType":"Block","src":"6371:47:27","statements":[{"expression":{"id":10527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10525,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10499,"src":"6389:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6399:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6389:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10528,"nodeType":"ExpressionStatement","src":"6389:14:27"}]},"errorName":"","id":10530,"nodeType":"TryCatchClause","src":"6371:47:27"},{"block":{"id":10535,"nodeType":"Block","src":"6425:48:27","statements":[{"expression":{"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10499,"src":"6443:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6453:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6443:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10534,"nodeType":"ExpressionStatement","src":"6443:15:27"}]},"errorName":"","id":10536,"nodeType":"TryCatchClause","src":"6419:54:27"}],"externalCall":{"arguments":[{"expression":{"id":10521,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6351:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6355:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6351:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6363:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6335:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10517,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6328:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":10519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":10520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6342:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"6328:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:42:27","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10537,"nodeType":"TryStatement","src":"6324:149:27"}]},"id":10539,"nodeType":"IfStatement","src":"6191:292:27","trueBody":{"id":10516,"nodeType":"Block","src":"6215:89:27","statements":[{"expression":{"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":10504,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10499,"src":"6230:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":10505,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6229:11:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":10512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6290:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":10506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6243:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6247:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6243:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6254:4:27","memberName":"call","nodeType":"MemberAccess","src":"6243:15:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":10509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6266:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10510,"name":"GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"6279:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6243:46:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"6229:64:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10515,"nodeType":"ExpressionStatement","src":"6229:64:27"}]}},{"condition":{"id":10540,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10499,"src":"6497:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10561,"nodeType":"Block","src":"6590:129:27","statements":[{"expression":{"id":10556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":10549,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"6604:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10553,"indexExpression":{"expression":{"id":10550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6620:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6624:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6620:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6604:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10554,"indexExpression":{"id":10552,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6632:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6604:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6641:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6604:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10557,"nodeType":"ExpressionStatement","src":"6604:43:27"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10558,"name":"ClaimTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10109,"src":"6687:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10560,"nodeType":"RevertStatement","src":"6680:28:27"}]},"id":10562,"nodeType":"IfStatement","src":"6493:226:27","trueBody":{"id":10548,"nodeType":"Block","src":"6506:78:27","statements":[{"eventCall":{"arguments":[{"expression":{"id":10542,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6547:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6551:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6547:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6559:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6566:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10541,"name":"FailedTransferClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10087,"src":"6525:21:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10547,"nodeType":"EmitStatement","src":"6520:53:27"}]}}]},"documentation":{"id":10466,"nodeType":"StructuredDocumentation","src":"5827:102:27","text":" @dev Claim failed transfers\n @param token Token to claim (address(0) for ETH)"},"functionSelector":"09ae54be","id":10564,"implemented":true,"kind":"function","modifiers":[{"id":10471,"kind":"modifierInvocation","modifierName":{"id":10470,"name":"nonReentrant","nameLocations":["5987:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"5987:12:27"},"nodeType":"ModifierInvocation","src":"5987:12:27"}],"name":"claimFailedTransfer","nameLocation":"5943:19:27","nodeType":"FunctionDefinition","parameters":{"id":10469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10468,"mutability":"mutable","name":"token","nameLocation":"5971:5:27","nodeType":"VariableDeclaration","scope":10564,"src":"5963:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10467,"name":"address","nodeType":"ElementaryTypeName","src":"5963:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5962:15:27"},"returnParameters":{"id":10472,"nodeType":"ParameterList","parameters":[],"src":"6000:0:27"},"scope":10906,"src":"5934:791:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10718,"nodeType":"Block","src":"6856:1203:27","statements":[{"assignments":[10572],"declarations":[{"constant":false,"id":10572,"mutability":"mutable","name":"split","nameLocation":"6887:5:27","nodeType":"VariableDeclaration","scope":10718,"src":"6866:26:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"},"typeName":{"id":10571,"nodeType":"UserDefinedTypeName","pathNode":{"id":10570,"name":"SplitRequest","nameLocations":["6866:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":10024,"src":"6866:12:27"},"referencedDeclaration":10024,"src":"6866:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"}},"visibility":"internal"}],"id":10576,"initialValue":{"baseExpression":{"id":10573,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"6895:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10575,"indexExpression":{"id":10574,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10567,"src":"6909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6895:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6866:51:27"},{"assignments":[10578],"declarations":[{"constant":false,"id":10578,"mutability":"mutable","name":"successCount","nameLocation":"6944:12:27","nodeType":"VariableDeclaration","scope":10718,"src":"6936:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6936:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10580,"initialValue":{"hexValue":"30","id":10579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6959:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6936:24:27"},{"assignments":[10582],"declarations":[{"constant":false,"id":10582,"mutability":"mutable","name":"failCount","nameLocation":"6978:9:27","nodeType":"VariableDeclaration","scope":10718,"src":"6970:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10581,"name":"uint256","nodeType":"ElementaryTypeName","src":"6970:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10584,"initialValue":{"hexValue":"30","id":10583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6990:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6970:21:27"},{"assignments":[10586],"declarations":[{"constant":false,"id":10586,"mutability":"mutable","name":"remaining","nameLocation":"7009:9:27","nodeType":"VariableDeclaration","scope":10718,"src":"7001:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7001:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10589,"initialValue":{"expression":{"id":10587,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7021:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7027:11:27","memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":10001,"src":"7021:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7001:37:27"},{"body":{"id":10686,"nodeType":"Block","src":"7103:729:27","statements":[{"assignments":[10603],"declarations":[{"constant":false,"id":10603,"mutability":"mutable","name":"recipient","nameLocation":"7125:9:27","nodeType":"VariableDeclaration","scope":10686,"src":"7117:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10602,"name":"address","nodeType":"ElementaryTypeName","src":"7117:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10608,"initialValue":{"baseExpression":{"expression":{"id":10604,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7137:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7143:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"7137:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10607,"indexExpression":{"id":10606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10591,"src":"7154:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7137:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7117:39:27"},{"assignments":[10610],"declarations":[{"constant":false,"id":10610,"mutability":"mutable","name":"amount","nameLocation":"7178:6:27","nodeType":"VariableDeclaration","scope":10686,"src":"7170:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10625,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10591,"src":"7188:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10612,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7193:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7199:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"7193:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7210:6:27","memberName":"length","nodeType":"MemberAccess","src":"7193:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7219:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7193:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7188:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7187:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"expression":{"id":10620,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7270:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7276:15:27","memberName":"expectedAmounts","nodeType":"MemberAccess","referencedDeclaration":10023,"src":"7270:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10623,"indexExpression":{"id":10622,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7292:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7270:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7187:115:27","trueExpression":{"id":10619,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10586,"src":"7241:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7170:132:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10591,"src":"7333:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10627,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7337:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7343:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"7337:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7354:6:27","memberName":"length","nodeType":"MemberAccess","src":"7337:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7363:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7337:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7333:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10637,"nodeType":"IfStatement","src":"7329:56:27","trueBody":{"expression":{"id":10635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10633,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10586,"src":"7366:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10634,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10610,"src":"7379:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7366:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10636,"nodeType":"ExpressionStatement","src":"7366:19:27"}},{"condition":{"arguments":[{"id":10639,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7421:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10640,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7432:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7438:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7432:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10610,"src":"7445:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10638,"name":"_attemptTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10769,"src":"7404:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":10643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10684,"nodeType":"Block","src":"7633:189:27","statements":[{"expression":{"id":10665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7651:11:27","subExpression":{"id":10664,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"7651:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10666,"nodeType":"ExpressionStatement","src":"7651:11:27"},{"expression":{"id":10674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":10667,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"7680:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10671,"indexExpression":{"id":10668,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7696:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7680:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10672,"indexExpression":{"expression":{"id":10669,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7707:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7713:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7707:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7680:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10610,"src":"7723:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7680:49:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10675,"nodeType":"ExpressionStatement","src":"7680:49:27"},{"eventCall":{"arguments":[{"id":10677,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10567,"src":"7767:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10678,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7776:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10679,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7787:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7793:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7787:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10610,"src":"7800:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10676,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"7752:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":10682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7752:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10683,"nodeType":"EmitStatement","src":"7747:60:27"}]},"id":10685,"nodeType":"IfStatement","src":"7400:422:27","trueBody":{"id":10663,"nodeType":"Block","src":"7454:173:27","statements":[{"expression":{"id":10645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7472:14:27","subExpression":{"id":10644,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"7472:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10646,"nodeType":"ExpressionStatement","src":"7472:14:27"},{"expression":{"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10647,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7504:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7510:7:27","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":10019,"src":"7504:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10651,"indexExpression":{"id":10649,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7518:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7504:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7531:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7504:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10654,"nodeType":"ExpressionStatement","src":"7504:31:27"},{"eventCall":{"arguments":[{"id":10656,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10567,"src":"7572:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10657,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7581:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10658,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7592:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7598:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7592:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10610,"src":"7605:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10655,"name":"RecipientPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10105,"src":"7558:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":10661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7558:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10662,"nodeType":"EmitStatement","src":"7553:59:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10591,"src":"7069:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":10595,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7073:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7079:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"7073:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7090:6:27","memberName":"length","nodeType":"MemberAccess","src":"7073:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10687,"initializationExpression":{"assignments":[10591],"declarations":[{"constant":false,"id":10591,"mutability":"mutable","name":"i","nameLocation":"7062:1:27","nodeType":"VariableDeclaration","scope":10687,"src":"7054:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10593,"initialValue":{"hexValue":"30","id":10592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7066:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7054:13:27"},"loopExpression":{"expression":{"id":10600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7098:3:27","subExpression":{"id":10599,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10591,"src":"7098:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10601,"nodeType":"ExpressionStatement","src":"7098:3:27"},"nodeType":"ForStatement","src":"7049:783:27"},{"expression":{"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10688,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7842:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7848:12:27","memberName":"successCount","nodeType":"MemberAccess","referencedDeclaration":10007,"src":"7842:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10691,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"7863:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10693,"nodeType":"ExpressionStatement","src":"7842:33:27"},{"expression":{"id":10698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10694,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7885:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7891:9:27","memberName":"failCount","nodeType":"MemberAccess","referencedDeclaration":10009,"src":"7885:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10697,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"7903:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7885:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10699,"nodeType":"ExpressionStatement","src":"7885:27:27"},{"expression":{"id":10704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10700,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7922:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7928:9:27","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":10005,"src":"7922:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7940:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7922:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10705,"nodeType":"ExpressionStatement","src":"7922:22:27"},{"eventCall":{"arguments":[{"id":10707,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10567,"src":"7974:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10708,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7983:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7989:5:27","memberName":"payer","nodeType":"MemberAccess","referencedDeclaration":9997,"src":"7983:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10710,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"7996:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8002:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"7996:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10712,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10572,"src":"8009:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8015:11:27","memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":10001,"src":"8009:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10714,"name":"successCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"8028:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10715,"name":"failCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"8042:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10706,"name":"SplitExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10069,"src":"7960:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256,uint256,uint256)"}},"id":10716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7960:92:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10717,"nodeType":"EmitStatement","src":"7955:97:27"}]},"documentation":{"id":10565,"nodeType":"StructuredDocumentation","src":"6731:71:27","text":" @dev Execute split with individual failure isolation"},"id":10719,"implemented":true,"kind":"function","modifiers":[],"name":"_executeSplit","nameLocation":"6816:13:27","nodeType":"FunctionDefinition","parameters":{"id":10568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10567,"mutability":"mutable","name":"splitId","nameLocation":"6838:7:27","nodeType":"VariableDeclaration","scope":10719,"src":"6830:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6829:17:27"},"returnParameters":{"id":10569,"nodeType":"ParameterList","parameters":[],"src":"6856:0:27"},"scope":10906,"src":"6807:1252:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10768,"nodeType":"Block","src":"8274:306:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10724,"src":"8288:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10732,"name":"ETH_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9995,"src":"8297:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8288:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10766,"nodeType":"Block","src":"8402:172:27","statements":[{"clauses":[{"block":{"id":10757,"nodeType":"Block","src":"8462:47:27","statements":[{"expression":{"id":10755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10753,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10729,"src":"8480:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8490:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8480:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10756,"nodeType":"ExpressionStatement","src":"8480:14:27"}]},"errorName":"","id":10758,"nodeType":"TryCatchClause","src":"8462:47:27"},{"block":{"id":10763,"nodeType":"Block","src":"8516:48:27","statements":[{"expression":{"id":10761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10759,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10729,"src":"8534:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8544:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8534:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10762,"nodeType":"ExpressionStatement","src":"8534:15:27"}]},"errorName":"","id":10764,"nodeType":"TryCatchClause","src":"8510:54:27"}],"externalCall":{"arguments":[{"id":10750,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"8443:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10726,"src":"8454:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10747,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10724,"src":"8427:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10746,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"8420:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":10748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":10749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8434:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"8420:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:41:27","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10765,"nodeType":"TryStatement","src":"8416:148:27"}]},"id":10767,"nodeType":"IfStatement","src":"8284:290:27","trueBody":{"id":10745,"nodeType":"Block","src":"8308:88:27","statements":[{"expression":{"id":10743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":10734,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10729,"src":"8323:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":10735,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8322:11:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":10741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8382:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10736,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"8336:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8346:4:27","memberName":"call","nodeType":"MemberAccess","src":"8336:14:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":10738,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10726,"src":"8358:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10739,"name":"GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"8371:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8336:45:27","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8336:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"8322:63:27","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10744,"nodeType":"ExpressionStatement","src":"8322:63:27"}]}}]},"documentation":{"id":10720,"nodeType":"StructuredDocumentation","src":"8065:66:27","text":" @dev Attempt transfer with gas limit protection"},"id":10769,"implemented":true,"kind":"function","modifiers":[],"name":"_attemptTransfer","nameLocation":"8145:16:27","nodeType":"FunctionDefinition","parameters":{"id":10727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10722,"mutability":"mutable","name":"recipient","nameLocation":"8179:9:27","nodeType":"VariableDeclaration","scope":10769,"src":"8171:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10721,"name":"address","nodeType":"ElementaryTypeName","src":"8171:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10724,"mutability":"mutable","name":"token","nameLocation":"8206:5:27","nodeType":"VariableDeclaration","scope":10769,"src":"8198:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10723,"name":"address","nodeType":"ElementaryTypeName","src":"8198:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10726,"mutability":"mutable","name":"amount","nameLocation":"8229:6:27","nodeType":"VariableDeclaration","scope":10769,"src":"8221:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10725,"name":"uint256","nodeType":"ElementaryTypeName","src":"8221:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:80:27"},"returnParameters":{"id":10730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10729,"mutability":"mutable","name":"success","nameLocation":"8265:7:27","nodeType":"VariableDeclaration","scope":10769,"src":"8260:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10728,"name":"bool","nodeType":"ElementaryTypeName","src":"8260:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8259:14:27"},"scope":10906,"src":"8136:444:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10789,"nodeType":"Block","src":"8727:74:27","statements":[{"expression":{"arguments":[{"expression":{"id":10781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8768:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8772:6:27","memberName":"sender","nodeType":"MemberAccess","src":"8768:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8788:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SplitBilling_$10906","typeString":"contract SplitBilling"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SplitBilling_$10906","typeString":"contract SplitBilling"}],"id":10784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8780:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10783,"name":"address","nodeType":"ElementaryTypeName","src":"8780:7:27","typeDescriptions":{}}},"id":10786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8780:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":10778,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10772,"src":"8751:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10777,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"8744:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":10779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8744:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":10780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8758:9:27","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"8744:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":10787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8744:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10776,"id":10788,"nodeType":"Return","src":"8737:57:27"}]},"documentation":{"id":10770,"nodeType":"StructuredDocumentation","src":"8586:64:27","text":" @dev Get ERC20 transfer amount from allowance"},"id":10790,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Amount","nameLocation":"8664:15:27","nodeType":"FunctionDefinition","parameters":{"id":10773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10772,"mutability":"mutable","name":"token","nameLocation":"8688:5:27","nodeType":"VariableDeclaration","scope":10790,"src":"8680:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10771,"name":"address","nodeType":"ElementaryTypeName","src":"8680:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8679:15:27"},"returnParameters":{"id":10776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10790,"src":"8718:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10774,"name":"uint256","nodeType":"ElementaryTypeName","src":"8718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8717:9:27"},"scope":10906,"src":"8655:146:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10806,"nodeType":"Block","src":"8953:57:27","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":10800,"name":"failedTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"8970:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":10802,"indexExpression":{"id":10801,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10793,"src":"8986:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8970:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10804,"indexExpression":{"id":10803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10795,"src":"8997:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8970:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10799,"id":10805,"nodeType":"Return","src":"8963:40:27"}]},"documentation":{"id":10791,"nodeType":"StructuredDocumentation","src":"8807:50:27","text":" @dev Get failed transfer amount"},"functionSelector":"e65c31c4","id":10807,"implemented":true,"kind":"function","modifiers":[],"name":"getFailedAmount","nameLocation":"8871:15:27","nodeType":"FunctionDefinition","parameters":{"id":10796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10793,"mutability":"mutable","name":"recipient","nameLocation":"8895:9:27","nodeType":"VariableDeclaration","scope":10807,"src":"8887:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10792,"name":"address","nodeType":"ElementaryTypeName","src":"8887:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10795,"mutability":"mutable","name":"token","nameLocation":"8914:5:27","nodeType":"VariableDeclaration","scope":10807,"src":"8906:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10794,"name":"address","nodeType":"ElementaryTypeName","src":"8906:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8886:34:27"},"returnParameters":{"id":10799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10807,"src":"8944:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10797,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8943:9:27"},"scope":10906,"src":"8862:148:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10871,"nodeType":"Block","src":"9393:435:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10833,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10810,"src":"9407:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9407:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10836,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10810,"src":"9423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10837,"name":"splitCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"9433:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9423:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9407:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10843,"nodeType":"IfStatement","src":"9403:66:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10840,"name":"SplitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"9454:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9454:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10842,"nodeType":"RevertStatement","src":"9447:22:27"}},{"assignments":[10846],"declarations":[{"constant":false,"id":10846,"mutability":"mutable","name":"split","nameLocation":"9509:5:27","nodeType":"VariableDeclaration","scope":10871,"src":"9488:26:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"},"typeName":{"id":10845,"nodeType":"UserDefinedTypeName","pathNode":{"id":10844,"name":"SplitRequest","nameLocations":["9488:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":10024,"src":"9488:12:27"},"referencedDeclaration":10024,"src":"9488:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest"}},"visibility":"internal"}],"id":10850,"initialValue":{"baseExpression":{"id":10847,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"9517:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10849,"indexExpression":{"id":10848,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10810,"src":"9531:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9517:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9488:51:27"},{"expression":{"components":[{"expression":{"id":10851,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9570:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9576:5:27","memberName":"payer","nodeType":"MemberAccess","referencedDeclaration":9997,"src":"9570:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10853,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9595:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9601:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9999,"src":"9595:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10855,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9620:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9626:11:27","memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":10001,"src":"9620:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10857,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9651:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9657:8:27","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":10003,"src":"9651:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10859,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9679:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9685:9:27","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":10005,"src":"9679:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":10861,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9708:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9714:12:27","memberName":"successCount","nodeType":"MemberAccess","referencedDeclaration":10007,"src":"9708:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10863,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9740:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9746:9:27","memberName":"failCount","nodeType":"MemberAccess","referencedDeclaration":10009,"src":"9740:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10865,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9769:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9775:10:27","memberName":"recipients","nodeType":"MemberAccess","referencedDeclaration":10012,"src":"9769:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},{"expression":{"id":10867,"name":"split","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10846,"src":"9799:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage_ptr","typeString":"struct SplitBilling.SplitRequest storage pointer"}},"id":10868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9805:6:27","memberName":"shares","nodeType":"MemberAccess","referencedDeclaration":10015,"src":"9799:12:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"id":10869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9556:265:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_storage_$_t_array$_t_uint256_$dyn_storage_$","typeString":"tuple(address,address,uint256,uint256,bool,uint256,uint256,address[] storage ref,uint256[] storage ref)"}},"functionReturnParameters":10832,"id":10870,"nodeType":"Return","src":"9549:272:27"}]},"documentation":{"id":10808,"nodeType":"StructuredDocumentation","src":"9016:49:27","text":" @dev Get split request details"},"functionSelector":"f6b30c60","id":10872,"implemented":true,"kind":"function","modifiers":[],"name":"getSplitDetails","nameLocation":"9079:15:27","nodeType":"FunctionDefinition","parameters":{"id":10811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10810,"mutability":"mutable","name":"splitId","nameLocation":"9103:7:27","nodeType":"VariableDeclaration","scope":10872,"src":"9095:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9095:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9094:17:27"},"returnParameters":{"id":10832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10813,"mutability":"mutable","name":"payer","nameLocation":"9152:5:27","nodeType":"VariableDeclaration","scope":10872,"src":"9144:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10812,"name":"address","nodeType":"ElementaryTypeName","src":"9144:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10815,"mutability":"mutable","name":"token","nameLocation":"9175:5:27","nodeType":"VariableDeclaration","scope":10872,"src":"9167:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10814,"name":"address","nodeType":"ElementaryTypeName","src":"9167:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10817,"mutability":"mutable","name":"totalAmount","nameLocation":"9198:11:27","nodeType":"VariableDeclaration","scope":10872,"src":"9190:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9190:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10819,"mutability":"mutable","name":"deadline","nameLocation":"9227:8:27","nodeType":"VariableDeclaration","scope":10872,"src":"9219:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10818,"name":"uint256","nodeType":"ElementaryTypeName","src":"9219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10821,"mutability":"mutable","name":"completed","nameLocation":"9250:9:27","nodeType":"VariableDeclaration","scope":10872,"src":"9245:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10820,"name":"bool","nodeType":"ElementaryTypeName","src":"9245:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10823,"mutability":"mutable","name":"successCount","nameLocation":"9277:12:27","nodeType":"VariableDeclaration","scope":10872,"src":"9269:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10822,"name":"uint256","nodeType":"ElementaryTypeName","src":"9269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10825,"mutability":"mutable","name":"failCount","nameLocation":"9307:9:27","nodeType":"VariableDeclaration","scope":10872,"src":"9299:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10824,"name":"uint256","nodeType":"ElementaryTypeName","src":"9299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10828,"mutability":"mutable","name":"recipients","nameLocation":"9343:10:27","nodeType":"VariableDeclaration","scope":10872,"src":"9326:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10826,"name":"address","nodeType":"ElementaryTypeName","src":"9326:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10827,"nodeType":"ArrayTypeName","src":"9326:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10831,"mutability":"mutable","name":"shares","nameLocation":"9380:6:27","nodeType":"VariableDeclaration","scope":10872,"src":"9363:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10829,"name":"uint256","nodeType":"ElementaryTypeName","src":"9363:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10830,"nodeType":"ArrayTypeName","src":"9363:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9134:258:27"},"scope":10906,"src":"9070:758:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10900,"nodeType":"Block","src":"9997:141:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10882,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10875,"src":"10011:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10022:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10011:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10885,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10875,"src":"10027:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10886,"name":"splitCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"10037:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10027:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10011:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10892,"nodeType":"IfStatement","src":"10007:66:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10889,"name":"SplitNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"10058:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10891,"nodeType":"RevertStatement","src":"10051:22:27"}},{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":10893,"name":"splitRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"10090:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SplitRequest_$10024_storage_$","typeString":"mapping(uint256 => struct SplitBilling.SplitRequest storage ref)"}},"id":10895,"indexExpression":{"id":10894,"name":"splitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10875,"src":"10104:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10090:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_SplitRequest_$10024_storage","typeString":"struct SplitBilling.SplitRequest storage ref"}},"id":10896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10113:7:27","memberName":"hasPaid","nodeType":"MemberAccess","referencedDeclaration":10019,"src":"10090:30:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10898,"indexExpression":{"id":10897,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10877,"src":"10121:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10090:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10881,"id":10899,"nodeType":"Return","src":"10083:48:27"}]},"documentation":{"id":10873,"nodeType":"StructuredDocumentation","src":"9834:67:27","text":" @dev Check if recipient has been paid in a split"},"functionSelector":"7bee3c0f","id":10901,"implemented":true,"kind":"function","modifiers":[],"name":"hasRecipientPaid","nameLocation":"9915:16:27","nodeType":"FunctionDefinition","parameters":{"id":10878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10875,"mutability":"mutable","name":"splitId","nameLocation":"9940:7:27","nodeType":"VariableDeclaration","scope":10901,"src":"9932:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10874,"name":"uint256","nodeType":"ElementaryTypeName","src":"9932:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10877,"mutability":"mutable","name":"recipient","nameLocation":"9957:9:27","nodeType":"VariableDeclaration","scope":10901,"src":"9949:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10876,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9931:36:27"},"returnParameters":{"id":10881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10901,"src":"9991:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10879,"name":"bool","nodeType":"ElementaryTypeName","src":"9991:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9990:6:27"},"scope":10906,"src":"9906:232:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10904,"nodeType":"Block","src":"10189:2:27","statements":[]},"id":10905,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10902,"nodeType":"ParameterList","parameters":[],"src":"10169:2:27"},"returnParameters":{"id":10903,"nodeType":"ParameterList","parameters":[],"src":"10189:0:27"},"scope":10906,"src":"10162:29:27","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":10907,"src":"381:9812:27","usedErrors":[1686,10107,10109,10111,10113,10115,10117],"usedEvents":[10055,10069,10079,10087,10095,10105]}],"src":"32:10162:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203baa8a3c971ed1c6021cc4a696a0b138b6cf301831bab8cd9fe3c8aea6b6e60464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xAA DUP11 EXTCODECOPY SWAP8 0x1E 0xD1 0xC6 MUL SHR 0xC4 0xA6 SWAP7 LOG0 0xB1 CODESIZE 0xB6 0xCF ADDRESS XOR BALANCE 0xBA 0xB8 0xCD SWAP16 0xE3 0xC8 0xAE 0xA6 0xB6 0xE6 DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203baa8a3c971ed1c6021cc4a696a0b138b6cf301831bab8cd9fe3c8aea6b6e60464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xAA DUP11 EXTCODECOPY SWAP8 0x1E 0xD1 0xC6 MUL SHR 0xC4 0xA6 SWAP7 LOG0 0xB1 CODESIZE 0xB6 0xCF ADDRESS XOR BALANCE 0xBA 0xB8 0xCD SWAP16 0xE3 0xC8 0xAE 0xA6 0xB6 0xE6 DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203e8e0ad7246559fff5b34c72d478db7484c3d0d90a7298ccbda668f54c10322a64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY DUP15 EXP 0xD7 0x24 PUSH6 0x59FFF5B34C72 0xD4 PUSH25 0xDB7484C3D0D90A7298CCBDA668F54C10322A64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203e8e0ad7246559fff5b34c72d478db7484c3d0d90a7298ccbda668f54c10322a64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY DUP15 EXP 0xD7 0x24 PUSH6 0x59FFF5B34C72 0xD4 PUSH25 0xDB7484C3D0D90A7298CCBDA668F54C10322A64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/BulkPayroll.sol":{"BulkPayroll":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientAllowance","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidInput","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RefundFailed","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"TooManyRecipients","type":"error"},{"inputs":[],"name":"TransferError","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalRecipients","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"successCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"failCount","type":"uint256"}],"name":"BulkTransferExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FailedTransferClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TransferFailed","type":"event"},{"inputs":[],"name":"GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_RECIPIENTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"bulkTransfer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"claimFailedTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"failedTransfers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getFailedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461007f57600160005533156100695760018054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3610c6390816100858239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908163091d27881461096c5750806309ae54be146108835780631b60f2661461066c578381636ff1c9bc1461075e57508063715018a6146106fe5780638da5cb5b146106d5578063a6980ce2146106b9578063e65c31c41461066c578063e886dade1461012c5763f2fde38b036100115734610128576020366003190112610128576100b3610988565b906100bc6109ea565b6001600160a01b03918216928315610112575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090606036600319011261012857610142610988565b67ffffffffffffffff906024358281116106685761016390369086016109b9565b916044358481116106645761017b90369088016109b9565b929091610186610a73565b84156106545760c8851161064457838503610631578895895b8681106105cb57506001600160a01b03918083169182610387575050508534106103775790928894938592869487935b8785106102785750508851958652505050602083018590526040830152606082015233907f692e83d8616474b42f4087ee207b152ab184c8c509d2c1ee03ffebb618f8e10090608090a38034039034821161026557908491340361023a575b505050505b6001815580f35b818080923361c350f161024b610b45565b501561025857828161022e565b51633c31275160e21b8152fd5b634e487b7160e01b855260118452602485fd5b91939596978080806102966102918b8e8a9c989a610a16565b610a3c565b6102a18b888a610a16565b359061c350f16102af610b45565b50156102d1576102c0600191610a96565b955b0193918b9796959493916101cf565b94956102dc90610a96565b958b6102e9828486610a16565b35856102f6848c8a610a16565b6102ff90610a3c565b168252602090600282528c832083805282528c83209081549061032191610a50565b90558b86610330858d8b610a16565b61033990610a3c565b61034486888a610a16565b35925192835216917fbf182be802245e8ed88e4b8d3e4344c0863dd2a70334f089fd07265389306fcf91a36001906102c2565b8651631e9acf1760e31b81528890fd5b92919989959194969897995193636eb1769f60e11b855233828601523060248601528c858d8160446020998a935afa9182156105c057908b9261058b575b501061057c5786516323b872dd60e01b8682015233602482015230604482015260648082018b905281529160a08301918211838310176105695750865290979593929190610413908b610add565b8a978b968c955b8d8d8d808a1061047557505097519b8c52505050506020880195909552505050604084019290925250606082015233907f692e83d8616474b42f4087ee207b152ab184c8c509d2c1ee03ffebb618f8e10090608090a3610233565b6104a28a9e9495969798999a8b61049b61049361029184878c610a16565b928a8c610a16565b3591610b85565b156104c3575050506104b5600191610a96565b9a5b0195949392919061041a565b8d6104d3949e948a93949d610a96565b9c8c6104e0838a8c610a16565b35918b6104ee85878c610a16565b6104f790610a3c565b168152600286528181208782528652209081549061051491610a50565b90556105209186610a16565b61052990610a3c565b8761053585888a610a16565b35918c5192835216917fbf182be802245e8ed88e4b8d3e4344c0863dd2a70334f089fd07265389306fcf91a36001906104b7565b634e487b7160e01b8e526041905260248dfd5b5085516313be252b60e01b8152fd5b809250878092503d83116105b9575b6105a48183610aa5565b810103126105b557899051386103c5565b8d80fd5b503d61059a565b8951903d90823e3d90fd5b966001600160a01b036105e26102918a8a88610a16565b1615801561061e575b61060e576106076001916106008a8989610a16565b3590610a50565b970161019f565b885163b4fa3fb360e01b81528a90fd5b5061062a888787610a16565b35156105eb565b86516001621398b960e31b031981528890fd5b8651635531b49560e01b81528890fd5b865163b4fa3fb360e01b81528890fd5b8780fd5b8580fd5b5050346106b557806003193601126106b5578060209261068a610988565b6106926109a3565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b5050346106b557816003193601126106b5576020905160c88152f35b5050346106b557816003193601126106b55760015490516001600160a01b039091168152602090f35b833461075b578060031936011261075b576107176109ea565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346106b557602090816003193601126101285761077c610988565b916107856109ea565b6001600160a01b0392831690816107c857505050818080926001541647908282156107bf575bf1156107b5575080f35b51903d90823e3d90fd5b506108fc6107ab565b919493509160015416928051946370a0823160e01b865230908601528185602481865afa948515610879578695610846575b505163a9059cbb60e01b918101919091526001600160a01b03909216602483015260448201929092526108439161083e82606481015b03601f198101845283610aa5565b610add565b80f35b9450908085813d8311610872575b61085e8183610aa5565b8101031261066857935193906108306107fa565b503d610854565b81513d88823e3d90fd5b5090346101285760209081600319360112610968576108a0610988565b926108a9610a73565b338552600283528185206001600160a01b03851680875290845282862054939084156109585733875260028252838720818852825286848120556108ee858733610b85565b1561093a57505090516001600160a01b0393909316835250602082015233907f6f65559b767bf231652bb6bbc613c03da1500c2af09834b0c638fc41d4b2161690604090a26001815580f35b8692945033835260028252838320925252516313ff771f60e21b8152fd5b835163b4fa3fb360e01b81528390fd5b8380fd5b8490346106b557816003193601126106b5578061c35060209252f35b600435906001600160a01b038216820361099e57565b600080fd5b602435906001600160a01b038216820361099e57565b9181601f8401121561099e5782359167ffffffffffffffff831161099e576020808501948460051b01011161099e57565b6001546001600160a01b031633036109fe57565b60405163118cdaa760e01b8152336004820152602490fd5b9190811015610a265760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361099e5790565b91908201809211610a5d57565b634e487b7160e01b600052601160045260246000fd5b600260005414610a84576002600055565b604051633ee5aeb560e01b8152600490fd5b6000198114610a5d5760010190565b90601f8019910116810190811067ffffffffffffffff821117610ac757604052565b634e487b7160e01b600052604160045260246000fd5b906000602091828151910182855af115610b39576000513d610b3057506001600160a01b0381163b155b610b0e5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610b07565b6040513d6000823e3d90fd5b3d15610b80573d9067ffffffffffffffff8211610ac75760405191610b74601f8201601f191660200184610aa5565b82523d6000602084013e565b606090565b906001600160a01b031680610bac57506000808093819361c350f1610ba8610b45565b5090565b60405163a9059cbb60e01b81526001600160a01b039092166004830152602482019290925260208180604481010381600080965af19081610bf6575b50610bf05790565b50600190565b6020813d8211610c25575b81610c0e60209383610aa5565b810103126101285751801515036106b55738610be8565b3d9150610c0156fea2646970667358221220ff00ef0acc20e30a78bc249f139ffef3404c574ca0a91fbb031dab912a42602164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x7F JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE CALLER ISZERO PUSH2 0x69 JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH2 0xC63 SWAP1 DUP2 PUSH2 0x85 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x91D2788 EQ PUSH2 0x96C JUMPI POP DUP1 PUSH4 0x9AE54BE EQ PUSH2 0x883 JUMPI DUP1 PUSH4 0x1B60F266 EQ PUSH2 0x66C JUMPI DUP4 DUP2 PUSH4 0x6FF1C9BC EQ PUSH2 0x75E JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xA6980CE2 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE65C31C4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xE886DADE EQ PUSH2 0x12C JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x128 JUMPI PUSH2 0xB3 PUSH2 0x988 JUMP JUMPDEST SWAP1 PUSH2 0xBC PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x112 JUMPI POP POP PUSH1 0x1 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x128 JUMPI PUSH2 0x142 PUSH2 0x988 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x668 JUMPI PUSH2 0x163 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x664 JUMPI PUSH2 0x17B SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x186 PUSH2 0xA73 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x654 JUMPI PUSH1 0xC8 DUP6 GT PUSH2 0x644 JUMPI DUP4 DUP6 SUB PUSH2 0x631 JUMPI DUP9 SWAP6 DUP10 JUMPDEST DUP7 DUP2 LT PUSH2 0x5CB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP3 PUSH2 0x387 JUMPI POP POP POP DUP6 CALLVALUE LT PUSH2 0x377 JUMPI SWAP1 SWAP3 DUP9 SWAP5 SWAP4 DUP6 SWAP3 DUP7 SWAP5 DUP8 SWAP4 JUMPDEST DUP8 DUP6 LT PUSH2 0x278 JUMPI POP POP DUP9 MLOAD SWAP6 DUP7 MSTORE POP POP POP PUSH1 0x20 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x692E83D8616474B42F4087EE207B152AB184C8C509D2C1EE03FFEBB618F8E100 SWAP1 PUSH1 0x80 SWAP1 LOG3 DUP1 CALLVALUE SUB SWAP1 CALLVALUE DUP3 GT PUSH2 0x265 JUMPI SWAP1 DUP5 SWAP2 CALLVALUE SUB PUSH2 0x23A JUMPI JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLER PUSH2 0xC350 CALL PUSH2 0x24B PUSH2 0xB45 JUMP JUMPDEST POP ISZERO PUSH2 0x258 JUMPI DUP3 DUP2 PUSH2 0x22E JUMP JUMPDEST MLOAD PUSH4 0x3C312751 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 SWAP4 SWAP6 SWAP7 SWAP8 DUP1 DUP1 DUP1 PUSH2 0x296 PUSH2 0x291 DUP12 DUP15 DUP11 SWAP13 SWAP9 SWAP11 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x2A1 DUP12 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC350 CALL PUSH2 0x2AF PUSH2 0xB45 JUMP JUMPDEST POP ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2C0 PUSH1 0x1 SWAP2 PUSH2 0xA96 JUMP JUMPDEST SWAP6 JUMPDEST ADD SWAP4 SWAP2 DUP12 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH2 0x1CF JUMP JUMPDEST SWAP5 SWAP6 PUSH2 0x2DC SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP6 DUP12 PUSH2 0x2E9 DUP3 DUP5 DUP7 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD DUP6 PUSH2 0x2F6 DUP5 DUP13 DUP11 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2FF SWAP1 PUSH2 0xA3C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x2 DUP3 MSTORE DUP13 DUP4 KECCAK256 DUP4 DUP1 MSTORE DUP3 MSTORE DUP13 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH2 0x321 SWAP2 PUSH2 0xA50 JUMP JUMPDEST SWAP1 SSTORE DUP12 DUP7 PUSH2 0x330 DUP6 DUP14 DUP12 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x339 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x344 DUP7 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP3 MLOAD SWAP3 DUP4 MSTORE AND SWAP2 PUSH32 0xBF182BE802245E8ED88E4B8D3E4344C0863DD2A70334F089FD07265389306FCF SWAP2 LOG3 PUSH1 0x1 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP10 DUP10 SWAP6 SWAP2 SWAP5 SWAP7 SWAP9 SWAP8 SWAP10 MLOAD SWAP4 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP6 MSTORE CALLER DUP3 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE DUP13 DUP6 DUP14 DUP2 PUSH1 0x44 PUSH1 0x20 SWAP10 DUP11 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5C0 JUMPI SWAP1 DUP12 SWAP3 PUSH2 0x58B JUMPI JUMPDEST POP LT PUSH2 0x57C JUMPI DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP2 MSTORE SWAP2 PUSH1 0xA0 DUP4 ADD SWAP2 DUP3 GT DUP4 DUP4 LT OR PUSH2 0x569 JUMPI POP DUP7 MSTORE SWAP1 SWAP8 SWAP6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x413 SWAP1 DUP12 PUSH2 0xADD JUMP JUMPDEST DUP11 SWAP8 DUP12 SWAP7 DUP13 SWAP6 JUMPDEST DUP14 DUP14 DUP14 DUP1 DUP11 LT PUSH2 0x475 JUMPI POP POP SWAP8 MLOAD SWAP12 DUP13 MSTORE POP POP POP POP PUSH1 0x20 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x692E83D8616474B42F4087EE207B152AB184C8C509D2C1EE03FFEBB618F8E100 SWAP1 PUSH1 0x80 SWAP1 LOG3 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x4A2 DUP11 SWAP15 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 DUP12 PUSH2 0x49B PUSH2 0x493 PUSH2 0x291 DUP5 DUP8 DUP13 PUSH2 0xA16 JUMP JUMPDEST SWAP3 DUP11 DUP13 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x4C3 JUMPI POP POP POP PUSH2 0x4B5 PUSH1 0x1 SWAP2 PUSH2 0xA96 JUMP JUMPDEST SWAP11 JUMPDEST ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST DUP14 PUSH2 0x4D3 SWAP5 SWAP15 SWAP5 DUP11 SWAP4 SWAP5 SWAP14 PUSH2 0xA96 JUMP JUMPDEST SWAP13 DUP13 PUSH2 0x4E0 DUP4 DUP11 DUP13 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP12 PUSH2 0x4EE DUP6 DUP8 DUP13 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x4F7 SWAP1 PUSH2 0xA3C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE DUP2 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP7 MSTORE KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH2 0x514 SWAP2 PUSH2 0xA50 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x520 SWAP2 DUP7 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x529 SWAP1 PUSH2 0xA3C JUMP JUMPDEST DUP8 PUSH2 0x535 DUP6 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP13 MLOAD SWAP3 DUP4 MSTORE AND SWAP2 PUSH32 0xBF182BE802245E8ED88E4B8D3E4344C0863DD2A70334F089FD07265389306FCF SWAP2 LOG3 PUSH1 0x1 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST POP DUP6 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x5B9 JUMPI JUMPDEST PUSH2 0x5A4 DUP2 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5B5 JUMPI DUP10 SWAP1 MLOAD CODESIZE PUSH2 0x3C5 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x59A JUMP JUMPDEST DUP10 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E2 PUSH2 0x291 DUP11 DUP11 DUP9 PUSH2 0xA16 JUMP JUMPDEST AND ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI JUMPDEST PUSH2 0x60E JUMPI PUSH2 0x607 PUSH1 0x1 SWAP2 PUSH2 0x600 DUP11 DUP10 DUP10 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP8 ADD PUSH2 0x19F JUMP JUMPDEST DUP9 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 SWAP1 REVERT JUMPDEST POP PUSH2 0x62A DUP9 DUP8 DUP8 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD ISZERO PUSH2 0x5EB JUMP JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x5531B495 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x68A PUSH2 0x988 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x2 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x75B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x75B JUMPI PUSH2 0x717 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x128 JUMPI PUSH2 0x77C PUSH2 0x988 JUMP JUMPDEST SWAP2 PUSH2 0x785 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 PUSH2 0x7C8 JUMPI POP POP POP DUP2 DUP1 DUP1 SWAP3 PUSH1 0x1 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x7BF JUMPI JUMPDEST CALL ISZERO PUSH2 0x7B5 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x7AB JUMP JUMPDEST SWAP2 SWAP5 SWAP4 POP SWAP2 PUSH1 0x1 SLOAD AND SWAP3 DUP1 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS SWAP1 DUP7 ADD MSTORE DUP2 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x879 JUMPI DUP7 SWAP6 PUSH2 0x846 JUMPI JUMPDEST POP MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x843 SWAP2 PUSH2 0x83E DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP5 POP SWAP1 DUP1 DUP6 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x872 JUMPI JUMPDEST PUSH2 0x85E DUP2 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x668 JUMPI SWAP4 MLOAD SWAP4 SWAP1 PUSH2 0x830 PUSH2 0x7FA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x854 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x968 JUMPI PUSH2 0x8A0 PUSH2 0x988 JUMP JUMPDEST SWAP3 PUSH2 0x8A9 PUSH2 0xA73 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP8 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP4 SWAP1 DUP5 ISZERO PUSH2 0x958 JUMPI CALLER DUP8 MSTORE PUSH1 0x2 DUP3 MSTORE DUP4 DUP8 KECCAK256 DUP2 DUP9 MSTORE DUP3 MSTORE DUP7 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x8EE DUP6 DUP8 CALLER PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x93A JUMPI POP POP SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE POP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x6F65559B767BF231652BB6BBC613C03DA1500C2AF09834B0C638FC41D4B21616 SWAP1 PUSH1 0x40 SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP7 SWAP3 SWAP5 POP CALLER DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP4 DUP4 KECCAK256 SWAP3 MSTORE MSTORE MLOAD PUSH4 0x13FF771F PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x99E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x99E JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x99E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x99E JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x99E JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x99E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA5D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xA84 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA5D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xAC7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xB30 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xB0E JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB74 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xAA5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xBAC JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0xC350 CALL PUSH2 0xBA8 PUSH2 0xB45 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 DUP1 SWAP7 GAS CALL SWAP1 DUP2 PUSH2 0xBF6 JUMPI JUMPDEST POP PUSH2 0xBF0 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xC25 JUMPI JUMPDEST DUP2 PUSH2 0xC0E PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x128 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x6B5 JUMPI CODESIZE PUSH2 0xBE8 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC01 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT STOP 0xEF EXP 0xCC KECCAK256 0xE3 EXP PUSH25 0xBC249F139FFEF3404C574CA0A91FBB031DAB912A4260216473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"468:6749:24:-:0;;;;;;;1857:1:13;2061:21;1857:1;578:10:24;1273:26:0;1269:95;;1857:1:13;468:6749:24;;578:10;-1:-1:-1;;;;;;468:6749:24;;;;;;;;;;578:10;-1:-1:-1;;;;;468:6749:24;3052:40:0;-1:-1:-1;;3052:40:0;468:6749:24;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;2061:21:13;1322:31:0;;;468:6749:24;;;1322:31:0;468:6749:24;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2440,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8112":{"entryPoint":2467,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":2489,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":2582,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":2640,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":2885,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2725,"id":null,"parameterSlots":2,"returnSlots":0},"fun_attemptTransfer":{"entryPoint":2949,"id":8227,"parameterSlots":3,"returnSlots":1},"fun_callOptionalReturn":{"entryPoint":2781,"id":1440,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":2538,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":2675,"id":1721,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":2710,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":2620,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908163091d27881461096c5750806309ae54be146108835780631b60f2661461066c578381636ff1c9bc1461075e57508063715018a6146106fe5780638da5cb5b146106d5578063a6980ce2146106b9578063e65c31c41461066c578063e886dade1461012c5763f2fde38b036100115734610128576020366003190112610128576100b3610988565b906100bc6109ea565b6001600160a01b03918216928315610112575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090606036600319011261012857610142610988565b67ffffffffffffffff906024358281116106685761016390369086016109b9565b916044358481116106645761017b90369088016109b9565b929091610186610a73565b84156106545760c8851161064457838503610631578895895b8681106105cb57506001600160a01b03918083169182610387575050508534106103775790928894938592869487935b8785106102785750508851958652505050602083018590526040830152606082015233907f692e83d8616474b42f4087ee207b152ab184c8c509d2c1ee03ffebb618f8e10090608090a38034039034821161026557908491340361023a575b505050505b6001815580f35b818080923361c350f161024b610b45565b501561025857828161022e565b51633c31275160e21b8152fd5b634e487b7160e01b855260118452602485fd5b91939596978080806102966102918b8e8a9c989a610a16565b610a3c565b6102a18b888a610a16565b359061c350f16102af610b45565b50156102d1576102c0600191610a96565b955b0193918b9796959493916101cf565b94956102dc90610a96565b958b6102e9828486610a16565b35856102f6848c8a610a16565b6102ff90610a3c565b168252602090600282528c832083805282528c83209081549061032191610a50565b90558b86610330858d8b610a16565b61033990610a3c565b61034486888a610a16565b35925192835216917fbf182be802245e8ed88e4b8d3e4344c0863dd2a70334f089fd07265389306fcf91a36001906102c2565b8651631e9acf1760e31b81528890fd5b92919989959194969897995193636eb1769f60e11b855233828601523060248601528c858d8160446020998a935afa9182156105c057908b9261058b575b501061057c5786516323b872dd60e01b8682015233602482015230604482015260648082018b905281529160a08301918211838310176105695750865290979593929190610413908b610add565b8a978b968c955b8d8d8d808a1061047557505097519b8c52505050506020880195909552505050604084019290925250606082015233907f692e83d8616474b42f4087ee207b152ab184c8c509d2c1ee03ffebb618f8e10090608090a3610233565b6104a28a9e9495969798999a8b61049b61049361029184878c610a16565b928a8c610a16565b3591610b85565b156104c3575050506104b5600191610a96565b9a5b0195949392919061041a565b8d6104d3949e948a93949d610a96565b9c8c6104e0838a8c610a16565b35918b6104ee85878c610a16565b6104f790610a3c565b168152600286528181208782528652209081549061051491610a50565b90556105209186610a16565b61052990610a3c565b8761053585888a610a16565b35918c5192835216917fbf182be802245e8ed88e4b8d3e4344c0863dd2a70334f089fd07265389306fcf91a36001906104b7565b634e487b7160e01b8e526041905260248dfd5b5085516313be252b60e01b8152fd5b809250878092503d83116105b9575b6105a48183610aa5565b810103126105b557899051386103c5565b8d80fd5b503d61059a565b8951903d90823e3d90fd5b966001600160a01b036105e26102918a8a88610a16565b1615801561061e575b61060e576106076001916106008a8989610a16565b3590610a50565b970161019f565b885163b4fa3fb360e01b81528a90fd5b5061062a888787610a16565b35156105eb565b86516001621398b960e31b031981528890fd5b8651635531b49560e01b81528890fd5b865163b4fa3fb360e01b81528890fd5b8780fd5b8580fd5b5050346106b557806003193601126106b5578060209261068a610988565b6106926109a3565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b5050346106b557816003193601126106b5576020905160c88152f35b5050346106b557816003193601126106b55760015490516001600160a01b039091168152602090f35b833461075b578060031936011261075b576107176109ea565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346106b557602090816003193601126101285761077c610988565b916107856109ea565b6001600160a01b0392831690816107c857505050818080926001541647908282156107bf575bf1156107b5575080f35b51903d90823e3d90fd5b506108fc6107ab565b919493509160015416928051946370a0823160e01b865230908601528185602481865afa948515610879578695610846575b505163a9059cbb60e01b918101919091526001600160a01b03909216602483015260448201929092526108439161083e82606481015b03601f198101845283610aa5565b610add565b80f35b9450908085813d8311610872575b61085e8183610aa5565b8101031261066857935193906108306107fa565b503d610854565b81513d88823e3d90fd5b5090346101285760209081600319360112610968576108a0610988565b926108a9610a73565b338552600283528185206001600160a01b03851680875290845282862054939084156109585733875260028252838720818852825286848120556108ee858733610b85565b1561093a57505090516001600160a01b0393909316835250602082015233907f6f65559b767bf231652bb6bbc613c03da1500c2af09834b0c638fc41d4b2161690604090a26001815580f35b8692945033835260028252838320925252516313ff771f60e21b8152fd5b835163b4fa3fb360e01b81528390fd5b8380fd5b8490346106b557816003193601126106b5578061c35060209252f35b600435906001600160a01b038216820361099e57565b600080fd5b602435906001600160a01b038216820361099e57565b9181601f8401121561099e5782359167ffffffffffffffff831161099e576020808501948460051b01011161099e57565b6001546001600160a01b031633036109fe57565b60405163118cdaa760e01b8152336004820152602490fd5b9190811015610a265760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361099e5790565b91908201809211610a5d57565b634e487b7160e01b600052601160045260246000fd5b600260005414610a84576002600055565b604051633ee5aeb560e01b8152600490fd5b6000198114610a5d5760010190565b90601f8019910116810190811067ffffffffffffffff821117610ac757604052565b634e487b7160e01b600052604160045260246000fd5b906000602091828151910182855af115610b39576000513d610b3057506001600160a01b0381163b155b610b0e5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610b07565b6040513d6000823e3d90fd5b3d15610b80573d9067ffffffffffffffff8211610ac75760405191610b74601f8201601f191660200184610aa5565b82523d6000602084013e565b606090565b906001600160a01b031680610bac57506000808093819361c350f1610ba8610b45565b5090565b60405163a9059cbb60e01b81526001600160a01b039092166004830152602482019290925260208180604481010381600080965af19081610bf6575b50610bf05790565b50600190565b6020813d8211610c25575b81610c0e60209383610aa5565b810103126101285751801515036106b55738610be8565b3d9150610c0156fea2646970667358221220ff00ef0acc20e30a78bc249f139ffef3404c574ca0a91fbb031dab912a42602164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x91D2788 EQ PUSH2 0x96C JUMPI POP DUP1 PUSH4 0x9AE54BE EQ PUSH2 0x883 JUMPI DUP1 PUSH4 0x1B60F266 EQ PUSH2 0x66C JUMPI DUP4 DUP2 PUSH4 0x6FF1C9BC EQ PUSH2 0x75E JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xA6980CE2 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE65C31C4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xE886DADE EQ PUSH2 0x12C JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x128 JUMPI PUSH2 0xB3 PUSH2 0x988 JUMP JUMPDEST SWAP1 PUSH2 0xBC PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x112 JUMPI POP POP PUSH1 0x1 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x128 JUMPI PUSH2 0x142 PUSH2 0x988 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x668 JUMPI PUSH2 0x163 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x664 JUMPI PUSH2 0x17B SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x9B9 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x186 PUSH2 0xA73 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x654 JUMPI PUSH1 0xC8 DUP6 GT PUSH2 0x644 JUMPI DUP4 DUP6 SUB PUSH2 0x631 JUMPI DUP9 SWAP6 DUP10 JUMPDEST DUP7 DUP2 LT PUSH2 0x5CB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP3 PUSH2 0x387 JUMPI POP POP POP DUP6 CALLVALUE LT PUSH2 0x377 JUMPI SWAP1 SWAP3 DUP9 SWAP5 SWAP4 DUP6 SWAP3 DUP7 SWAP5 DUP8 SWAP4 JUMPDEST DUP8 DUP6 LT PUSH2 0x278 JUMPI POP POP DUP9 MLOAD SWAP6 DUP7 MSTORE POP POP POP PUSH1 0x20 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x692E83D8616474B42F4087EE207B152AB184C8C509D2C1EE03FFEBB618F8E100 SWAP1 PUSH1 0x80 SWAP1 LOG3 DUP1 CALLVALUE SUB SWAP1 CALLVALUE DUP3 GT PUSH2 0x265 JUMPI SWAP1 DUP5 SWAP2 CALLVALUE SUB PUSH2 0x23A JUMPI JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLER PUSH2 0xC350 CALL PUSH2 0x24B PUSH2 0xB45 JUMP JUMPDEST POP ISZERO PUSH2 0x258 JUMPI DUP3 DUP2 PUSH2 0x22E JUMP JUMPDEST MLOAD PUSH4 0x3C312751 PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 SWAP4 SWAP6 SWAP7 SWAP8 DUP1 DUP1 DUP1 PUSH2 0x296 PUSH2 0x291 DUP12 DUP15 DUP11 SWAP13 SWAP9 SWAP11 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x2A1 DUP12 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC350 CALL PUSH2 0x2AF PUSH2 0xB45 JUMP JUMPDEST POP ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2C0 PUSH1 0x1 SWAP2 PUSH2 0xA96 JUMP JUMPDEST SWAP6 JUMPDEST ADD SWAP4 SWAP2 DUP12 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH2 0x1CF JUMP JUMPDEST SWAP5 SWAP6 PUSH2 0x2DC SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP6 DUP12 PUSH2 0x2E9 DUP3 DUP5 DUP7 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD DUP6 PUSH2 0x2F6 DUP5 DUP13 DUP11 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2FF SWAP1 PUSH2 0xA3C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x2 DUP3 MSTORE DUP13 DUP4 KECCAK256 DUP4 DUP1 MSTORE DUP3 MSTORE DUP13 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH2 0x321 SWAP2 PUSH2 0xA50 JUMP JUMPDEST SWAP1 SSTORE DUP12 DUP7 PUSH2 0x330 DUP6 DUP14 DUP12 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x339 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x344 DUP7 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP3 MLOAD SWAP3 DUP4 MSTORE AND SWAP2 PUSH32 0xBF182BE802245E8ED88E4B8D3E4344C0863DD2A70334F089FD07265389306FCF SWAP2 LOG3 PUSH1 0x1 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP10 DUP10 SWAP6 SWAP2 SWAP5 SWAP7 SWAP9 SWAP8 SWAP10 MLOAD SWAP4 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP6 MSTORE CALLER DUP3 DUP7 ADD MSTORE ADDRESS PUSH1 0x24 DUP7 ADD MSTORE DUP13 DUP6 DUP14 DUP2 PUSH1 0x44 PUSH1 0x20 SWAP10 DUP11 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x5C0 JUMPI SWAP1 DUP12 SWAP3 PUSH2 0x58B JUMPI JUMPDEST POP LT PUSH2 0x57C JUMPI DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP7 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP2 MSTORE SWAP2 PUSH1 0xA0 DUP4 ADD SWAP2 DUP3 GT DUP4 DUP4 LT OR PUSH2 0x569 JUMPI POP DUP7 MSTORE SWAP1 SWAP8 SWAP6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x413 SWAP1 DUP12 PUSH2 0xADD JUMP JUMPDEST DUP11 SWAP8 DUP12 SWAP7 DUP13 SWAP6 JUMPDEST DUP14 DUP14 DUP14 DUP1 DUP11 LT PUSH2 0x475 JUMPI POP POP SWAP8 MLOAD SWAP12 DUP13 MSTORE POP POP POP POP PUSH1 0x20 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP PUSH1 0x40 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x692E83D8616474B42F4087EE207B152AB184C8C509D2C1EE03FFEBB618F8E100 SWAP1 PUSH1 0x80 SWAP1 LOG3 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x4A2 DUP11 SWAP15 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 DUP12 PUSH2 0x49B PUSH2 0x493 PUSH2 0x291 DUP5 DUP8 DUP13 PUSH2 0xA16 JUMP JUMPDEST SWAP3 DUP11 DUP13 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x4C3 JUMPI POP POP POP PUSH2 0x4B5 PUSH1 0x1 SWAP2 PUSH2 0xA96 JUMP JUMPDEST SWAP11 JUMPDEST ADD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST DUP14 PUSH2 0x4D3 SWAP5 SWAP15 SWAP5 DUP11 SWAP4 SWAP5 SWAP14 PUSH2 0xA96 JUMP JUMPDEST SWAP13 DUP13 PUSH2 0x4E0 DUP4 DUP11 DUP13 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP12 PUSH2 0x4EE DUP6 DUP8 DUP13 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x4F7 SWAP1 PUSH2 0xA3C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE DUP2 DUP2 KECCAK256 DUP8 DUP3 MSTORE DUP7 MSTORE KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH2 0x514 SWAP2 PUSH2 0xA50 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x520 SWAP2 DUP7 PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x529 SWAP1 PUSH2 0xA3C JUMP JUMPDEST DUP8 PUSH2 0x535 DUP6 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP13 MLOAD SWAP3 DUP4 MSTORE AND SWAP2 PUSH32 0xBF182BE802245E8ED88E4B8D3E4344C0863DD2A70334F089FD07265389306FCF SWAP2 LOG3 PUSH1 0x1 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST POP DUP6 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x5B9 JUMPI JUMPDEST PUSH2 0x5A4 DUP2 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5B5 JUMPI DUP10 SWAP1 MLOAD CODESIZE PUSH2 0x3C5 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x59A JUMP JUMPDEST DUP10 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E2 PUSH2 0x291 DUP11 DUP11 DUP9 PUSH2 0xA16 JUMP JUMPDEST AND ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI JUMPDEST PUSH2 0x60E JUMPI PUSH2 0x607 PUSH1 0x1 SWAP2 PUSH2 0x600 DUP11 DUP10 DUP10 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP8 ADD PUSH2 0x19F JUMP JUMPDEST DUP9 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP11 SWAP1 REVERT JUMPDEST POP PUSH2 0x62A DUP9 DUP8 DUP8 PUSH2 0xA16 JUMP JUMPDEST CALLDATALOAD ISZERO PUSH2 0x5EB JUMP JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x5531B495 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP9 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x68A PUSH2 0x988 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x2 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xC8 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x75B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x75B JUMPI PUSH2 0x717 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x6B5 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x128 JUMPI PUSH2 0x77C PUSH2 0x988 JUMP JUMPDEST SWAP2 PUSH2 0x785 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 PUSH2 0x7C8 JUMPI POP POP POP DUP2 DUP1 DUP1 SWAP3 PUSH1 0x1 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x7BF JUMPI JUMPDEST CALL ISZERO PUSH2 0x7B5 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x7AB JUMP JUMPDEST SWAP2 SWAP5 SWAP4 POP SWAP2 PUSH1 0x1 SLOAD AND SWAP3 DUP1 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS SWAP1 DUP7 ADD MSTORE DUP2 DUP6 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x879 JUMPI DUP7 SWAP6 PUSH2 0x846 JUMPI JUMPDEST POP MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x843 SWAP2 PUSH2 0x83E DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP5 POP SWAP1 DUP1 DUP6 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x872 JUMPI JUMPDEST PUSH2 0x85E DUP2 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x668 JUMPI SWAP4 MLOAD SWAP4 SWAP1 PUSH2 0x830 PUSH2 0x7FA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x854 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x128 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x968 JUMPI PUSH2 0x8A0 PUSH2 0x988 JUMP JUMPDEST SWAP3 PUSH2 0x8A9 PUSH2 0xA73 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x2 DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP8 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP4 SWAP1 DUP5 ISZERO PUSH2 0x958 JUMPI CALLER DUP8 MSTORE PUSH1 0x2 DUP3 MSTORE DUP4 DUP8 KECCAK256 DUP2 DUP9 MSTORE DUP3 MSTORE DUP7 DUP5 DUP2 KECCAK256 SSTORE PUSH2 0x8EE DUP6 DUP8 CALLER PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x93A JUMPI POP POP SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE POP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x6F65559B767BF231652BB6BBC613C03DA1500C2AF09834B0C638FC41D4B21616 SWAP1 PUSH1 0x40 SWAP1 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP7 SWAP3 SWAP5 POP CALLER DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP4 DUP4 KECCAK256 SWAP3 MSTORE MSTORE MLOAD PUSH4 0x13FF771F PUSH1 0xE2 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x6B5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6B5 JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x99E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x99E JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x99E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x99E JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x99E JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x99E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA5D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xA84 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA5D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xAC7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xB30 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xB0E JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB74 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xAA5 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xBAC JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 PUSH2 0xC350 CALL PUSH2 0xBA8 PUSH2 0xB45 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 DUP1 SWAP7 GAS CALL SWAP1 DUP2 PUSH2 0xBF6 JUMPI JUMPDEST POP PUSH2 0xBF0 JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xC25 JUMPI JUMPDEST DUP2 PUSH2 0xC0E PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAA5 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x128 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x6B5 JUMPI CODESIZE PUSH2 0xBE8 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC01 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT STOP 0xEF EXP 0xCC KECCAK256 0xE3 EXP PUSH25 0xBC249F139FFEF3404C574CA0A91FBB031DAB912A4260216473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"468:6749:24:-:0;;;;;;;;;;;;-1:-1:-1;468:6749:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;468:6749:24;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;468:6749:24;;;;2627:22:0;;2623:91;;468:6749:24;;;;;;;;;;;;;;3052:40:0;;;;468:6749:24;;2623:91:0;468:6749:24;-1:-1:-1;;;2672:31:0;;;;;468:6749:24;;;;;2672:31:0;468:6749:24;;;;;-1:-1:-1;468:6749:24;;;-1:-1:-1;;468:6749:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2466:103:13;;;;;:::i;:::-;2306:11:24;;2302:38;;709:3;2354:23;;2350:55;;2419:24;;;2415:53;;2479:19;2513:9;;2524:10;;;;;;-1:-1:-1;;;;;;468:6749:24;;;;;2719:19;468:6749;;3825:9;;;;;:23;3821:57;;3889:24;;;;;;3923:21;;3960:9;;3955:403;3971:21;;;;;;-1:-1:-1;;468:6749:24;;;;;-1:-1:-1;;;468:6749:24;;;;;;;;;;;;;;4394:10;;4373:101;;468:6749;;4373:101;3825:9;;468:6749;3825:9;;468:6749;;;;3825:9;;;;6395:13;6391:164;;3955:403;2715:197;;;;;468:6749;1899:1:13;;468:6749:24;;6391:164;4394:10;;;;;820:5;6442:53;;;:::i;:::-;;6513:8;6509:35;;6391:164;;;;6509:35;468:6749;-1:-1:-1;;;6530:14:24;;;468:6749;-1:-1:-1;;;468:6749:24;;;;;;;;3960:9;4030:13;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;4057:10;;;;;:::i;:::-;468:6749;5962:49;820:5;5962:49;;;:::i;:::-;-1:-1:-1;4013:55:24;;;4088:14;468:6749;4088:14;;:::i;:::-;4009:308;;468:6749;3960:9;;;;;;;;;;;4009:308;4141:11;;;;;:::i;:::-;4216:10;;;;;;;:::i;:::-;468:6749;4186:13;;;;;;:::i;:::-;;;;:::i;:::-;468:6749;;;;;4170:15;468:6749;;;;;;;;;;;;;;;;4170:56;;;;:::i;:::-;1899:1:13;;4264:13:24;;;;;;;:::i;:::-;;;;:::i;:::-;4291:10;;;;;:::i;:::-;468:6749;;;;;;;4249:53;;;;468:6749;4009:308;;;3821:57;468:6749;;-1:-1:-1;;;3857:21:24;;468:6749;;3857:21;2715:197;468:6749;;;;;;;;;;;;;;;;4850:50;;4874:10;4850:50;;;468:6749;4894:4;468:6749;;;;;;;;;;4850:50;;;;;;;;;;;;;;;2715:197;4914:23;;4910:59;;468:6749;;-1:-1:-1;;;1745:53:9;;;;4874:10:24;468:6749;1745:53:9;;468:6749:24;4894:4;468:6749;;;;;;;;;;;1745:53:9;;468:6749:24;;;;;;;;;;;;;-1:-1:-1;468:6749:24;;;;;;;;;1745:53:9;;;;:::i;:::-;5112:24:24;5146:21;;5183:9;;5178:388;5194:21;;;;;;;;;-1:-1:-1;;468:6749:24;;;;;-1:-1:-1;;;;468:6749:24;;;;;;;-1:-1:-1;;;468:6749:24;;;;;;;-1:-1:-1;468:6749:24;;;;4874:10;;5581:96;;468:6749;;5581:96;2715:197;;5183:9;5236:50;5253:13;;;;;;;;;;5275:10;5253:13;;;;;;:::i;:::-;5275:10;;;;:::i;:::-;468:6749;5236:50;;:::i;:::-;5275:10;;;5306:14;;;;468:6749;5306:14;;:::i;:::-;5232:293;;468:6749;5183:9;;;;;;;;5232:293;5359:11;;;;;;;;;;:::i;:::-;5429:10;;;;;;;:::i;:::-;468:6749;5404:13;;;;;;;:::i;:::-;;;;:::i;:::-;468:6749;;;5388:15;468:6749;;;;;;;;;;;;;;5388:51;;;;:::i;:::-;1899:1:13;;5477:13:24;;;;:::i;:::-;;;;:::i;:::-;5499:10;;;;;;:::i;:::-;468:6749;;;;;;;;5462:48;;;;468:6749;5232:293;;;468:6749;-1:-1:-1;;;468:6749:24;;;;;;;;4910:59;-1:-1:-1;468:6749:24;;-1:-1:-1;;;4946:23:24;;;4850:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;468:6749;;;;;;;4850:50;;;468:6749;;;;4850:50;;;;;;468:6749;;;;;;;;;;2513:9;468:6749;-1:-1:-1;;;;;2555:13:24;;468:6749;2555:13;;;:::i;:::-;468:6749;2555:27;:46;;;;2513:9;2551:73;;2638:25;468:6749;2653:10;;;;;;:::i;:::-;468:6749;2638:25;;:::i;:::-;468:6749;;2513:9;;2551:73;468:6749;;-1:-1:-1;;;2610:14:24;;468:6749;;2610:14;2555:46;2586:10;;;;;;:::i;:::-;468:6749;2586:15;2555:46;;2415:53;468:6749;;-1:-1:-1;;;;;;2452:16:24;;468:6749;;2452:16;2350:55;468:6749;;-1:-1:-1;;;2386:19:24;;468:6749;;2386:19;2302:38;468:6749;;-1:-1:-1;;;2326:14:24;;468:6749;;2326:14;468:6749;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;468:6749:24;;;;;6749:15;468:6749;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:3;468:6749;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:6749:24;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;468:6749:24;;-1:-1:-1;;;;;;468:6749:24;;;;;;;-1:-1:-1;;;;;468:6749:24;3052:40:0;468:6749:24;;3052:40:0;468:6749:24;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;468:6749:24;;;;6956:19;468:6749;;;;;;;;;;;;7017:21;6991:48;;;;;;6952:204;6991:48;;;;6952:204;468:6749;;6991:48;468:6749;;;;;;;;;6991:48;;;;;6952:204;468:6749;;;;;;;;;;;;;;;7106:38;;7138:4;7106:38;;;468:6749;7106:38;;468:6749;7106:38;;;;;;;;;;;;;6952:204;-1:-1:-1;468:6749:24;-1:-1:-1;;;1328:43:9;;;;;;;-1:-1:-1;;;;;468:6749:24;;;;1328:43:9;;468:6749:24;;;;;;;;1328:43:9;;;468:6749:24;;;;1328:43:9;;;;;;;;;;:::i;:::-;;:::i;:::-;468:6749:24;;7106:38;;;;;;;;;;;;;;;;;:::i;:::-;;;468:6749;;;;;;;7106:38;1328:43:9;7106:38:24;;;;;;;;468:6749;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:13;;;:::i;:::-;3143:10:24;468:6749;;3127:15;468:6749;;;;;-1:-1:-1;;;;;468:6749:24;;;;;;;;;;;;;;3175:11;;3171:38;;3143:10;468:6749;;3127:15;468:6749;;;;;;;;;;;;;;1899:1:13;3284:43:24;3143:10;;;3284:43;:::i;:::-;;;;-1:-1:-1;;468:6749:24;;-1:-1:-1;;;;;468:6749:24;;;;;;-1:-1:-1;468:6749:24;;;;3143:10;;3378:48;;468:6749;;3378:48;468:6749;1899:1:13;;468:6749:24;;3346:220;3143:10;;;;;468:6749;;3127:15;468:6749;;;;;;;;;3540:15;;;;;;3171:38;468:6749;;-1:-1:-1;;;3195:14:24;;468:6749;;3195:14;468:6749;;;;;;;;;;;;;;;;;;;820:5;468:6749;;;;;;;;-1:-1:-1;;;;;468:6749:24;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;468:6749:24;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;468:6749:24;;-1:-1:-1;;;;;468:6749:24;735:10:10;1855:23:0;1851:101;;1796:162::o;1851:101::-;468:6749:24;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;468:6749:24;;;1901:40:0;468:6749:24;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;468:6749:24;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2575:307:13;1899:1;2702:7;468:6749:24;2702:18:13;2698:86;;1899:1;2702:7;1899:1;2575:307::o;2698:86::-;468:6749:24;;-1:-1:-1;;;2743:30:13;;;;;468:6749:24;-1:-1:-1;;468:6749:24;;;;;;;:::o;:::-;;1328:43:9;;;468:6749:24;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;8370:720:9;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;-1:-1:-1;;;;;;468:6749:24;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;468:6749:24;;-1:-1:-1;;;9033:40:9;;-1:-1:-1;;;;;468:6749:24;;;9033:40:9;;;468:6749:24;;;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:9;;;;;468:6749:24;;;;;;;;;;;;;;;;1328:43:9;468:6749:24;;-1:-1:-1;;468:6749:24;;;;;:::i;:::-;;;;-1:-1:-1;468:6749:24;;;;:::o;:::-;;;:::o;5761:445::-;;-1:-1:-1;;;;;468:6749:24;5913:19;468:6749;;5962:49;5930:1;5962:49;;;;;820:5;5962:49;;;:::i;:::-;;5909:291;5761:445::o;5909:291::-;468:6749;;-1:-1:-1;;;6046:41:24;;-1:-1:-1;;;;;468:6749:24;;;6046:41;;;468:6749;;;;;;;;6046:41;468:6749;;;;;6046:41;5930:1;;6046:41;;;;;;;;5909:291;-1:-1:-1;6042:148:24;;;5761:445::o;6042:148::-;6106:14;468:6749;6042:148;5761:445::o;6046:41::-;;;;;;;;;;;;;;;:::i;:::-;;;468:6749;;;;;;;;;;;6046:41;;;;;;-1:-1:-1;6046:41:24;"},"methodIdentifiers":{"GAS_LIMIT()":"091d2788","MAX_RECIPIENTS()":"a6980ce2","bulkTransfer(address,address[],uint256[])":"e886dade","claimFailedTransfer(address)":"09ae54be","emergencyWithdraw(address)":"6ff1c9bc","failedTransfers(address,address)":"1b60f266","getFailedAmount(address,address)":"e65c31c4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyRecipients\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRecipients\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"successCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failCount\",\"type\":\"uint256\"}],\"name\":\"BulkTransferExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FailedTransferClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RECIPIENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimFailedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"failedTransfers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFailedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Enhanced bulk payment contract with failure isolation\",\"errors\":{\"LengthMismatch()\":[{\"details\":\"Custom errors\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"BulkTransferExecuted(address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"Events\"}},\"kind\":\"dev\",\"methods\":{\"bulkTransfer(address,address[],uint256[])\":{\"details\":\"Failed transfers are stored for later claiming\",\"params\":{\"amounts\":\"Array of corresponding transfer amounts\",\"recipients\":\"Array of recipient addresses\",\"token\":\"ERC20 token address or address(0) for Native currency\"}},\"claimFailedTransfer(address)\":{\"params\":{\"token\":\"Token to claim (address(0) for ETH)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"GAS_LIMIT\":{\"details\":\"Gas limit for ETH transfers to prevent griefing\"},\"MAX_RECIPIENTS\":{\"details\":\"Maximum recipients per batch to prevent gas limit issues\"},\"failedTransfers\":{\"details\":\"Mapping for failed transfers: recipient => token => amount\"}},\"title\":\"BulkPayroll\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bulkTransfer(address,address[],uint256[])\":{\"notice\":\"Executes a bulk transfer of tokens/Native currency with failure isolation\"},\"claimFailedTransfer(address)\":{\"notice\":\"Claim failed transfers\"},\"emergencyWithdraw(address)\":{\"notice\":\"Emergency withdrawal for owner (only failed transfers)\"},\"getFailedAmount(address,address)\":{\"notice\":\"Get failed transfer amount for a recipient\"}},\"notice\":\"Handles bulk ETH and ERC20 transfers with individual failure handling\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BulkPayroll.sol\":\"BulkPayroll\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/BulkPayroll.sol\":{\"keccak256\":\"0xab7195e626658b5501f0a7dcade3e7d81a1d83d4db6b52b5d4219d4b889556a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c64cdb1ec2eac55e461d356da98987734a1183a5a714de7ca045b5c19f32cbb9\",\"dweb:/ipfs/QmW5i2LcGMiNxR8ziKnjG1iht1RSbwpBeQnL3XfL9AD3Gz\"]}},\"version\":1}"}},"contracts/DummyUSDT.sol":{"DummyUSDT":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FaucetCooldown","type":"error"},{"inputs":[],"name":"FaucetEmpty","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FaucetClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FaucetFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"FAUCET_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FAUCET_COOLDOWN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"canClaimFaucet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"faucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fundFaucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFaucetBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getTimeUntilNextClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastFaucetClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFaucetFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1030,"id":null,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":1062,"id":754,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x401 JUMPI PUSH1 0x1F NOT SWAP1 PUSH1 0x1F PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x11AE CODESIZE DUP2 SWAP1 SUB DUP4 DUP2 ADD DUP7 AND DUP6 ADD DUP4 DUP2 GT DUP7 DUP3 LT OR PUSH3 0x305 JUMPI DUP6 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP5 DUP6 SWAP2 DUP2 ADD SUB SLT PUSH3 0x401 JUMPI MLOAD SWAP4 PUSH3 0x53 PUSH3 0x406 JUMP JUMPDEST SWAP2 PUSH1 0xA DUP4 MSTORE PUSH10 0x111D5B5B5E481554D115 PUSH1 0xB2 SHL DUP6 DUP5 ADD MSTORE PUSH3 0x74 PUSH3 0x406 JUMP JUMPDEST SWAP4 PUSH1 0x5 SWAP4 DUP5 DUP7 MSTORE PUSH5 0x111554D115 PUSH1 0xDA SHL DUP8 DUP8 ADD MSTORE DUP1 MLOAD SWAP2 DUP4 DUP4 GT PUSH3 0x305 JUMPI PUSH1 0x3 SWAP3 DUP4 SLOAD PUSH1 0x1 SWAP4 DUP5 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x3F6 JUMPI JUMPDEST DUP12 DUP4 LT EQ PUSH3 0x3E0 JUMPI DUP2 DUP5 DUP5 SWAP4 GT PUSH3 0x38C JUMPI JUMPDEST POP DUP11 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x327 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x31B JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP4 SSTORE JUMPDEST DUP7 MLOAD SWAP4 DUP5 GT PUSH3 0x305 JUMPI PUSH1 0x4 SWAP7 DUP8 SLOAD DUP4 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2FA JUMPI JUMPDEST DUP11 DUP3 LT EQ PUSH3 0x2E5 JUMPI DUP3 DUP2 GT PUSH3 0x29C JUMPI JUMPDEST POP DUP9 SWAP2 DUP6 GT PUSH1 0x1 EQ PUSH3 0x233 JUMPI DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x227 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x20F JUMPI DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP4 DUP2 DUP6 DIV EQ SWAP1 ISZERO OR ISZERO PUSH3 0x1FA JUMPI POP PUSH1 0xA DUP3 PUSH3 0x1D6 PUSH32 0x1D2D38BD8A2BBF569E5C5AB629156E01D52761E35F52DF2CBA12DA70E27BF8C9 SWAP5 CALLER PUSH3 0x426 JUMP JUMPDEST DIV PUSH3 0x1E3 DUP2 ADDRESS PUSH3 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD PUSH2 0xCF5 SWAP1 DUP2 PUSH3 0x4B9 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x132 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 DUP5 AND SWAP3 DUP8 PUSH1 0x0 MSTORE DUP5 DUP10 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP12 DUP10 DUP4 DUP4 LT PUSH3 0x284 JUMPI POP POP POP LT PUSH3 0x269 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x142 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x25A JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x246 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP9 ADD DUP11 SHR DUP3 ADD SWAP3 DUP13 DUP10 LT PUSH3 0x2DB JUMPI JUMPDEST ADD DUP10 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x2CE JUMPI POP POP PUSH3 0x115 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH3 0x2BE JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2B6 JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x103 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD4 JUMP JUMPDEST SWAP1 DUP9 DUP7 SWAP5 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP13 PUSH1 0x0 KECCAK256 SWAP3 DUP14 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x374 JUMPI POP POP DUP5 GT PUSH3 0x35B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xE6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x34D JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x33B JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD DUP12 SHR DUP3 ADD SWAP3 DUP14 DUP7 LT PUSH3 0x3D6 JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD DUP13 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x3C6 JUMPI POP POP PUSH3 0xBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH3 0x3B6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x3A9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xA9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x305 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH3 0x49F JUMPI PUSH1 0x2 SLOAD SWAP1 DUP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x489 JUMPI PUSH1 0x20 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D8A296 EQ PUSH2 0xA49 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0x8828C98 EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x6D07B7E5 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x8A877205 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xAE0140B4 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF1F959A6 EQ PUSH2 0x1A7 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x12E PUSH2 0xACD JUMP JUMPDEST SWAP1 PUSH2 0x137 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x18D JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLER DUP3 MSTORE PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x33B JUMPI TIMESTAMP LT PUSH2 0x32B JUMPI ADDRESS DUP4 MSTORE DUP3 DUP2 MSTORE PUSH9 0x3635C9ADC5DEA00000 SWAP2 DUP3 DUP2 DUP6 KECCAK256 SLOAD LT PUSH2 0x31C JUMPI CALLER DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE TIMESTAMP DUP2 DUP6 KECCAK256 SSTORE ADDRESS ISZERO PUSH2 0x306 JUMPI CALLER ISZERO PUSH2 0x2F0 JUMPI ADDRESS DUP5 MSTORE DUP4 DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP5 DUP4 DUP7 LT PUSH2 0x2CE JUMPI POP PUSH32 0x5D4F415C63CD8A5874D9D291CDD64CEC37E5DC236D90D659C958D109D78074B3 SWAP3 SWAP4 SWAP5 ADDRESS DUP7 MSTORE DUP6 DUP4 MSTORE PUSH9 0x3635C9ADC5DE9FFFFF NOT ADD DUP2 DUP7 KECCAK256 SSTORE CALLER DUP6 MSTORE DUP1 DUP6 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP4 DUP7 PUSH1 0x64 SWAP4 MLOAD SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE ADDRESS SWAP1 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0xC1336F85 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x313B8803 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x36C PUSH2 0xACD JUMP JUMPDEST PUSH2 0x374 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH32 0x1D2D38BD8A2BBF569E5C5AB629156E01D52761E35F52DF2CBA12DA70E27BF8C9 SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x3D8 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x3E3 DUP3 ADDRESS CALLER PUSH2 0xB73 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x415 PUSH2 0x40B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xB73 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x532 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x51F JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x503 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4AE JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x49B JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x497 SWAP3 MSTORE DUP3 PUSH2 0xAFE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x4EF JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x446 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x58D PUSH2 0xACD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x63C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63C JUMPI PUSH2 0x5F8 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CE PUSH2 0x660 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CE PUSH2 0x69C PUSH2 0xACD JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x6BB PUSH2 0xACD JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x6C8 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x73B JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x728 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x63C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63C JUMPI PUSH2 0x787 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x78F PUSH2 0xAE8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x7CB JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x415 DUP10 DUP10 DUP10 PUSH2 0xB73 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x833 JUMPI DUP2 ISZERO PUSH2 0x81C JUMPI CALLER ISZERO PUSH2 0x805 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x415 DUP8 PUSH2 0x7BD JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x897 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x910 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x8F9 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x941 PUSH2 0xB47 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x954 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH2 0xB73 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xA3F JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x51F JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x503 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9E9 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x49B JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x497 SWAP3 MSTORE DUP3 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0xA2B JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6E PUSH2 0xACD JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xABA JUMPI PUSH1 0x20 SWAP5 POP TIMESTAMP LT ISZERO SWAP2 DUP3 PUSH2 0xA9D JUMPI JUMPDEST POP POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH9 0x3635C9ADC5DEA00000 SWAP3 POP ADDRESS DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD LT ISZERO DUP4 DUP1 PUSH2 0xA95 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAE3 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAE3 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB33 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC38 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC1F JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xBED JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x15180 DUP1 DUP3 ADD SWAP3 SWAP2 DUP4 DUP2 GT PUSH2 0xCAB JUMPI DUP4 TIMESTAMP LT ISZERO PUSH2 0xCA4 JUMPI TIMESTAMP SWAP1 SUB ADD SWAP2 DUP3 GT PUSH2 0xC90 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x2F 0x21 0x2D 0x28 0xC8 LOG3 ADDMOD PUSH11 0x6405DF4ED8B17D0262A3E1 PUSH23 0x17537E255D14859886CC9A64736F6C6343000814003300 ","sourceMap":"355:3534:25:-:0;;;;-1:-1:-1;;355:3534:25;;-1:-1:-1;;;;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;355:3534:25;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;355:3534:25;;;;;;;;;;;;1648:13:6;355:3534:25;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;-1:-1:-1;355:3534:25;;;;-1:-1:-1;;;;355:3534:25;;;;;;;;;;;;;;;;;;;;1671:17:6;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;1107:10;1273:26:0;1269:95;;355:3534:25;;1107:10;-1:-1:-1;;;;;;355:3534:25;;;;;;;-1:-1:-1;;;;;355:3534:25;3052:40:0;-1:-1:-1;;3052:40:0;355:3534:25;;;;;;;;;;;;;;;;1107:10;355:3534;1107:10;1187:30;1417:27;1107:10;;1187:30;:::i;:::-;355:3534;1379:13;1372:4;;1379:13;:::i;:::-;355:3534;;;;;1417:27;355:3534;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;-1:-1:-1;355:3534:25;1269:95:0;355:3534:25;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;355:3534:25;;;1322:31:0;355:3534:25;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;-1:-1:-1;355:3534:25;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;-1:-1:-1;355:3534:25;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;-1:-1:-1;355:3534:25;;1671:17:6;355:3534:25;;-1:-1:-1;355:3534:25;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;-1:-1:-1;355:3534:25;;-1:-1:-1;355:3534:25;;;-1:-1:-1;355:3534:25;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;-1:-1:-1;355:3534:25;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;-1:-1:-1;;;;;355:3534:25;;;;;;;;;;:::o;7362:208:6:-;-1:-1:-1;;;;;355:3534:25;;7432:21:6;;7428:91;;6137:21;355:3534:25;;;;;;;;;;;6987:25:6;355:3534:25;6547:425:6;355:3534:25;6137:21:6;355:3534:25;;;;;;;;;;;;;;;;;;;;;6987:25:6;7362:208::o;355:3534:25:-;;;;7451:1:6;355:3534:25;;;;;7451:1:6;355:3534:25;7428:91:6;355:3534:25;;-1:-1:-1;;;7476:32:6;;7451:1;7476:32;;;355:3534:25;;;7476:32:6"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2765,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_5990":{"entryPoint":2792,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":2814,"id":null,"parameterSlots":2,"returnSlots":1},"fun_balanceOf":{"entryPoint":null,"id":500,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":2887,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getTimeUntilNextClaim":{"entryPoint":3153,"id":8563,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":2931,"id":644,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c90816301d8a29614610a495750806306fdde031461096e57806308828c9814610927578063095ea7b31461087e57806318160ddd1461085f57806323b872dd1461076c578063313ce5671461075057806340c10f19146106a15780636d07b7e51461067b57806370a082311461063f578063715018a6146105df57806376697640146105bb5780637d1d5d191461059d5780638a877205146105655780638da5cb5b1461053c57806395d89b411461041c578063a9059cbb146103eb578063ae0140b414610397578063dd62ed3e1461034e578063de5f72fd146101d9578063f1f959a6146101a75763f2fde38b1461011557600080fd5b346101a35760203660031901126101a35761012e610acd565b90610137610b47565b6001600160a01b0391821692831561018d575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101d557816003193601126101d55730600090815260208181526040909120549091905b9051908152f35b5080fd5b509190346101d557816003193601126101d5573382526020600681528183205462015180810180911161033b57421061032b57308352828152683635c9adc5dea000009182818520541061031c5733845260068252428185205530156103065733156102f05730845283825280842054948386106102ce57507f5d4f415c63cd8a5874d9d291cdd64cec37e5dc236d90d659c958d109d78074b3929394308652858352683635c9adc5de9fffff190181862055338552808520848154019055805184815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843092a3519283523392a280f35b8386606493519263391434e360e21b8452309084015260248301526044820152fd5b5163ec442f0560e01b8152808501849052602490fd5b51634b637e8f60e11b8152808501849052602490fd5b5163c1336f8560e01b81528490fd5b815163313b880360e11b81528490fd5b634e487b7160e01b845260118552602484fd5b5050346101d557806003193601126101d5578060209261036c610acd565b610374610ae8565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346101a35760203660031901126101a3577f1d2d38bd8a2bbf569e5c5ab629156e01d52761e35f52df2cba12da70e27bf8c99160209135906103d8610b47565b6103e3823033610b73565b51908152a180f35b5050346101d557806003193601126101d55760209061041561040b610acd565b6024359033610b73565b5160018152f35b509190346101d557816003193601126101d557805190828454600181811c90808316928315610532575b602093848410811461051f5783885290811561050357506001146104ae575b505050829003601f01601f191682019267ffffffffffffffff84118385101761049b5750829182610497925282610afe565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106104ef5750505050830101388080610465565b8054888601830152930192849082016104d9565b60ff1916878501525050151560051b8401019050388080610465565b634e487b7160e01b895260228a52602489fd5b91607f1691610446565b5050346101d557816003193601126101d55760055490516001600160a01b039091168152602090f35b5050346101d55760203660031901126101d55760209181906001600160a01b0361058d610acd565b1681526006845220549051908152f35b5050346101d557816003193601126101d55760209051620151808152f35b5050346101d557816003193601126101d55760209051683635c9adc5dea000008152f35b833461063c578060031936011261063c576105f8610b47565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101d55760203660031901126101d5576020906101ce610660610acd565b6001600160a01b031660009081526020819052604090205490565b5050346101d55760203660031901126101d5576020906101ce61069c610acd565b610c51565b5090346101a357806003193601126101a3576106bb610acd565b90602435916106c8610b47565b6001600160a01b031692831561073b5760025490838201809211610728575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b5050346101d557816003193601126101d5576020905160128152f35b50823461063c57606036600319011261063c57610787610acd565b61078f610ae8565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106107cb575b602088610415898989610b73565b86831061083357811561081c57331561080557508252600160209081528683203384528152918690209085900390558290610415876107bd565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101d557816003193601126101d5576020906002549051908152f35b50346101a357816003193601126101a357610897610acd565b602435903315610910576001600160a01b03169182156108f957508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b5050346101d557816003193601126101d557610941610b47565b3082528160205281205480610954575080f35b60055461096b91906001600160a01b031630610b73565b80f35b509190346101d557816003193601126101d55780519082600354600181811c90808316928315610a3f575b602093848410811461051f5783885290811561050357506001146109e957505050829003601f01601f191682019267ffffffffffffffff84118385101761049b5750829182610497925282610afe565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610a2b5750505050830101388080610465565b805488860183015293019284908201610a15565b91607f1691610999565b90508383346101d55760203660031901126101d5576001600160a01b03610a6e610acd565b168252600660205280822054620151808101809111610aba57602094504210159182610a9d575b505015158152f35b683635c9adc5dea000009250308152808552205410158380610a95565b634e487b7160e01b835260118552602483fd5b600435906001600160a01b0382168203610ae357565b600080fd5b602435906001600160a01b0382168203610ae357565b6020808252825181830181905290939260005b828110610b3357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610b11565b6005546001600160a01b03163303610b5b57565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315610c385716928315610c1f5760009083825281602052604082205490838210610bed575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b0316600090815260066020526040812054620151808082019291838111610cab5783421015610ca45742900301918211610c90575090565b634e487b7160e01b81526011600452602490fd5b5050905090565b634e487b7160e01b83526011600452602483fdfea2646970667358221220182f212d28c8a3086a6405df4ed8b17d0262a3e17617537e255d14859886cc9a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D8A296 EQ PUSH2 0xA49 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0x8828C98 EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x6D07B7E5 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x8A877205 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xAE0140B4 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF1F959A6 EQ PUSH2 0x1A7 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x12E PUSH2 0xACD JUMP JUMPDEST SWAP1 PUSH2 0x137 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x18D JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLER DUP3 MSTORE PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE DUP2 DUP4 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x33B JUMPI TIMESTAMP LT PUSH2 0x32B JUMPI ADDRESS DUP4 MSTORE DUP3 DUP2 MSTORE PUSH9 0x3635C9ADC5DEA00000 SWAP2 DUP3 DUP2 DUP6 KECCAK256 SLOAD LT PUSH2 0x31C JUMPI CALLER DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE TIMESTAMP DUP2 DUP6 KECCAK256 SSTORE ADDRESS ISZERO PUSH2 0x306 JUMPI CALLER ISZERO PUSH2 0x2F0 JUMPI ADDRESS DUP5 MSTORE DUP4 DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP5 DUP4 DUP7 LT PUSH2 0x2CE JUMPI POP PUSH32 0x5D4F415C63CD8A5874D9D291CDD64CEC37E5DC236D90D659C958D109D78074B3 SWAP3 SWAP4 SWAP5 ADDRESS DUP7 MSTORE DUP6 DUP4 MSTORE PUSH9 0x3635C9ADC5DE9FFFFF NOT ADD DUP2 DUP7 KECCAK256 SSTORE CALLER DUP6 MSTORE DUP1 DUP6 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 ADDRESS SWAP3 LOG3 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP4 DUP7 PUSH1 0x64 SWAP4 MLOAD SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE ADDRESS SWAP1 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0xC1336F85 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x313B8803 PUSH1 0xE1 SHL DUP2 MSTORE DUP5 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x36C PUSH2 0xACD JUMP JUMPDEST PUSH2 0x374 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH32 0x1D2D38BD8A2BBF569E5C5AB629156E01D52761E35F52DF2CBA12DA70E27BF8C9 SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x3D8 PUSH2 0xB47 JUMP JUMPDEST PUSH2 0x3E3 DUP3 ADDRESS CALLER PUSH2 0xB73 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x415 PUSH2 0x40B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xB73 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x532 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x51F JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x503 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4AE JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x49B JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x497 SWAP3 MSTORE DUP3 PUSH2 0xAFE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x4EF JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x446 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x58D PUSH2 0xACD JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x63C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x63C JUMPI PUSH2 0x5F8 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CE PUSH2 0x660 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CE PUSH2 0x69C PUSH2 0xACD JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x6BB PUSH2 0xACD JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x6C8 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x73B JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x728 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x63C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x63C JUMPI PUSH2 0x787 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x78F PUSH2 0xAE8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x7CB JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x415 DUP10 DUP10 DUP10 PUSH2 0xB73 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x833 JUMPI DUP2 ISZERO PUSH2 0x81C JUMPI CALLER ISZERO PUSH2 0x805 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x415 DUP8 PUSH2 0x7BD JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x897 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x910 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x8F9 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x941 PUSH2 0xB47 JUMP JUMPDEST ADDRESS DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x954 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH2 0xB73 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xA3F JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x51F JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x503 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9E9 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x49B JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x497 SWAP3 MSTORE DUP3 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0xA2B JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x465 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6E PUSH2 0xACD JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 DUP3 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xABA JUMPI PUSH1 0x20 SWAP5 POP TIMESTAMP LT ISZERO SWAP2 DUP3 PUSH2 0xA9D JUMPI JUMPDEST POP POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH9 0x3635C9ADC5DEA00000 SWAP3 POP ADDRESS DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD LT ISZERO DUP4 DUP1 PUSH2 0xA95 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAE3 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAE3 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB33 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB5B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC38 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC1F JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xBED JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x15180 DUP1 DUP3 ADD SWAP3 SWAP2 DUP4 DUP2 GT PUSH2 0xCAB JUMPI DUP4 TIMESTAMP LT ISZERO PUSH2 0xCA4 JUMPI TIMESTAMP SWAP1 SUB ADD SWAP2 DUP3 GT PUSH2 0xC90 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x2F 0x21 0x2D 0x28 0xC8 LOG3 ADDMOD PUSH11 0x6405DF4ED8B17D0262A3E1 PUSH23 0x17537E255D14859886CC9A64736F6C6343000814003300 ","sourceMap":"355:3534:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;355:3534:25;;;;2627:22:0;;2623:91;;355:3534:25;;3004:6:0;355:3534:25;;;;;;;;3004:6:0;355:3534:25;;3052:40:0;;;;355:3534:25;;2623:91:0;355:3534:25;-1:-1:-1;;;2672:31:0;;;;;355:3534:25;;;;;2672:31:0;355:3534:25;;;;;;;;;;;;;;;;;;2878:4;3024:9:6;355:3534:25;;;;;;;;;;;;;;2878:4;2860:24;355:3534;;;;;;;;;;;;;;;;;;;;;;;;;1686:10;355:3534;;;1670:15;355:3534;;;;;;549:8;355:3534;;;;;;;1652:15;:63;1648:117;;1837:4;355:3534;;;;;473:13;355:3534;;;;;;1819:40;1815:91;;1686:10;355:3534;;1670:15;355:3534;;1652:15;355:3534;;;;1837:4;5380:18:6;5376:86;;1686:10:25;5475:16:6;5471:86;;1837:4:25;355:3534;;;;;;;;;6244:19:6;;;;6240:115;;1837:4:25;2159:40;1837:4;;;;355:3534;;;;;;;;;;;;1686:10;355:3534;;;;;;;;;;;;;;;;1686:10;1837:4;6987:25:6;1837:4:25;;6987:25:6;;355:3534:25;;;;1686:10;2159:40;;355:3534;;6240:115:6;355:3534:25;;;;;6290:50:6;;;;;;1837:4:25;6290:50:6;;;355:3534:25;;;;;;;;;6290:50:6;5471:86;355:3534:25;-1:-1:-1;;;5514:32:6;;;;;355:3534:25;;;;;5514:32:6;5376:86;355:3534:25;-1:-1:-1;;;5421:30:6;;;;;355:3534:25;;;;;5421:30:6;1815:91:25;355:3534;-1:-1:-1;;;1882:13:25;;355:3534;;1882:13;1648:117;355:3534;;-1:-1:-1;;;1738:16:25;;355:3534;;1738:16;355:3534;-1:-1:-1;;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;2700:20;355:3534;;;;1500:62:0;;;:::i;:::-;2678:6:25;2671:4;;2651:10;2678:6;:::i;:::-;355:3534;;;;2700:20;355:3534;;;;;;;;;;;;;;;;;;3388:5:6;355:3534:25;;:::i;:::-;;;735:10:10;;3388:5:6;:::i;:::-;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;355:3534:25;;;;;-1:-1:-1;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;355:3534:25;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;-1:-1:-1;;355:3534:25;;;;;;;;-1:-1:-1;355:3534:25;;;;;;-1:-1:-1;;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;355:3534:25;;;-1:-1:-1;;;;;355:3534:25;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;;;-1:-1:-1;;;;;355:3534:25;;:::i;:::-;;;;621:50;355:3534;;;;;;;;;;;;;;;;;;;;;;;;;;;549:8;355:3534;;;;;;;;;;;;;;;;;;;;473:13;355:3534;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;355:3534:25;;-1:-1:-1;;;;;;355:3534:25;;;;;;;-1:-1:-1;;;;;355:3534:25;3052:40:0;355:3534:25;;3052:40:0;355:3534:25;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;355:3534:25;3024:9:6;355:3534:25;;;;;;;;;;;;2933:116:6;355:3534:25;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;355:3534:25;;7432:21:6;;7428:91;;6137:21;355:3534:25;;;;;;;;;;;;;6987:25:6;355:3534:25;;;6137:21:6;355:3534:25;;;;;;;;;;;;;;;;;;;;6987:25:6;355:3534:25;;;-1:-1:-1;;;355:3534:25;;;;;;;;7428:91:6;355:3534:25;;;;7476:32:6;;;;;;;;355:3534:25;7476:32:6;355:3534:25;;;;;;;;;;;;;;;;;2761:2:6;355:3534:25;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:10;355:3534:25;;;;;;;;10503:17:6;;;10484:36;;10480:309;;355:3534:25;;4890:5:6;;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:10;9815:21:6;9811:90;;-1:-1:-1;355:3534:25;;;;;;;;;;735:10:10;355:3534:25;;;;;;;;;;;;;;;;4890:5:6;10480:309;;;9811:90;355:3534:25;;-1:-1:-1;;;9859:31:6;;;;;355:3534:25;;;;;9859:31:6;9713:89;355:3534:25;;-1:-1:-1;;;9759:32:6;;;;;355:3534:25;;;;;9759:32:6;10536:130;355:3534:25;;-1:-1:-1;;;10591:60:6;;735:10:10;10591:60:6;;;355:3534:25;;;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;10591:60:6;;;355:3534:25;;;;;;;;;;;;;;;;2881:12:6;355:3534:25;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:10;;9717:19:6;9713:89;;-1:-1:-1;;;;;355:3534:25;;9815:21:6;;9811:90;;735:10:10;;;355:3534:25;735:10:10;;355:3534:25;;;;;;;;;;;;;;;;;;;;9989:31:6;735:10:10;;9989:31:6;;355:3534:25;;;;;9811:90:6;355:3534:25;;-1:-1:-1;;;9859:31:6;;;;;355:3534:25;;;;;9859:31:6;9713:89;355:3534:25;;-1:-1:-1;;;9759:32:6;;;;;355:3534:25;;;;;9759:32:6;355:3534:25;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3781:4:25;355:3534;;;;;;;;3801:11;3797:84;;355:3534;;;3797:84;1710:6:0;355:3534:25;3862:7;;355:3534;-1:-1:-1;;;;;355:3534:25;3781:4;3862:7;:::i;:::-;355:3534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;355:3534:25;;;;;-1:-1:-1;;355:3534:25;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;355:3534:25;;;;-1:-1:-1;;;;;355:3534:25;;:::i;:::-;;;;3491:15;355:3534;;;;;;549:8;355:3534;;;;;;;;3472:15;;;:58;;:119;;;;355:3534;;;;;;;;3472:119;473:13;3568:4;;;355:3534;;;;;;;3550:41;;3472:119;;;;355:3534;-1:-1:-1;;;355:3534:25;;;;;;;;;;;;-1:-1:-1;;;;;355:3534:25;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;355:3534:25;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1796:162:0;1710:6;355:3534:25;-1:-1:-1;;;;;355:3534:25;735:10:10;1855:23:0;1851:101;;1796:162::o;1851:101::-;355:3534:25;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;355:3534:25;;;1901:40:0;5297:300:6;;-1:-1:-1;;;;;355:3534:25;;;;5380:18:6;;5376:86;;355:3534:25;5475:16:6;;;5471:86;;5997:540;355:3534:25;;;;;;;;;;;6244:19:6;;;;6240:115;;355:3534:25;;;;;6987:25:6;355:3534:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:6;5297:300::o;6240:115::-;355:3534:25;;-1:-1:-1;;;6290:50:6;;-1:-1:-1;;;;;355:3534:25;;;;6290:50:6;;;355:3534:25;;;;;;;;;;;;;;;;10591:60:6;5471:86;355:3534:25;;-1:-1:-1;;;5514:32:6;;5396:1;5514:32;;;355:3534:25;;;5514:32:6;5376:86;355:3534:25;;-1:-1:-1;;;5421:30:6;;5396:1;5421:30;;;355:3534:25;;;5421:30:6;3006:273:25;-1:-1:-1;;;;;355:3534:25;-1:-1:-1;355:3534:25;;;3113:15;355:3534;;;;;;549:8;355:3534;;;;-1:-1:-1;355:3534:25;;;;;3166:15;;:28;;3162:67;;3166:15;355:3534;;;;;;;;3238:34;3006:273;:::o;355:3534::-;-1:-1:-1;;;355:3534:25;;;;;;;;3162:67;3210:8;;;;;:::o;355:3534::-;-1:-1:-1;;;355:3534:25;;;;;;;"},"methodIdentifiers":{"FAUCET_AMOUNT()":"76697640","FAUCET_COOLDOWN()":"7d1d5d19","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","canClaimFaucet(address)":"01d8a296","decimals()":"313ce567","faucet()":"de5f72fd","fundFaucet(uint256)":"ae0140b4","getFaucetBalance()":"f1f959a6","getTimeUntilNextClaim(address)":"6d07b7e5","lastFaucetClaim(address)":"8a877205","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdrawFaucetFunds()":"08828c98"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FaucetCooldown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FaucetEmpty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FaucetClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FaucetFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FAUCET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FAUCET_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canClaimFaucet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFaucetBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTimeUntilNextClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFaucetClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFaucetFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple ERC20 token for testing purposes with faucet functionality\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FaucetCooldown()\":[{\"details\":\"Custom errors\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"FaucetClaimed(address,uint256)\":{\"details\":\"Events\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"canClaimFaucet(address)\":{\"params\":{\"user\":\"Address to check\"}},\"constructor\":{\"details\":\"Constructor - creates initial supply and sets up faucet\",\"params\":{\"initialSupply\":\"Initial token supply (without decimals)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"faucet()\":{\"details\":\"Anyone can call this to get test tokens\"},\"fundFaucet(uint256)\":{\"params\":{\"amount\":\"Amount to fund faucet with\"}},\"getTimeUntilNextClaim(address)\":{\"params\":{\"user\":\"Address to check\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount to mint (with decimals)\",\"to\":\"Address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"FAUCET_AMOUNT\":{\"details\":\"Faucet configuration\"},\"lastFaucetClaim\":{\"details\":\"Mapping to track last faucet claim time\"}},\"title\":\"DummyUSDT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canClaimFaucet(address)\":{\"notice\":\"Check if user can claim from faucet\"},\"faucet()\":{\"notice\":\"Claim tokens from faucet (once per 24 hours)\"},\"fundFaucet(uint256)\":{\"notice\":\"Fund the faucet (only owner)\"},\"getFaucetBalance()\":{\"notice\":\"Get faucet balance\"},\"getTimeUntilNextClaim(address)\":{\"notice\":\"Get time until next faucet claim for user\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens (only owner)\"},\"withdrawFaucetFunds()\":{\"notice\":\"Emergency withdrawal of faucet funds (only owner)\"}},\"notice\":\"Compatible with Kaia testnet, includes built-in faucet for easy testing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DummyUSDT.sol\":\"DummyUSDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DummyUSDT.sol\":{\"keccak256\":\"0xf2ef9632c94c8108fc34b7f2b8f56434004ae0bdd2390b37ffae8e480d75a38f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5091a4817a7b858e3bb612d0a17d0e5b7340bbc597ab22e40104e2485c03492d\",\"dweb:/ipfs/QmSo21xc4pbZdMku9RCDnrJHbRC1fXBJfZJaxYWw2t2uob\"]}},\"version\":1}"}},"contracts/InvoiceSubscription.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InvoiceSubscription.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/InvoiceSubscription.sol\":{\"keccak256\":\"0xd6402344849dbd6066a3dd899cf409f2e9c2caf1913c9a221ef88a278b17b1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4abef740800ef6670a1a257c7588e1cce8bc7245a444ed706e9f6d4d59044ffe\",\"dweb:/ipfs/QmZxNdaccntg1653Huw85srw8F8Tzc3y5qzXQHiE52ikac\"]}},\"version\":1}"},"InvoiceSubscription":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidConsent","type":"error"},{"inputs":[],"name":"InvalidInvoice","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvoiceAlreadyReleased","type":"error"},{"inputs":[],"name":"InvoiceExpired","type":"error"},{"inputs":[],"name":"InvoiceNotExpired","type":"error"},{"inputs":[],"name":"NoContribution","type":"error"},{"inputs":[],"name":"NonceUsed","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[],"name":"SubscriptionExpired","type":"error"},{"inputs":[],"name":"SubscriptionNotDue","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AutomationTriggered","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"invoiceAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"InvoiceCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalContributed","type":"uint256"}],"name":"InvoiceFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InvoiceRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InvoiceReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionKey","type":"bytes32"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPerInterval","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"intervalSeconds","type":"uint256"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionKey","type":"bytes32"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nextDue","type":"uint256"}],"name":"SubscriptionPayment","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"SUBSCRIPTION_CONSENT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allInvoiceIds","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"invoiceAmount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"createInvoice","outputs":[{"internalType":"bytes32","name":"invoiceId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountPerInterval","type":"uint256"},{"internalType":"uint256","name":"intervalSeconds","type":"uint256"},{"internalType":"uint256","name":"startTimestamp","type":"uint256"},{"internalType":"uint256","name":"endTimestamp","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"internalType":"struct InvoiceSubscription.SubscriptionConsent","name":"consent","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"createSubscriptionWithConsent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"invoiceId","type":"bytes32"}],"name":"fundInvoice","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"invoiceId","type":"bytes32"},{"internalType":"address","name":"contributor","type":"address"}],"name":"getContribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"invoiceId","type":"bytes32"}],"name":"getInvoice","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"invoiceAmount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"totalContributed","type":"uint256"},{"internalType":"bool","name":"released","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getInvoiceIdAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalInvoiceCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"invoiceTracked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"invoices","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"invoiceAmount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"totalContributed","type":"uint256"},{"internalType":"bool","name":"released","type":"bool"},{"internalType":"bool","name":"refunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionKey","type":"bytes32"}],"name":"pullSubscriptionPayment","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"invoiceId","type":"bytes32"}],"name":"requestRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"subscriptions","outputs":[{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountPerInterval","type":"uint256"},{"internalType":"uint256","name":"intervalSeconds","type":"uint256"},{"internalType":"uint256","name":"nextDue","type":"uint256"},{"internalType":"uint256","name":"endTimestamp","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"uint256","name":"totalPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"usedNonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"finalize_allocation":{"entryPoint":461,"id":null,"parameterSlots":1,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":988,"id":1899,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_3097":{"entryPoint":511,"id":1899,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"61016060409080825234620001c8576200001981620001cd565b6013815260208101907f496e766f696365537562736372697074696f6e0000000000000000000000000082528251916200005383620001cd565b600183526020830192603160f81b8452600093600185553315620001b05760018054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3620000be84620001ff565b92610120938452620000d083620003dc565b94610140958652519020918260e052519020610100958187524660a05280519160208301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f85528284015260608301524660808301523060a083015260a0825260c082019582871060018060401b038811176200019c57508590525190206080523060c052611eb8938462000592853960805184611be1015260a05184611c9c015260c05184611bab015260e05184611c3001525183611c56015251826106b3015251816106dc0152f35b634e487b7160e01b81526041600452602490fd5b8551631e4fbdf760e01b815260048101869052602490fd5b600080fd5b604081019081106001600160401b03821117620001e957604052565b634e487b7160e01b600052604160045260246000fd5b8051602090818110156200029c5750601f8251116200023b57808251920151908083106200022c57501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000282575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200025e565b906001600160401b038211620001e957600254926001938481811c91168015620003d1575b83821014620003bb57601f811162000381575b5081601f841160011462000315575092829391839260009462000309575b50501b916000199060031b1c19161760025560ff90565b015192503880620002f2565b919083601f198116600260005284600020946000905b888383106200036657505050106200034c575b505050811b0160025560ff90565b015160001960f88460031b161c191690553880806200033e565b8587015188559096019594850194879350908101906200032b565b600260005284601f84600020920160051c820191601f860160051c015b828110620003ae575050620002d4565b600081550185906200039e565b634e487b7160e01b600052602260045260246000fd5b90607f1690620002c1565b805160209190828110156200046c575090601f8251116200040b57808251920151908083106200022c57501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000452575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200042e565b6001600160401b038111620001e9576003928354926001938481811c9116801562000586575b83821014620003bb57601f81116200054d575b5081601f8411600114620004e45750928293918392600094620004d8575b50501b9160001990841b1c191617905560ff90565b015192503880620004c3565b919083601f1981168760005284600020946000905b8883831062000532575050501062000519575b505050811b01905560ff90565b015160001983861b60f8161c191690553880806200050c565b858701518855909601959485019487935090810190620004f9565b8560005284601f84600020920160051c820191601f860160051c015b82811062000579575050620004a5565b6000815501859062000569565b90607f16906200049256fe608060408181526004918236101561001657600080fd5b600090813560e01c90816329433dea146114f1575080633d478ba9146111c65780633f4ba83a1461115657806341508efa14610f7957806342f144be14610f4c5780634585e33b14610de15780634dd9d95514610c145780635c975abb14610bed5780636693643f14610ba15780636a8a689414610b5a5780636e04ff0d1461099e578063715018a614610941578063775274a1146107f15780638456cb591461079057806384b0196e1461069b5780638da5cb5b1461067257806394259c6c146105df578063cb802c8b1461055a578063dc93ed781461051b578063dedc0b04146104b4578063e739d90d1461047b578063e9c9bd9914610246578063f2fde38b146101b75763f8a8a0761461012c57600080fd5b346101b45760203660031901126101b4578235815260208381529082902080546001820154600283015460038401549684015460059094015495516001600160a01b039384168152948501919091521660408301526060820193909352608081019290925260ff808216151560a084015260089190911c16151560c082015260e090f35b0390f35b80fd5b509134610242576020366003190112610242576101d2611540565b906101db6115e3565b6001600160a01b0391821692831561022c575050600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090602080600319360112610242578335916102606119f2565b6102686118eb565b82845284825280842080549091906001600160a01b039081161561046b57600583015460ff811690811561045d575b5061044d576003830154421161043d57600283015416806103be575034905b81156103af5760068301338752808552818720541561034d575b8596979160019596927f86823b9f3f8a793cb18f1212a5fe5661d166ffe64228e2e3c43dc38959fba8dc92338b528852818a2061030e86825461190c565b9055850161031d85825461190c565b978880925582519586528501523393a30154111561033e575b506001815580f35b61034790611d30565b38610336565b60078401805490600160401b82101561039c57600182018082558210156103895788528588200180546001600160a01b031916331790556102d0565b634e487b7160e01b895260328a52602489fd5b634e487b7160e01b895260418a52602489fd5b5163162908e360e11b81528690fd5b908051636eb1769f60e11b815233888201523060248201528481604481865afa8015610433578790610400575b6103fb915080933090339061192f565b6102b6565b508481813d831161042c575b6104168183611695565b81010312610428576103fb90516103eb565b8680fd5b503d61040c565b82513d89823e3d90fd5b8151630f04e9cf60e41b81528790fd5b815163087f421960e41b81528790fd5b60ff915060081c1638610297565b81516349ff0c8f60e11b81528790fd5b5091346102425760203660031901126102425735916007548310156101b457506104a6602092611596565b91905490519160031b1c8152f35b508290346101b45760203660031901126101b457508035906007548210156104e2576020836104a684611596565b606490602084519162461bcd60e51b83528201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152fd5b509034610556578160031936011261055657602090517f3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b95712102818152f35b5080fd5b50346101b45760203660031901126101b4578235815260208381529082902080546001820154600283015460038401549684015460059094015495516001600160a01b039384168152948501919091521660408301526060820193909352608081019290925260ff808216151560a084015260089190911c16151560c082015260e090f35b509190346102425760203660031901126102425780610120938335815260066020522060018060a01b0391828254169383600184015416936002840154169060038401549084015490600585015492600686015494600860ff600789015416970154978151998a5260208a01528801526060870152608086015260a085015260c0840152151560e0830152610100820152f35b50903461055657816003193601126105565760015490516001600160a01b039091168152602090f35b509034610556578160031936011261055657906106d77f00000000000000000000000000000000000000000000000000000000000000006116cf565b6107007f00000000000000000000000000000000000000000000000000000000000000006117f9565b9183519161070d8361165d565b8183526107428551958695600f60f81b875261073560209460e0868a015260e0890190611556565b9187830390880152611556565b904660608601523060808601528260a086015284820360c08601528080855193848152019401925b82811061077957505050500390f35b83518552869550938101939281019260010161076a565b50903461055657816003193601126105565760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916107ce6115e3565b6107d66118eb565b6001805460ff60a01b1916600160a01b17905551338152a180f35b50919034610242576020366003190112610242578135906108106119f2565b818452826020528084209260018060a01b038085541615610932576005850194855460ff8116908115610924575b5061091457600381015442111561090457600681019533885286602052848820549687156108f457338952602052848820889055805461ff00191661010017905560020154859116806108e357508580808093335af161089c611cc2565b50156108d557505b519182527fef652412e5d49b8285c2154153b00be5e175328caf6225b8a37db5712fb62a1a60203393a36001815580f35b90516312171d8360e31b8152fd5b6108ef92503390611cf2565b6108a4565b8551631971fbf360e21b81528590fd5b83516330f53a1f60e01b81528390fd5b835163087f421960e41b81528390fd5b60ff915060081c163861083e565b5090516349ff0c8f60e11b8152fd5b50346101b457806003193601126101b45761095a6115e3565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461024257602092836003193601126101b457823567ffffffffffffffff8111610556576109d2903690850161150d565b50506007546109e081611e2d565b908294835b828110610abf57505084159050610aa3576001918294610a0481611e2d565b92825b828110610a79575050508351928484018780860152835180915287606086019401925b88828210610a6657505050505090610a4f816101b0949303601f198101835282611695565b905b80805195869515158652850152830190611556565b8451865294850194909301928201610a2a565b80610a8a610a9b9284989698611e6e565b51610a958288611e6e565b52611e5f565b949294610a07565b5091506101b09082815190610ab78261165d565b815290610a51565b610ac881611596565b9054600391821b1c90818752838a528787209060058201549160ff808416159384610b4c575b505082610b3a575b82610b2c575b5050610b12575b50610b0d90611e5f565b6109e5565b87610b2591610a95610b0d949a88611e6e565b9690610b03565b015442111590503880610afc565b85810154600182015411159250610af6565b60081c161592503880610aee565b50903461055657806003193601126105565760209160ff9082906001600160a01b03610b84611540565b168152600585528181206024358252855220541690519015158152f35b5091346102425781600319360112610242576024356001600160a01b0381169190829003610be957928291846020953583528552600683832001908252845220549051908152f35b8380fd5b50903461055657816003193601126105565760209060ff60015460a01c1690519015158152f35b50903461055657608036600319011261055657610c2f611540565b92604435906024356001600160a01b038084168085036104285760643591610c556118eb565b88169485158015610dd9575b610dc95742831115610dc95786516020998a8201926001600160601b0319809260601b16845286603484015260601b16605482015283606882015242608882015260888152610caf81611641565b519020968794858252808a528360038984206001600160601b0360a01b8a81835416178255886001830155866002830191825416179055015560088a5260ff888320541615610d34575b5050855192835287830152818501527f8f26321c4618ec8c97913b89682571e04749f4b1788dba40abd70fdcee9a600590606090a351908152f35b90919293945060075490600160401b821015610db657509260609287899693610d848760017f8f26321c4618ec8c97913b89682571e04749f4b1788dba40abd70fdcee9a60059901600755611596565b81549060031b908a821b91600019901b191617905587815260088c5220600160ff198254161790559193819350610cf9565b634e487b7160e01b835260419052602482fd5b86516349ff0c8f60e11b81528590fd5b508315610c61565b50346101b457602091826003193601126105565767ffffffffffffffff928435848111610be957610e15903690870161150d565b81959101948281870312610f48578035918211610f4857019484601f87011215610be957853594610e45866116b7565b96610e5285519889611695565b8688528388019084600598891b8201019283116104285784809101915b838310610f385750505050835b8651811015610f345780610e93610ec99289611e6e565b51808752838552858720888101549060ff808316159283610f26575b505081610f14575b81610f05575b50610ece575b50611e5f565b610e7c565b610ed781611d30565b7f1295fc1476ea13733f3084effff7a9178daf713e97031b21ed33bf8f4e71a452858751428152a238610ec3565b60039150015442111538610ebd565b85810154600182015411159150610eb7565b60081c161591503880610eaf565b8480f35b8235815291810191859101610e6f565b8480fd5b509134610242576020366003190112610242578160209360ff923581526008855220541690519015158152f35b5091906020366003190112610242578135610f926119f2565b610f9a6118eb565b80845260066020528184209160ff6007840154161561114757600683015442116111385760058301938454421061112a5760028401546001600160a01b0391908216806110e357506003850180548034106110d35788808080938760018c0154165af1611005611cc2565b50156110c4575480341161107e575b50906110477f3c383309b20dfae2b367289760fd90de73b4fce8f3a3667600a9a66b6adef5bc93925b860154875461190c565b8096556003850154906008860161105f83825461190c565b9055600181875416960154169582519182526020820152a46001815580f35b34033481116110b1578780808093335af1611097611cc2565b50156110a35738611014565b82516312171d8360e31b8152fd5b634e487b7160e01b885260118252602488fd5b5082516312171d8360e31b8152fd5b845163162908e360e11b81528390fd5b8291611125611047927f3c383309b20dfae2b367289760fd90de73b4fce8f3a3667600a9a66b6adef5bc96958954168560018b0154169060038b01549261192f565b61103d565b905163856a757760e01b8152fd5b5163893dcecf60e01b81528390fd5b51630df0f4e960e41b81528390fd5b5091346102425782600319360112610242576111706115e3565b6001549060ff8260a01c16156111b8575060ff60a01b1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b5091346102425736600319016101208112610be957610100136102425767ffffffffffffffff9161010435838111610f4857611205903690840161150d565b909361120f6119f2565b6112176118eb565b61121f611a15565b611227611a2b565b92611230611a41565b92606435966084359860c4359360e4359589518a6020998a8301937f3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b9571210281855260018060a01b039c8d9384809316908601521660608401521660808201528b60a08201528c60c082015260a435958660e083015287610100830152886101208301526101208252610140820190828210908211176114de578b525190206042906112d6611ba8565b908b519161190160f01b835260028301526022820152206112f6826118cf565b906113038b519283611695565b8282528d36848601116101b457898461132795611330978387013784010152611a57565b90929192611b23565b868061133a611a15565b169116036114d0578561134b611a15565b168a5260058552868a20848b52855260ff878b2054166114c2578242116114b4579260016007898896958a98958d8f9c98898b9a8f7f50994af435709064071e6160587eb110aee99f876e414493ea76df89d06e1b4d9f6113aa611a15565b16815260058c528181208b82528c52209860ff1999898b8254161790558a6113d0611a15565b916113d9611a2b565b6113e1611a41565b8551938401946001600160601b03199283809260601b16875260601b16603485015260601b166048830152605c820152605c815261141e8161160f565b5190209e8f815260068b5220948a611434611a15565b166001600160601b0360a01b9081885416178755611450611a2b565b8c8a8901911682825416179055611465611a41565b908c600289019216908254161790556003860155840155600583015560068201550191825416179055611496611a15565b9761149f611a2b565b91855198895288015216951693a46001815580f35b865163893dcecf60e01b8152fd5b8651631f6d5aef60e01b8152fd5b8651638baa579f60e01b8152fd5b634e487b7160e01b8f526041865260248ffd5b9050346105565781600319360112610556576020906007548152f35b9181601f8401121561153b5782359167ffffffffffffffff831161153b576020838186019501011161153b57565b600080fd5b600435906001600160a01b038216820361153b57565b919082519283825260005b848110611582575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611561565b6007548110156115cd5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b6001546001600160a01b031633036115f757565b60405163118cdaa760e01b8152336004820152602490fd5b6080810190811067ffffffffffffffff82111761162b57604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff82111761162b57604052565b6020810190811067ffffffffffffffff82111761162b57604052565b6040810190811067ffffffffffffffff82111761162b57604052565b90601f8019910116810190811067ffffffffffffffff82111761162b57604052565b67ffffffffffffffff811161162b5760051b60200190565b60ff811461170d5760ff811690601f82116116fb57604051916116f183611679565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600060025490600182811c908084169384156117ef575b60209485841081146117db57838752869493929181156117bb575060011461175c575b505061175992500382611695565b90565b9093915060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000915b8183106117a35750506117599350820101388061174b565b8554878401850152948501948694509183019161178b565b91505061175994925060ff191682840152151560051b820101388061174b565b634e487b7160e01b85526022600452602485fd5b91607f1691611728565b60ff811461181b5760ff811690601f82116116fb57604051916116f183611679565b50604051600060035490600182811c908084169384156118c5575b60209485841081146117db57838752869493929181156117bb575060011461186657505061175992500382611695565b9093915060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000915b8183106118ad5750506117599350820101388061174b565b85548784018501529485019486945091830191611895565b91607f1691611836565b67ffffffffffffffff811161162b57601f01601f191660200190565b60ff60015460a01c166118fa57565b60405163d93c066560e01b8152600490fd5b9190820180921161191957565b634e487b7160e01b600052601160045260246000fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815260a081019181831067ffffffffffffffff84111761162b576119889260405261198a565b565b906000602091828151910182855af1156119e6576000513d6119dd57506001600160a01b0381163b155b6119bb5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156119b4565b6040513d6000823e3d90fd5b600260005414611a03576002600055565b604051633ee5aeb560e01b8152600490fd5b6004356001600160a01b038116810361153b5790565b6024356001600160a01b038116810361153b5790565b6044356001600160a01b038116810361153b5790565b8151919060418303611a8857611a8192506020820151906060604084015193015160001a90611a93565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611b1757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611b0b5780516001600160a01b03811615611b0257918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015611b925780611b35575050565b60018103611b4f5760405163f645eedf60e01b8152600490fd5b60028103611b705760405163fce698f760e01b815260048101839052602490fd5b600314611b7a5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611c99575b15611c03577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611c9381611641565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611bda565b3d15611ced573d90611cd3826118cf565b91611ce16040519384611695565b82523d6000602084013e565b606090565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815261198891611d2b8261160f565b61198a565b6000908082526004602052604082209160058301805460ff81168015611e20575b611e195760ff1916600117905560028301546001600160a01b039190821680611dda5750808080848754166004880154905af1611d8c611cc2565b5015611dc857602060047f133405e74fa883cc1e7a54282140c2473da655a05387dae06a5c0da4c7565829925b855416940154604051908152a3565b6040516312171d8360e31b8152600490fd5b6020915082611e146004927f133405e74fa883cc1e7a54282140c2473da655a05387dae06a5c0da4c7565829958854168489015491611cf2565b611db9565b5050505050565b5060ff8160081c16611d51565b90611e37826116b7565b611e446040519182611695565b8281528092611e55601f19916116b7565b0190602036910137565b60001981146119195760010190565b80518210156115cd5760209160051b01019056fea2646970667358221220995f2ed8ae44ccaf1baf185cb1c6bed7c0f928fea99818f8b8e189c5d99c244164736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x1C8 JUMPI PUSH3 0x19 DUP2 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x496E766F696365537562736372697074696F6E00000000000000000000000000 DUP3 MSTORE DUP3 MLOAD SWAP2 PUSH3 0x53 DUP4 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x31 PUSH1 0xF8 SHL DUP5 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 DUP6 SSTORE CALLER ISZERO PUSH3 0x1B0 JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP8 DUP1 LOG3 PUSH3 0xBE DUP5 PUSH3 0x1FF JUMP JUMPDEST SWAP3 PUSH2 0x120 SWAP4 DUP5 MSTORE PUSH3 0xD0 DUP4 PUSH3 0x3DC JUMP JUMPDEST SWAP5 PUSH2 0x140 SWAP6 DUP7 MSTORE MLOAD SWAP1 KECCAK256 SWAP2 DUP3 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x100 SWAP6 DUP2 DUP8 MSTORE CHAINID PUSH1 0xA0 MSTORE DUP1 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP6 MSTORE DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP6 DUP3 DUP8 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP9 GT OR PUSH3 0x19C JUMPI POP DUP6 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH2 0x1EB8 SWAP4 DUP5 PUSH3 0x592 DUP6 CODECOPY PUSH1 0x80 MLOAD DUP5 PUSH2 0x1BE1 ADD MSTORE PUSH1 0xA0 MLOAD DUP5 PUSH2 0x1C9C ADD MSTORE PUSH1 0xC0 MLOAD DUP5 PUSH2 0x1BAB ADD MSTORE PUSH1 0xE0 MLOAD DUP5 PUSH2 0x1C30 ADD MSTORE MLOAD DUP4 PUSH2 0x1C56 ADD MSTORE MLOAD DUP3 PUSH2 0x6B3 ADD MSTORE MLOAD DUP2 PUSH2 0x6DC ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1E9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x29C JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x23B JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x22C JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x282 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x25E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x1E9 JUMPI PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x3D1 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3BB JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x381 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x315 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x309 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x2F2 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x366 JUMPI POP POP POP LT PUSH3 0x34C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x33E JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x32B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x3AE JUMPI POP POP PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x39E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x2C1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0x46C JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x40B JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x22C JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x452 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x1E9 JUMPI PUSH1 0x3 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x586 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3BB JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x54D JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x4E4 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x4D8 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x4C3 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x532 JUMPI POP POP POP LT PUSH3 0x519 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x50C JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x4F9 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x579 JUMPI POP POP PUSH3 0x4A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x569 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x492 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x29433DEA EQ PUSH2 0x14F1 JUMPI POP DUP1 PUSH4 0x3D478BA9 EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1156 JUMPI DUP1 PUSH4 0x41508EFA EQ PUSH2 0xF79 JUMPI DUP1 PUSH4 0x42F144BE EQ PUSH2 0xF4C JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xDE1 JUMPI DUP1 PUSH4 0x4DD9D955 EQ PUSH2 0xC14 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xBED JUMPI DUP1 PUSH4 0x6693643F EQ PUSH2 0xBA1 JUMPI DUP1 PUSH4 0x6A8A6894 EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x941 JUMPI DUP1 PUSH4 0x775274A1 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x94259C6C EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xCB802C8B EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xDC93ED78 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xDEDC0B04 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xE739D90D EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xE9C9BD99 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B7 JUMPI PUSH4 0xF8A8A076 EQ PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP7 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1D2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 PUSH2 0x1DB PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x22C JUMPI POP POP PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI DUP4 CALLDATALOAD SWAP2 PUSH2 0x260 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x18EB JUMP JUMPDEST DUP3 DUP5 MSTORE DUP5 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND ISZERO PUSH2 0x46B JUMPI PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x45D JUMPI JUMPDEST POP PUSH2 0x44D JUMPI PUSH1 0x3 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x43D JUMPI PUSH1 0x2 DUP4 ADD SLOAD AND DUP1 PUSH2 0x3BE JUMPI POP CALLVALUE SWAP1 JUMPDEST DUP2 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x6 DUP4 ADD CALLER DUP8 MSTORE DUP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD ISZERO PUSH2 0x34D JUMPI JUMPDEST DUP6 SWAP7 SWAP8 SWAP2 PUSH1 0x1 SWAP6 SWAP7 SWAP3 PUSH32 0x86823B9F3F8A793CB18F1212A5FE5661D166FFE64228E2E3C43DC38959FBA8DC SWAP3 CALLER DUP12 MSTORE DUP9 MSTORE DUP2 DUP11 KECCAK256 PUSH2 0x30E DUP7 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP1 SSTORE DUP6 ADD PUSH2 0x31D DUP6 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP8 DUP9 DUP1 SWAP3 SSTORE DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE CALLER SWAP4 LOG3 ADD SLOAD GT ISZERO PUSH2 0x33E JUMPI JUMPDEST POP PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x347 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST CODESIZE PUSH2 0x336 JUMP JUMPDEST PUSH1 0x7 DUP5 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x39C JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x389 JUMPI DUP9 MSTORE DUP6 DUP9 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x32 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x433 JUMPI DUP8 SWAP1 PUSH2 0x400 JUMPI JUMPDEST PUSH2 0x3FB SWAP2 POP DUP1 SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x42C JUMPI JUMPDEST PUSH2 0x416 DUP2 DUP4 PUSH2 0x1695 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x428 JUMPI PUSH2 0x3FB SWAP1 MLOAD PUSH2 0x3EB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x40C JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xF04E9CF PUSH1 0xE4 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x87F4219 PUSH1 0xE4 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND CODESIZE PUSH2 0x297 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI CALLDATALOAD SWAP2 PUSH1 0x7 SLOAD DUP4 LT ISZERO PUSH2 0x1B4 JUMPI POP PUSH2 0x4A6 PUSH1 0x20 SWAP3 PUSH2 0x1596 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x20 DUP4 PUSH2 0x4A6 DUP5 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3BF6A96BD439AECCFA0AE079DEBEAFBD20876716BD2E43B00C4F4B9571210281 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP7 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP1 PUSH2 0x120 SWAP4 DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 SLOAD AND SWAP4 DUP4 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP4 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP5 ADD SLOAD SWAP1 DUP5 ADD SLOAD SWAP1 PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0x6 DUP7 ADD SLOAD SWAP5 PUSH1 0x8 PUSH1 0xFF PUSH1 0x7 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP8 DUP2 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI SWAP1 PUSH2 0x6D7 PUSH32 0x0 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x700 PUSH32 0x0 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 DUP4 MLOAD SWAP2 PUSH2 0x70D DUP4 PUSH2 0x165D JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH2 0x742 DUP6 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH2 0x735 PUSH1 0x20 SWAP5 PUSH1 0xE0 DUP7 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x1556 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x779 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x76A JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x7CE PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x810 PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP6 SLOAD AND ISZERO PUSH2 0x932 JUMPI PUSH1 0x5 DUP6 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x924 JUMPI JUMPDEST POP PUSH2 0x914 JUMPI PUSH1 0x3 DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x6 DUP2 ADD SWAP6 CALLER DUP9 MSTORE DUP7 PUSH1 0x20 MSTORE DUP5 DUP9 KECCAK256 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x8F4 JUMPI CALLER DUP10 MSTORE PUSH1 0x20 MSTORE DUP5 DUP9 KECCAK256 DUP9 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x2 ADD SLOAD DUP6 SWAP2 AND DUP1 PUSH2 0x8E3 JUMPI POP DUP6 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0x89C PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x8D5 JUMPI POP JUMPDEST MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEF652412E5D49B8285C2154153B00BE5E175328CAF6225B8A37DB5712FB62A1A PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0x8EF SWAP3 POP CALLER SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x1971FBF3 PUSH1 0xE2 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x30F53A1F PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x87F4219 PUSH1 0xE4 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND CODESIZE PUSH2 0x83E JUMP JUMPDEST POP SWAP1 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x95A PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x556 JUMPI PUSH2 0x9D2 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH2 0x9E0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST SWAP1 DUP3 SWAP5 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0xABF JUMPI POP POP DUP5 ISZERO SWAP1 POP PUSH2 0xAA3 JUMPI PUSH1 0x1 SWAP2 DUP3 SWAP5 PUSH2 0xA04 DUP2 PUSH2 0x1E2D JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA79 JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP8 DUP1 DUP7 ADD MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE DUP8 PUSH1 0x60 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0xA66 JUMPI POP POP POP POP POP SWAP1 PUSH2 0xA4F DUP2 PUSH2 0x1B0 SWAP5 SWAP4 SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 ISZERO ISZERO DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST DUP5 MLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP3 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 PUSH2 0xA8A PUSH2 0xA9B SWAP3 DUP5 SWAP9 SWAP7 SWAP9 PUSH2 0x1E6E JUMP JUMPDEST MLOAD PUSH2 0xA95 DUP3 DUP9 PUSH2 0x1E6E JUMP JUMPDEST MSTORE PUSH2 0x1E5F JUMP JUMPDEST SWAP5 SWAP3 SWAP5 PUSH2 0xA07 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x1B0 SWAP1 DUP3 DUP2 MLOAD SWAP1 PUSH2 0xAB7 DUP3 PUSH2 0x165D JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR SWAP1 DUP2 DUP8 MSTORE DUP4 DUP11 MSTORE DUP8 DUP8 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP1 DUP5 AND ISZERO SWAP4 DUP5 PUSH2 0xB4C JUMPI JUMPDEST POP POP DUP3 PUSH2 0xB3A JUMPI JUMPDEST DUP3 PUSH2 0xB2C JUMPI JUMPDEST POP POP PUSH2 0xB12 JUMPI JUMPDEST POP PUSH2 0xB0D SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST DUP8 PUSH2 0xB25 SWAP2 PUSH2 0xA95 PUSH2 0xB0D SWAP5 SWAP11 DUP9 PUSH2 0x1E6E JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0xB03 JUMP JUMPDEST ADD SLOAD TIMESTAMP GT ISZERO SWAP1 POP CODESIZE DUP1 PUSH2 0xAFC JUMP JUMPDEST DUP6 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT ISZERO SWAP3 POP PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO SWAP3 POP CODESIZE DUP1 PUSH2 0xAEE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB84 PUSH2 0x1540 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xBE9 JUMPI SWAP3 DUP3 SWAP2 DUP5 PUSH1 0x20 SWAP6 CALLDATALOAD DUP4 MSTORE DUP6 MSTORE PUSH1 0x6 DUP4 DUP4 KECCAK256 ADD SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x556 JUMPI PUSH2 0xC2F PUSH2 0x1540 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 DUP6 SUB PUSH2 0x428 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0xC55 PUSH2 0x18EB JUMP JUMPDEST DUP9 AND SWAP5 DUP6 ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI JUMPDEST PUSH2 0xDC9 JUMPI TIMESTAMP DUP4 GT ISZERO PUSH2 0xDC9 JUMPI DUP7 MLOAD PUSH1 0x20 SWAP10 DUP11 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 SWAP3 PUSH1 0x60 SHL AND DUP5 MSTORE DUP7 PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x54 DUP3 ADD MSTORE DUP4 PUSH1 0x68 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x88 DUP2 MSTORE PUSH2 0xCAF DUP2 PUSH2 0x1641 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP6 DUP3 MSTORE DUP1 DUP11 MSTORE DUP4 PUSH1 0x3 DUP10 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE DUP9 PUSH1 0x1 DUP4 ADD SSTORE DUP7 PUSH1 0x2 DUP4 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD SSTORE PUSH1 0x8 DUP11 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0xD34 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP3 DUP4 MSTORE DUP8 DUP4 ADD MSTORE DUP2 DUP6 ADD MSTORE PUSH32 0x8F26321C4618EC8C97913B89682571E04749F4B1788DBA40ABD70FDCEE9A6005 SWAP1 PUSH1 0x60 SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xDB6 JUMPI POP SWAP3 PUSH1 0x60 SWAP3 DUP8 DUP10 SWAP7 SWAP4 PUSH2 0xD84 DUP8 PUSH1 0x1 PUSH32 0x8F26321C4618EC8C97913B89682571E04749F4B1788DBA40ABD70FDCEE9A6005 SWAP10 ADD PUSH1 0x7 SSTORE PUSH2 0x1596 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP11 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE DUP8 DUP2 MSTORE PUSH1 0x8 DUP13 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SWAP2 SWAP4 DUP2 SWAP4 POP PUSH2 0xCF9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST POP DUP4 ISZERO PUSH2 0xC61 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP5 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xBE9 JUMPI PUSH2 0xE15 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST DUP2 SWAP6 SWAP2 ADD SWAP5 DUP3 DUP2 DUP8 SUB SLT PUSH2 0xF48 JUMPI DUP1 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xF48 JUMPI ADD SWAP5 DUP5 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0xBE9 JUMPI DUP6 CALLDATALOAD SWAP5 PUSH2 0xE45 DUP7 PUSH2 0x16B7 JUMP JUMPDEST SWAP7 PUSH2 0xE52 DUP6 MLOAD SWAP9 DUP10 PUSH2 0x1695 JUMP JUMPDEST DUP7 DUP9 MSTORE DUP4 DUP9 ADD SWAP1 DUP5 PUSH1 0x5 SWAP9 DUP10 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x428 JUMPI DUP5 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF38 JUMPI POP POP POP POP DUP4 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xF34 JUMPI DUP1 PUSH2 0xE93 PUSH2 0xEC9 SWAP3 DUP10 PUSH2 0x1E6E JUMP JUMPDEST MLOAD DUP1 DUP8 MSTORE DUP4 DUP6 MSTORE DUP6 DUP8 KECCAK256 DUP9 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF DUP1 DUP4 AND ISZERO SWAP3 DUP4 PUSH2 0xF26 JUMPI JUMPDEST POP POP DUP2 PUSH2 0xF14 JUMPI JUMPDEST DUP2 PUSH2 0xF05 JUMPI JUMPDEST POP PUSH2 0xECE JUMPI JUMPDEST POP PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0x1D30 JUMP JUMPDEST PUSH32 0x1295FC1476EA13733F3084EFFFF7A9178DAF713E97031B21ED33BF8F4E71A452 DUP6 DUP8 MLOAD TIMESTAMP DUP2 MSTORE LOG2 CODESIZE PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO CODESIZE PUSH2 0xEBD JUMP JUMPDEST DUP6 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT ISZERO SWAP2 POP PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO SWAP2 POP CODESIZE DUP1 PUSH2 0xEAF JUMP JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP6 SWAP2 ADD PUSH2 0xE6F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 CALLDATALOAD PUSH2 0xF92 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0xF9A PUSH2 0x18EB JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0x7 DUP5 ADD SLOAD AND ISZERO PUSH2 0x1147 JUMPI PUSH1 0x6 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x1138 JUMPI PUSH1 0x5 DUP4 ADD SWAP4 DUP5 SLOAD TIMESTAMP LT PUSH2 0x112A JUMPI PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 PUSH2 0x10E3 JUMPI POP PUSH1 0x3 DUP6 ADD DUP1 SLOAD DUP1 CALLVALUE LT PUSH2 0x10D3 JUMPI DUP9 DUP1 DUP1 DUP1 SWAP4 DUP8 PUSH1 0x1 DUP13 ADD SLOAD AND GAS CALL PUSH2 0x1005 PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x10C4 JUMPI SLOAD DUP1 CALLVALUE GT PUSH2 0x107E JUMPI JUMPDEST POP SWAP1 PUSH2 0x1047 PUSH32 0x3C383309B20DFAE2B367289760FD90DE73B4FCE8F3A3667600A9A66B6ADEF5BC SWAP4 SWAP3 JUMPDEST DUP7 ADD SLOAD DUP8 SLOAD PUSH2 0x190C JUMP JUMPDEST DUP1 SWAP7 SSTORE PUSH1 0x3 DUP6 ADD SLOAD SWAP1 PUSH1 0x8 DUP7 ADD PUSH2 0x105F DUP4 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 DUP8 SLOAD AND SWAP7 ADD SLOAD AND SWAP6 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG4 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST CALLVALUE SUB CALLVALUE DUP2 GT PUSH2 0x10B1 JUMPI DUP8 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0x1097 PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x10A3 JUMPI CODESIZE PUSH2 0x1014 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP3 SWAP2 PUSH2 0x1125 PUSH2 0x1047 SWAP3 PUSH32 0x3C383309B20DFAE2B367289760FD90DE73B4FCE8F3A3667600A9A66B6ADEF5BC SWAP7 SWAP6 DUP10 SLOAD AND DUP6 PUSH1 0x1 DUP12 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP12 ADD SLOAD SWAP3 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x856A7577 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x893DCECF PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0xDF0F4E9 PUSH1 0xE4 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1170 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0xBE9 JUMPI PUSH2 0x100 SGT PUSH2 0x242 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x104 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xF48 JUMPI PUSH2 0x1205 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x120F PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x121F PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1227 PUSH2 0x1A2B JUMP JUMPDEST SWAP3 PUSH2 0x1230 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP7 PUSH1 0x84 CALLDATALOAD SWAP9 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xE4 CALLDATALOAD SWAP6 DUP10 MLOAD DUP11 PUSH1 0x20 SWAP10 DUP11 DUP4 ADD SWAP4 PUSH32 0x3BF6A96BD439AECCFA0AE079DEBEAFBD20876716BD2E43B00C4F4B9571210281 DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 SWAP4 DUP5 DUP1 SWAP4 AND SWAP1 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE DUP12 PUSH1 0xA0 DUP3 ADD MSTORE DUP13 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP9 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP3 MSTORE PUSH2 0x140 DUP3 ADD SWAP1 DUP3 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x14DE JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x42 SWAP1 PUSH2 0x12D6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 DUP12 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 PUSH2 0x12F6 DUP3 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH2 0x1303 DUP12 MLOAD SWAP3 DUP4 PUSH2 0x1695 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP14 CALLDATASIZE DUP5 DUP7 ADD GT PUSH2 0x1B4 JUMPI DUP10 DUP5 PUSH2 0x1327 SWAP6 PUSH2 0x1330 SWAP8 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A57 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1B23 JUMP JUMPDEST DUP7 DUP1 PUSH2 0x133A PUSH2 0x1A15 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x14D0 JUMPI DUP6 PUSH2 0x134B PUSH2 0x1A15 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0x5 DUP6 MSTORE DUP7 DUP11 KECCAK256 DUP5 DUP12 MSTORE DUP6 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x14C2 JUMPI DUP3 TIMESTAMP GT PUSH2 0x14B4 JUMPI SWAP3 PUSH1 0x1 PUSH1 0x7 DUP10 DUP9 SWAP7 SWAP6 DUP11 SWAP9 SWAP6 DUP14 DUP16 SWAP13 SWAP9 DUP10 DUP12 SWAP11 DUP16 PUSH32 0x50994AF435709064071E6160587EB110AEE99F876E414493EA76DF89D06E1B4D SWAP16 PUSH2 0x13AA PUSH2 0x1A15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP13 MSTORE DUP2 DUP2 KECCAK256 DUP12 DUP3 MSTORE DUP13 MSTORE KECCAK256 SWAP9 PUSH1 0xFF NOT SWAP10 DUP10 DUP12 DUP3 SLOAD AND OR SWAP1 SSTORE DUP11 PUSH2 0x13D0 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 PUSH2 0x13D9 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x1A41 JUMP JUMPDEST DUP6 MLOAD SWAP4 DUP5 ADD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP3 DUP4 DUP1 SWAP3 PUSH1 0x60 SHL AND DUP8 MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP6 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x5C DUP3 ADD MSTORE PUSH1 0x5C DUP2 MSTORE PUSH2 0x141E DUP2 PUSH2 0x160F JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP15 DUP16 DUP2 MSTORE PUSH1 0x6 DUP12 MSTORE KECCAK256 SWAP5 DUP11 PUSH2 0x1434 PUSH2 0x1A15 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP9 SLOAD AND OR DUP8 SSTORE PUSH2 0x1450 PUSH2 0x1A2B JUMP JUMPDEST DUP13 DUP11 DUP10 ADD SWAP2 AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1465 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 DUP13 PUSH1 0x2 DUP10 ADD SWAP3 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP7 ADD SSTORE DUP5 ADD SSTORE PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1496 PUSH2 0x1A15 JUMP JUMPDEST SWAP8 PUSH2 0x149F PUSH2 0x1A2B JUMP JUMPDEST SWAP2 DUP6 MLOAD SWAP9 DUP10 MSTORE DUP9 ADD MSTORE AND SWAP6 AND SWAP4 LOG4 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x893DCECF PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x1F6D5AEF PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x153B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x153B JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x153B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x153B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1582 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x162B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x170D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16F1 DUP4 PUSH2 0x1679 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x17EF JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x17DB JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x17BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x175C JUMPI JUMPDEST POP POP PUSH2 0x1759 SWAP3 POP SUB DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x17A3 JUMPI POP POP PUSH2 0x1759 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x178B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1759 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x181B JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16F1 DUP4 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x18C5 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x17DB JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x17BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1866 JUMPI POP POP PUSH2 0x1759 SWAP3 POP SUB DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x18AD JUMPI POP POP PUSH2 0x1759 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1895 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1836 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x162B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x18FA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1919 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x162B JUMPI PUSH2 0x1988 SWAP3 PUSH1 0x40 MSTORE PUSH2 0x198A JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x19E6 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x19DD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x19BB JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1A03 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x1A88 JUMPI PUSH2 0x1A81 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1A93 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1B17 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1B0B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1B02 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1B92 JUMPI DUP1 PUSH2 0x1B35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1B4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1B7A JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1C99 JUMPI JUMPDEST ISZERO PUSH2 0x1C03 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1C93 DUP2 PUSH2 0x1641 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1BDA JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CED JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1CD3 DUP3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 PUSH2 0x1CE1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1695 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1988 SWAP2 PUSH2 0x1D2B DUP3 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x198A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND DUP1 ISZERO PUSH2 0x1E20 JUMPI JUMPDEST PUSH2 0x1E19 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 PUSH2 0x1DDA JUMPI POP DUP1 DUP1 DUP1 DUP5 DUP8 SLOAD AND PUSH1 0x4 DUP9 ADD SLOAD SWAP1 GAS CALL PUSH2 0x1D8C PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x1DC8 JUMPI PUSH1 0x20 PUSH1 0x4 PUSH32 0x133405E74FA883CC1E7A54282140C2473DA655A05387DAE06A5C0DA4C7565829 SWAP3 JUMPDEST DUP6 SLOAD AND SWAP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP DUP3 PUSH2 0x1E14 PUSH1 0x4 SWAP3 PUSH32 0x133405E74FA883CC1E7A54282140C2473DA655A05387DAE06A5C0DA4C7565829 SWAP6 DUP9 SLOAD AND DUP5 DUP10 ADD SLOAD SWAP2 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x1DB9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x1D51 JUMP JUMPDEST SWAP1 PUSH2 0x1E37 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1E44 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1695 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1E55 PUSH1 0x1F NOT SWAP2 PUSH2 0x16B7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH0 0x2E 0xD8 0xAE PREVRANDAO 0xCC 0xAF SHL 0xAF XOR 0x5C 0xB1 0xC6 0xBE 0xD7 0xC0 0xF9 0x28 INVALID 0xA9 SWAP9 XOR 0xF8 0xB8 0xE1 DUP10 0xC5 0xD9 SWAP13 0x24 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1006:15986:26:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;1006:15986:26;;-1:-1:-1;1857:1:13;1006:15986:26;1857:1:13;;4635:10:26;1273:26:0;1269:95;;1006:15986:26;;;4635:10;-1:-1:-1;;;;;;1006:15986:26;;;;;;;-1:-1:-1;;;;;1006:15986:26;3052:40:0;;;;3501:45:18;;;:::i;:::-;3493:53;;;;;3567:51;;;:::i;:::-;3556:62;;;;;1006:15986:26;3642:22:18;;3628:36;;;;1006:15986:26;3691:25:18;;3674:42;;;;;3744:13;1006:15986:26;3727:30:18;1006:15986:26;;4304:80:18;1006:15986:26;4304:80:18;;2079:95;;;;;;;;;;;;3744:13;2079:95;;;;4378:4;1006:15986:26;2079:95:18;;1006:15986:26;;4304:80:18;;2079:95;1006:15986:26;;;;;;;;;;;;;;;;;;;;;4294:91:18;;2079:95;3767:48;4378:4;2079:95;3825:27;1006:15986:26;;;;;;2079:95:18;1006:15986:26;;;;;;;;;;;2079:95:18;1006:15986:26;;;;;3628:36:18;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1006:15986:26;;;;;;;;1269:95:0;1006:15986:26;;-1:-1:-1;;;1322:31:0;;;;;1006:15986:26;;;;;1322:31:0;1006:15986:26;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;:::o;:::-;;;;;;;;;;;;2887:340:14;1006:15986:26;;3032:2:14;;3010:24;;;3032:2;;;1006:15986:26;1854:2:14;1006:15986:26;;1840:16:14;1836:72;;1006:15986:26;;;;;;;;;;;;1949:36:14;;3050:27;:::o;1006:15986:26:-;;;;;;;;;;1949:36:14;3050:27;:::o;1836:72::-;1006:15986:26;;;1879:18:14;;;;;;;;;;;1006:15986:26;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;1854:2:14;1006:15986:26;;;;;;;1879:18:14;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;3006:215:14;1006:15986:26;-1:-1:-1;;;;;1006:15986:26;;;;3532:13:18;1006:15986:26;;;;;;;;;;;;;;3006:215:14;1006:15986:26;;;;;;;;;;;3006:215:14;1006:15986:26;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;3532:13:18;1006:15986:26;1390:66:14;3168:42;:::o;1006:15986:26:-;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;3532:13:18;-1:-1:-1;1006:15986:26;;-1:-1:-1;1006:15986:26;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;;;3532:13:18;1006:15986:26;1390:66:14;3168:42;:::o;1006:15986:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;3532:13:18;-1:-1:-1;1006:15986:26;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;-1:-1:-1;1006:15986:26;;;;;;;;2887:340:14;1006:15986:26;;3032:2:14;;1006:15986:26;3010:24:14;;;3032:2;;;1006:15986:26;;1854:2:14;1006:15986:26;;1840:16:14;1836:72;;1006:15986:26;;;;;;;;;;;;1949:36:14;;3050:27;:::o;1836:72::-;1006:15986:26;;;1879:18:14;;;;;;;;;;;1006:15986:26;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;1854:2:14;1006:15986:26;;;;;;;1879:18:14;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;3006:215:14;-1:-1:-1;;;;;1006:15986:26;;;;3601:16:18;1006:15986:26;;;;;;;;;;;;;;;;3006:215:14;1006:15986:26;;;;;;;;;;;3006:215:14;1006:15986:26;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;1390:66:14;3168:42;:::o;1006:15986:26:-;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;-1:-1:-1;1006:15986:26;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;1390:66:14;3168:42;:::o;1006:15986:26:-;;;-1:-1:-1;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;-1:-1:-1;1006:15986:26;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5440,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":5389,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_uint256_address_uint256_uint256_bool_bool":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes":{"entryPoint":5462,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":7725,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5815,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":6351,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":6412,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":7362,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5781,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_32179":{"entryPoint":5647,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32180":{"entryPoint":5697,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32181":{"entryPoint":5725,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32183":{"entryPoint":5753,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":6538,"id":1440,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":5603,"id":84,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":7080,"id":3955,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":6642,"id":1721,"parameterSlots":0,"returnSlots":0},"fun_releaseInvoice":{"entryPoint":7472,"id":9644,"parameterSlots":1,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":6379,"id":1626,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":7410,"id":1063,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":6447,"id":1090,"parameterSlots":4,"returnSlots":0},"fun_throwError":{"entryPoint":6947,"id":3831,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":6137,"id":1926,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_25113":{"entryPoint":5839,"id":1926,"parameterSlots":1,"returnSlots":1},"fun_tryRecover":{"entryPoint":6743,"id":3558,"parameterSlots":2,"returnSlots":3},"fun_tryRecover_3746":{"entryPoint":6803,"id":3746,"parameterSlots":4,"returnSlots":3},"increment_uint256":{"entryPoint":7775,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":7790,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":6721,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_address_25091":{"entryPoint":6677,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_address_25092":{"entryPoint":6699,"id":null,"parameterSlots":0,"returnSlots":1},"storage_array_index_access_bytes32_dyn":{"entryPoint":5526,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"3853":[{"length":32,"start":7137}],"3855":[{"length":32,"start":7324}],"3857":[{"length":32,"start":7083}],"3859":[{"length":32,"start":7216}],"3861":[{"length":32,"start":7254}],"3864":[{"length":32,"start":1715}],"3867":[{"length":32,"start":1756}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600090813560e01c90816329433dea146114f1575080633d478ba9146111c65780633f4ba83a1461115657806341508efa14610f7957806342f144be14610f4c5780634585e33b14610de15780634dd9d95514610c145780635c975abb14610bed5780636693643f14610ba15780636a8a689414610b5a5780636e04ff0d1461099e578063715018a614610941578063775274a1146107f15780638456cb591461079057806384b0196e1461069b5780638da5cb5b1461067257806394259c6c146105df578063cb802c8b1461055a578063dc93ed781461051b578063dedc0b04146104b4578063e739d90d1461047b578063e9c9bd9914610246578063f2fde38b146101b75763f8a8a0761461012c57600080fd5b346101b45760203660031901126101b4578235815260208381529082902080546001820154600283015460038401549684015460059094015495516001600160a01b039384168152948501919091521660408301526060820193909352608081019290925260ff808216151560a084015260089190911c16151560c082015260e090f35b0390f35b80fd5b509134610242576020366003190112610242576101d2611540565b906101db6115e3565b6001600160a01b0391821692831561022c575050600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090602080600319360112610242578335916102606119f2565b6102686118eb565b82845284825280842080549091906001600160a01b039081161561046b57600583015460ff811690811561045d575b5061044d576003830154421161043d57600283015416806103be575034905b81156103af5760068301338752808552818720541561034d575b8596979160019596927f86823b9f3f8a793cb18f1212a5fe5661d166ffe64228e2e3c43dc38959fba8dc92338b528852818a2061030e86825461190c565b9055850161031d85825461190c565b978880925582519586528501523393a30154111561033e575b506001815580f35b61034790611d30565b38610336565b60078401805490600160401b82101561039c57600182018082558210156103895788528588200180546001600160a01b031916331790556102d0565b634e487b7160e01b895260328a52602489fd5b634e487b7160e01b895260418a52602489fd5b5163162908e360e11b81528690fd5b908051636eb1769f60e11b815233888201523060248201528481604481865afa8015610433578790610400575b6103fb915080933090339061192f565b6102b6565b508481813d831161042c575b6104168183611695565b81010312610428576103fb90516103eb565b8680fd5b503d61040c565b82513d89823e3d90fd5b8151630f04e9cf60e41b81528790fd5b815163087f421960e41b81528790fd5b60ff915060081c1638610297565b81516349ff0c8f60e11b81528790fd5b5091346102425760203660031901126102425735916007548310156101b457506104a6602092611596565b91905490519160031b1c8152f35b508290346101b45760203660031901126101b457508035906007548210156104e2576020836104a684611596565b606490602084519162461bcd60e51b83528201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152fd5b509034610556578160031936011261055657602090517f3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b95712102818152f35b5080fd5b50346101b45760203660031901126101b4578235815260208381529082902080546001820154600283015460038401549684015460059094015495516001600160a01b039384168152948501919091521660408301526060820193909352608081019290925260ff808216151560a084015260089190911c16151560c082015260e090f35b509190346102425760203660031901126102425780610120938335815260066020522060018060a01b0391828254169383600184015416936002840154169060038401549084015490600585015492600686015494600860ff600789015416970154978151998a5260208a01528801526060870152608086015260a085015260c0840152151560e0830152610100820152f35b50903461055657816003193601126105565760015490516001600160a01b039091168152602090f35b509034610556578160031936011261055657906106d77f00000000000000000000000000000000000000000000000000000000000000006116cf565b6107007f00000000000000000000000000000000000000000000000000000000000000006117f9565b9183519161070d8361165d565b8183526107428551958695600f60f81b875261073560209460e0868a015260e0890190611556565b9187830390880152611556565b904660608601523060808601528260a086015284820360c08601528080855193848152019401925b82811061077957505050500390f35b83518552869550938101939281019260010161076a565b50903461055657816003193601126105565760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916107ce6115e3565b6107d66118eb565b6001805460ff60a01b1916600160a01b17905551338152a180f35b50919034610242576020366003190112610242578135906108106119f2565b818452826020528084209260018060a01b038085541615610932576005850194855460ff8116908115610924575b5061091457600381015442111561090457600681019533885286602052848820549687156108f457338952602052848820889055805461ff00191661010017905560020154859116806108e357508580808093335af161089c611cc2565b50156108d557505b519182527fef652412e5d49b8285c2154153b00be5e175328caf6225b8a37db5712fb62a1a60203393a36001815580f35b90516312171d8360e31b8152fd5b6108ef92503390611cf2565b6108a4565b8551631971fbf360e21b81528590fd5b83516330f53a1f60e01b81528390fd5b835163087f421960e41b81528390fd5b60ff915060081c163861083e565b5090516349ff0c8f60e11b8152fd5b50346101b457806003193601126101b45761095a6115e3565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461024257602092836003193601126101b457823567ffffffffffffffff8111610556576109d2903690850161150d565b50506007546109e081611e2d565b908294835b828110610abf57505084159050610aa3576001918294610a0481611e2d565b92825b828110610a79575050508351928484018780860152835180915287606086019401925b88828210610a6657505050505090610a4f816101b0949303601f198101835282611695565b905b80805195869515158652850152830190611556565b8451865294850194909301928201610a2a565b80610a8a610a9b9284989698611e6e565b51610a958288611e6e565b52611e5f565b949294610a07565b5091506101b09082815190610ab78261165d565b815290610a51565b610ac881611596565b9054600391821b1c90818752838a528787209060058201549160ff808416159384610b4c575b505082610b3a575b82610b2c575b5050610b12575b50610b0d90611e5f565b6109e5565b87610b2591610a95610b0d949a88611e6e565b9690610b03565b015442111590503880610afc565b85810154600182015411159250610af6565b60081c161592503880610aee565b50903461055657806003193601126105565760209160ff9082906001600160a01b03610b84611540565b168152600585528181206024358252855220541690519015158152f35b5091346102425781600319360112610242576024356001600160a01b0381169190829003610be957928291846020953583528552600683832001908252845220549051908152f35b8380fd5b50903461055657816003193601126105565760209060ff60015460a01c1690519015158152f35b50903461055657608036600319011261055657610c2f611540565b92604435906024356001600160a01b038084168085036104285760643591610c556118eb565b88169485158015610dd9575b610dc95742831115610dc95786516020998a8201926001600160601b0319809260601b16845286603484015260601b16605482015283606882015242608882015260888152610caf81611641565b519020968794858252808a528360038984206001600160601b0360a01b8a81835416178255886001830155866002830191825416179055015560088a5260ff888320541615610d34575b5050855192835287830152818501527f8f26321c4618ec8c97913b89682571e04749f4b1788dba40abd70fdcee9a600590606090a351908152f35b90919293945060075490600160401b821015610db657509260609287899693610d848760017f8f26321c4618ec8c97913b89682571e04749f4b1788dba40abd70fdcee9a60059901600755611596565b81549060031b908a821b91600019901b191617905587815260088c5220600160ff198254161790559193819350610cf9565b634e487b7160e01b835260419052602482fd5b86516349ff0c8f60e11b81528590fd5b508315610c61565b50346101b457602091826003193601126105565767ffffffffffffffff928435848111610be957610e15903690870161150d565b81959101948281870312610f48578035918211610f4857019484601f87011215610be957853594610e45866116b7565b96610e5285519889611695565b8688528388019084600598891b8201019283116104285784809101915b838310610f385750505050835b8651811015610f345780610e93610ec99289611e6e565b51808752838552858720888101549060ff808316159283610f26575b505081610f14575b81610f05575b50610ece575b50611e5f565b610e7c565b610ed781611d30565b7f1295fc1476ea13733f3084effff7a9178daf713e97031b21ed33bf8f4e71a452858751428152a238610ec3565b60039150015442111538610ebd565b85810154600182015411159150610eb7565b60081c161591503880610eaf565b8480f35b8235815291810191859101610e6f565b8480fd5b509134610242576020366003190112610242578160209360ff923581526008855220541690519015158152f35b5091906020366003190112610242578135610f926119f2565b610f9a6118eb565b80845260066020528184209160ff6007840154161561114757600683015442116111385760058301938454421061112a5760028401546001600160a01b0391908216806110e357506003850180548034106110d35788808080938760018c0154165af1611005611cc2565b50156110c4575480341161107e575b50906110477f3c383309b20dfae2b367289760fd90de73b4fce8f3a3667600a9a66b6adef5bc93925b860154875461190c565b8096556003850154906008860161105f83825461190c565b9055600181875416960154169582519182526020820152a46001815580f35b34033481116110b1578780808093335af1611097611cc2565b50156110a35738611014565b82516312171d8360e31b8152fd5b634e487b7160e01b885260118252602488fd5b5082516312171d8360e31b8152fd5b845163162908e360e11b81528390fd5b8291611125611047927f3c383309b20dfae2b367289760fd90de73b4fce8f3a3667600a9a66b6adef5bc96958954168560018b0154169060038b01549261192f565b61103d565b905163856a757760e01b8152fd5b5163893dcecf60e01b81528390fd5b51630df0f4e960e41b81528390fd5b5091346102425782600319360112610242576111706115e3565b6001549060ff8260a01c16156111b8575060ff60a01b1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b5091346102425736600319016101208112610be957610100136102425767ffffffffffffffff9161010435838111610f4857611205903690840161150d565b909361120f6119f2565b6112176118eb565b61121f611a15565b611227611a2b565b92611230611a41565b92606435966084359860c4359360e4359589518a6020998a8301937f3bf6a96bd439aeccfa0ae079debeafbd20876716bd2e43b00c4f4b9571210281855260018060a01b039c8d9384809316908601521660608401521660808201528b60a08201528c60c082015260a435958660e083015287610100830152886101208301526101208252610140820190828210908211176114de578b525190206042906112d6611ba8565b908b519161190160f01b835260028301526022820152206112f6826118cf565b906113038b519283611695565b8282528d36848601116101b457898461132795611330978387013784010152611a57565b90929192611b23565b868061133a611a15565b169116036114d0578561134b611a15565b168a5260058552868a20848b52855260ff878b2054166114c2578242116114b4579260016007898896958a98958d8f9c98898b9a8f7f50994af435709064071e6160587eb110aee99f876e414493ea76df89d06e1b4d9f6113aa611a15565b16815260058c528181208b82528c52209860ff1999898b8254161790558a6113d0611a15565b916113d9611a2b565b6113e1611a41565b8551938401946001600160601b03199283809260601b16875260601b16603485015260601b166048830152605c820152605c815261141e8161160f565b5190209e8f815260068b5220948a611434611a15565b166001600160601b0360a01b9081885416178755611450611a2b565b8c8a8901911682825416179055611465611a41565b908c600289019216908254161790556003860155840155600583015560068201550191825416179055611496611a15565b9761149f611a2b565b91855198895288015216951693a46001815580f35b865163893dcecf60e01b8152fd5b8651631f6d5aef60e01b8152fd5b8651638baa579f60e01b8152fd5b634e487b7160e01b8f526041865260248ffd5b9050346105565781600319360112610556576020906007548152f35b9181601f8401121561153b5782359167ffffffffffffffff831161153b576020838186019501011161153b57565b600080fd5b600435906001600160a01b038216820361153b57565b919082519283825260005b848110611582575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611561565b6007548110156115cd5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b634e487b7160e01b600052603260045260246000fd5b6001546001600160a01b031633036115f757565b60405163118cdaa760e01b8152336004820152602490fd5b6080810190811067ffffffffffffffff82111761162b57604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff82111761162b57604052565b6020810190811067ffffffffffffffff82111761162b57604052565b6040810190811067ffffffffffffffff82111761162b57604052565b90601f8019910116810190811067ffffffffffffffff82111761162b57604052565b67ffffffffffffffff811161162b5760051b60200190565b60ff811461170d5760ff811690601f82116116fb57604051916116f183611679565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600060025490600182811c908084169384156117ef575b60209485841081146117db57838752869493929181156117bb575060011461175c575b505061175992500382611695565b90565b9093915060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000915b8183106117a35750506117599350820101388061174b565b8554878401850152948501948694509183019161178b565b91505061175994925060ff191682840152151560051b820101388061174b565b634e487b7160e01b85526022600452602485fd5b91607f1691611728565b60ff811461181b5760ff811690601f82116116fb57604051916116f183611679565b50604051600060035490600182811c908084169384156118c5575b60209485841081146117db57838752869493929181156117bb575060011461186657505061175992500382611695565b9093915060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000915b8183106118ad5750506117599350820101388061174b565b85548784018501529485019486945091830191611895565b91607f1691611836565b67ffffffffffffffff811161162b57601f01601f191660200190565b60ff60015460a01c166118fa57565b60405163d93c066560e01b8152600490fd5b9190820180921161191957565b634e487b7160e01b600052601160045260246000fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815260a081019181831067ffffffffffffffff84111761162b576119889260405261198a565b565b906000602091828151910182855af1156119e6576000513d6119dd57506001600160a01b0381163b155b6119bb5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156119b4565b6040513d6000823e3d90fd5b600260005414611a03576002600055565b604051633ee5aeb560e01b8152600490fd5b6004356001600160a01b038116810361153b5790565b6024356001600160a01b038116810361153b5790565b6044356001600160a01b038116810361153b5790565b8151919060418303611a8857611a8192506020820151906060604084015193015160001a90611a93565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611b1757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611b0b5780516001600160a01b03811615611b0257918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015611b925780611b35575050565b60018103611b4f5760405163f645eedf60e01b8152600490fd5b60028103611b705760405163fce698f760e01b815260048101839052602490fd5b600314611b7a5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611c99575b15611c03577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611c9381611641565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611bda565b3d15611ced573d90611cd3826118cf565b91611ce16040519384611695565b82523d6000602084013e565b606090565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815261198891611d2b8261160f565b61198a565b6000908082526004602052604082209160058301805460ff81168015611e20575b611e195760ff1916600117905560028301546001600160a01b039190821680611dda5750808080848754166004880154905af1611d8c611cc2565b5015611dc857602060047f133405e74fa883cc1e7a54282140c2473da655a05387dae06a5c0da4c7565829925b855416940154604051908152a3565b6040516312171d8360e31b8152600490fd5b6020915082611e146004927f133405e74fa883cc1e7a54282140c2473da655a05387dae06a5c0da4c7565829958854168489015491611cf2565b611db9565b5050505050565b5060ff8160081c16611d51565b90611e37826116b7565b611e446040519182611695565b8281528092611e55601f19916116b7565b0190602036910137565b60001981146119195760010190565b80518210156115cd5760209160051b01019056fea2646970667358221220995f2ed8ae44ccaf1baf185cb1c6bed7c0f928fea99818f8b8e189c5d99c244164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x29433DEA EQ PUSH2 0x14F1 JUMPI POP DUP1 PUSH4 0x3D478BA9 EQ PUSH2 0x11C6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1156 JUMPI DUP1 PUSH4 0x41508EFA EQ PUSH2 0xF79 JUMPI DUP1 PUSH4 0x42F144BE EQ PUSH2 0xF4C JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xDE1 JUMPI DUP1 PUSH4 0x4DD9D955 EQ PUSH2 0xC14 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xBED JUMPI DUP1 PUSH4 0x6693643F EQ PUSH2 0xBA1 JUMPI DUP1 PUSH4 0x6A8A6894 EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x941 JUMPI DUP1 PUSH4 0x775274A1 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x94259C6C EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xCB802C8B EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xDC93ED78 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xDEDC0B04 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xE739D90D EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xE9C9BD99 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B7 JUMPI PUSH4 0xF8A8A076 EQ PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP7 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1D2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 PUSH2 0x1DB PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x22C JUMPI POP POP PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI DUP4 CALLDATALOAD SWAP2 PUSH2 0x260 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x18EB JUMP JUMPDEST DUP3 DUP5 MSTORE DUP5 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND ISZERO PUSH2 0x46B JUMPI PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x45D JUMPI JUMPDEST POP PUSH2 0x44D JUMPI PUSH1 0x3 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x43D JUMPI PUSH1 0x2 DUP4 ADD SLOAD AND DUP1 PUSH2 0x3BE JUMPI POP CALLVALUE SWAP1 JUMPDEST DUP2 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x6 DUP4 ADD CALLER DUP8 MSTORE DUP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 SLOAD ISZERO PUSH2 0x34D JUMPI JUMPDEST DUP6 SWAP7 SWAP8 SWAP2 PUSH1 0x1 SWAP6 SWAP7 SWAP3 PUSH32 0x86823B9F3F8A793CB18F1212A5FE5661D166FFE64228E2E3C43DC38959FBA8DC SWAP3 CALLER DUP12 MSTORE DUP9 MSTORE DUP2 DUP11 KECCAK256 PUSH2 0x30E DUP7 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP1 SSTORE DUP6 ADD PUSH2 0x31D DUP6 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP8 DUP9 DUP1 SWAP3 SSTORE DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE CALLER SWAP4 LOG3 ADD SLOAD GT ISZERO PUSH2 0x33E JUMPI JUMPDEST POP PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x347 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST CODESIZE PUSH2 0x336 JUMP JUMPDEST PUSH1 0x7 DUP5 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x39C JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x389 JUMPI DUP9 MSTORE DUP6 DUP9 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x32 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x433 JUMPI DUP8 SWAP1 PUSH2 0x400 JUMPI JUMPDEST PUSH2 0x3FB SWAP2 POP DUP1 SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x42C JUMPI JUMPDEST PUSH2 0x416 DUP2 DUP4 PUSH2 0x1695 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x428 JUMPI PUSH2 0x3FB SWAP1 MLOAD PUSH2 0x3EB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x40C JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0xF04E9CF PUSH1 0xE4 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x87F4219 PUSH1 0xE4 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND CODESIZE PUSH2 0x297 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI CALLDATALOAD SWAP2 PUSH1 0x7 SLOAD DUP4 LT ISZERO PUSH2 0x1B4 JUMPI POP PUSH2 0x4A6 PUSH1 0x20 SWAP3 PUSH2 0x1596 JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x20 DUP4 PUSH2 0x4A6 DUP5 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3BF6A96BD439AECCFA0AE079DEBEAFBD20876716BD2E43B00C4F4B9571210281 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP7 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP5 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP1 PUSH2 0x120 SWAP4 DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 SLOAD AND SWAP4 DUP4 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP4 PUSH1 0x2 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP5 ADD SLOAD SWAP1 DUP5 ADD SLOAD SWAP1 PUSH1 0x5 DUP6 ADD SLOAD SWAP3 PUSH1 0x6 DUP7 ADD SLOAD SWAP5 PUSH1 0x8 PUSH1 0xFF PUSH1 0x7 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP8 DUP2 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI SWAP1 PUSH2 0x6D7 PUSH32 0x0 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x700 PUSH32 0x0 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 DUP4 MLOAD SWAP2 PUSH2 0x70D DUP4 PUSH2 0x165D JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH2 0x742 DUP6 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH2 0x735 PUSH1 0x20 SWAP5 PUSH1 0xE0 DUP7 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x1556 JUMP JUMPDEST SWAP1 CHAINID PUSH1 0x60 DUP7 ADD MSTORE ADDRESS PUSH1 0x80 DUP7 ADD MSTORE DUP3 PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP1 DUP1 DUP6 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x779 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x76A JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x7CE PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x810 PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP6 SLOAD AND ISZERO PUSH2 0x932 JUMPI PUSH1 0x5 DUP6 ADD SWAP5 DUP6 SLOAD PUSH1 0xFF DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x924 JUMPI JUMPDEST POP PUSH2 0x914 JUMPI PUSH1 0x3 DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x6 DUP2 ADD SWAP6 CALLER DUP9 MSTORE DUP7 PUSH1 0x20 MSTORE DUP5 DUP9 KECCAK256 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x8F4 JUMPI CALLER DUP10 MSTORE PUSH1 0x20 MSTORE DUP5 DUP9 KECCAK256 DUP9 SWAP1 SSTORE DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x2 ADD SLOAD DUP6 SWAP2 AND DUP1 PUSH2 0x8E3 JUMPI POP DUP6 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0x89C PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x8D5 JUMPI POP JUMPDEST MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEF652412E5D49B8285C2154153B00BE5E175328CAF6225B8A37DB5712FB62A1A PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0x8EF SWAP3 POP CALLER SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x1971FBF3 PUSH1 0xE2 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x30F53A1F PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x87F4219 PUSH1 0xE4 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x8 SHR AND CODESIZE PUSH2 0x83E JUMP JUMPDEST POP SWAP1 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x95A PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x556 JUMPI PUSH2 0x9D2 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH2 0x9E0 DUP2 PUSH2 0x1E2D JUMP JUMPDEST SWAP1 DUP3 SWAP5 DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0xABF JUMPI POP POP DUP5 ISZERO SWAP1 POP PUSH2 0xAA3 JUMPI PUSH1 0x1 SWAP2 DUP3 SWAP5 PUSH2 0xA04 DUP2 PUSH2 0x1E2D JUMP JUMPDEST SWAP3 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA79 JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP8 DUP1 DUP7 ADD MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE DUP8 PUSH1 0x60 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0xA66 JUMPI POP POP POP POP POP SWAP1 PUSH2 0xA4F DUP2 PUSH2 0x1B0 SWAP5 SWAP4 SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 ISZERO ISZERO DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1556 JUMP JUMPDEST DUP5 MLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP3 ADD PUSH2 0xA2A JUMP JUMPDEST DUP1 PUSH2 0xA8A PUSH2 0xA9B SWAP3 DUP5 SWAP9 SWAP7 SWAP9 PUSH2 0x1E6E JUMP JUMPDEST MLOAD PUSH2 0xA95 DUP3 DUP9 PUSH2 0x1E6E JUMP JUMPDEST MSTORE PUSH2 0x1E5F JUMP JUMPDEST SWAP5 SWAP3 SWAP5 PUSH2 0xA07 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x1B0 SWAP1 DUP3 DUP2 MLOAD SWAP1 PUSH2 0xAB7 DUP3 PUSH2 0x165D JUMP JUMPDEST DUP2 MSTORE SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR SWAP1 DUP2 DUP8 MSTORE DUP4 DUP11 MSTORE DUP8 DUP8 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF DUP1 DUP5 AND ISZERO SWAP4 DUP5 PUSH2 0xB4C JUMPI JUMPDEST POP POP DUP3 PUSH2 0xB3A JUMPI JUMPDEST DUP3 PUSH2 0xB2C JUMPI JUMPDEST POP POP PUSH2 0xB12 JUMPI JUMPDEST POP PUSH2 0xB0D SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST DUP8 PUSH2 0xB25 SWAP2 PUSH2 0xA95 PUSH2 0xB0D SWAP5 SWAP11 DUP9 PUSH2 0x1E6E JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0xB03 JUMP JUMPDEST ADD SLOAD TIMESTAMP GT ISZERO SWAP1 POP CODESIZE DUP1 PUSH2 0xAFC JUMP JUMPDEST DUP6 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT ISZERO SWAP3 POP PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO SWAP3 POP CODESIZE DUP1 PUSH2 0xAEE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB84 PUSH2 0x1540 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xBE9 JUMPI SWAP3 DUP3 SWAP2 DUP5 PUSH1 0x20 SWAP6 CALLDATALOAD DUP4 MSTORE DUP6 MSTORE PUSH1 0x6 DUP4 DUP4 KECCAK256 ADD SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x556 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x556 JUMPI PUSH2 0xC2F PUSH2 0x1540 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP1 DUP6 SUB PUSH2 0x428 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0xC55 PUSH2 0x18EB JUMP JUMPDEST DUP9 AND SWAP5 DUP6 ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI JUMPDEST PUSH2 0xDC9 JUMPI TIMESTAMP DUP4 GT ISZERO PUSH2 0xDC9 JUMPI DUP7 MLOAD PUSH1 0x20 SWAP10 DUP11 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 SWAP3 PUSH1 0x60 SHL AND DUP5 MSTORE DUP7 PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x54 DUP3 ADD MSTORE DUP4 PUSH1 0x68 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x88 DUP3 ADD MSTORE PUSH1 0x88 DUP2 MSTORE PUSH2 0xCAF DUP2 PUSH2 0x1641 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP6 DUP3 MSTORE DUP1 DUP11 MSTORE DUP4 PUSH1 0x3 DUP10 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE DUP9 PUSH1 0x1 DUP4 ADD SSTORE DUP7 PUSH1 0x2 DUP4 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD SSTORE PUSH1 0x8 DUP11 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0xD34 JUMPI JUMPDEST POP POP DUP6 MLOAD SWAP3 DUP4 MSTORE DUP8 DUP4 ADD MSTORE DUP2 DUP6 ADD MSTORE PUSH32 0x8F26321C4618EC8C97913B89682571E04749F4B1788DBA40ABD70FDCEE9A6005 SWAP1 PUSH1 0x60 SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xDB6 JUMPI POP SWAP3 PUSH1 0x60 SWAP3 DUP8 DUP10 SWAP7 SWAP4 PUSH2 0xD84 DUP8 PUSH1 0x1 PUSH32 0x8F26321C4618EC8C97913B89682571E04749F4B1788DBA40ABD70FDCEE9A6005 SWAP10 ADD PUSH1 0x7 SSTORE PUSH2 0x1596 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP11 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE DUP8 DUP2 MSTORE PUSH1 0x8 DUP13 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE SWAP2 SWAP4 DUP2 SWAP4 POP PUSH2 0xCF9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x49FF0C8F PUSH1 0xE1 SHL DUP2 MSTORE DUP6 SWAP1 REVERT JUMPDEST POP DUP4 ISZERO PUSH2 0xC61 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP5 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xBE9 JUMPI PUSH2 0xE15 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST DUP2 SWAP6 SWAP2 ADD SWAP5 DUP3 DUP2 DUP8 SUB SLT PUSH2 0xF48 JUMPI DUP1 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xF48 JUMPI ADD SWAP5 DUP5 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0xBE9 JUMPI DUP6 CALLDATALOAD SWAP5 PUSH2 0xE45 DUP7 PUSH2 0x16B7 JUMP JUMPDEST SWAP7 PUSH2 0xE52 DUP6 MLOAD SWAP9 DUP10 PUSH2 0x1695 JUMP JUMPDEST DUP7 DUP9 MSTORE DUP4 DUP9 ADD SWAP1 DUP5 PUSH1 0x5 SWAP9 DUP10 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x428 JUMPI DUP5 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF38 JUMPI POP POP POP POP DUP4 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xF34 JUMPI DUP1 PUSH2 0xE93 PUSH2 0xEC9 SWAP3 DUP10 PUSH2 0x1E6E JUMP JUMPDEST MLOAD DUP1 DUP8 MSTORE DUP4 DUP6 MSTORE DUP6 DUP8 KECCAK256 DUP9 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF DUP1 DUP4 AND ISZERO SWAP3 DUP4 PUSH2 0xF26 JUMPI JUMPDEST POP POP DUP2 PUSH2 0xF14 JUMPI JUMPDEST DUP2 PUSH2 0xF05 JUMPI JUMPDEST POP PUSH2 0xECE JUMPI JUMPDEST POP PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0x1D30 JUMP JUMPDEST PUSH32 0x1295FC1476EA13733F3084EFFFF7A9178DAF713E97031B21ED33BF8F4E71A452 DUP6 DUP8 MLOAD TIMESTAMP DUP2 MSTORE LOG2 CODESIZE PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO CODESIZE PUSH2 0xEBD JUMP JUMPDEST DUP6 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT ISZERO SWAP2 POP PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO SWAP2 POP CODESIZE DUP1 PUSH2 0xEAF JUMP JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP6 SWAP2 ADD PUSH2 0xE6F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI DUP2 CALLDATALOAD PUSH2 0xF92 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0xF9A PUSH2 0x18EB JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0x7 DUP5 ADD SLOAD AND ISZERO PUSH2 0x1147 JUMPI PUSH1 0x6 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x1138 JUMPI PUSH1 0x5 DUP4 ADD SWAP4 DUP5 SLOAD TIMESTAMP LT PUSH2 0x112A JUMPI PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 PUSH2 0x10E3 JUMPI POP PUSH1 0x3 DUP6 ADD DUP1 SLOAD DUP1 CALLVALUE LT PUSH2 0x10D3 JUMPI DUP9 DUP1 DUP1 DUP1 SWAP4 DUP8 PUSH1 0x1 DUP13 ADD SLOAD AND GAS CALL PUSH2 0x1005 PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x10C4 JUMPI SLOAD DUP1 CALLVALUE GT PUSH2 0x107E JUMPI JUMPDEST POP SWAP1 PUSH2 0x1047 PUSH32 0x3C383309B20DFAE2B367289760FD90DE73B4FCE8F3A3667600A9A66B6ADEF5BC SWAP4 SWAP3 JUMPDEST DUP7 ADD SLOAD DUP8 SLOAD PUSH2 0x190C JUMP JUMPDEST DUP1 SWAP7 SSTORE PUSH1 0x3 DUP6 ADD SLOAD SWAP1 PUSH1 0x8 DUP7 ADD PUSH2 0x105F DUP4 DUP3 SLOAD PUSH2 0x190C JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP2 DUP8 SLOAD AND SWAP7 ADD SLOAD AND SWAP6 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG4 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST CALLVALUE SUB CALLVALUE DUP2 GT PUSH2 0x10B1 JUMPI DUP8 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0x1097 PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x10A3 JUMPI CODESIZE PUSH2 0x1014 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP3 SWAP2 PUSH2 0x1125 PUSH2 0x1047 SWAP3 PUSH32 0x3C383309B20DFAE2B367289760FD90DE73B4FCE8F3A3667600A9A66B6ADEF5BC SWAP7 SWAP6 DUP10 SLOAD AND DUP6 PUSH1 0x1 DUP12 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP12 ADD SLOAD SWAP3 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x856A7577 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x893DCECF PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST MLOAD PUSH4 0xDF0F4E9 PUSH1 0xE4 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1170 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x11B8 JUMPI POP PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x242 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0xBE9 JUMPI PUSH2 0x100 SGT PUSH2 0x242 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x104 CALLDATALOAD DUP4 DUP2 GT PUSH2 0xF48 JUMPI PUSH2 0x1205 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP4 PUSH2 0x120F PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1217 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x121F PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1227 PUSH2 0x1A2B JUMP JUMPDEST SWAP3 PUSH2 0x1230 PUSH2 0x1A41 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD SWAP7 PUSH1 0x84 CALLDATALOAD SWAP9 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xE4 CALLDATALOAD SWAP6 DUP10 MLOAD DUP11 PUSH1 0x20 SWAP10 DUP11 DUP4 ADD SWAP4 PUSH32 0x3BF6A96BD439AECCFA0AE079DEBEAFBD20876716BD2E43B00C4F4B9571210281 DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 SWAP4 DUP5 DUP1 SWAP4 AND SWAP1 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE DUP12 PUSH1 0xA0 DUP3 ADD MSTORE DUP13 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP9 PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP3 MSTORE PUSH2 0x140 DUP3 ADD SWAP1 DUP3 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x14DE JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x42 SWAP1 PUSH2 0x12D6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 DUP12 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 PUSH2 0x12F6 DUP3 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH2 0x1303 DUP12 MLOAD SWAP3 DUP4 PUSH2 0x1695 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP14 CALLDATASIZE DUP5 DUP7 ADD GT PUSH2 0x1B4 JUMPI DUP10 DUP5 PUSH2 0x1327 SWAP6 PUSH2 0x1330 SWAP8 DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A57 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1B23 JUMP JUMPDEST DUP7 DUP1 PUSH2 0x133A PUSH2 0x1A15 JUMP JUMPDEST AND SWAP2 AND SUB PUSH2 0x14D0 JUMPI DUP6 PUSH2 0x134B PUSH2 0x1A15 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0x5 DUP6 MSTORE DUP7 DUP11 KECCAK256 DUP5 DUP12 MSTORE DUP6 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x14C2 JUMPI DUP3 TIMESTAMP GT PUSH2 0x14B4 JUMPI SWAP3 PUSH1 0x1 PUSH1 0x7 DUP10 DUP9 SWAP7 SWAP6 DUP11 SWAP9 SWAP6 DUP14 DUP16 SWAP13 SWAP9 DUP10 DUP12 SWAP11 DUP16 PUSH32 0x50994AF435709064071E6160587EB110AEE99F876E414493EA76DF89D06E1B4D SWAP16 PUSH2 0x13AA PUSH2 0x1A15 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP13 MSTORE DUP2 DUP2 KECCAK256 DUP12 DUP3 MSTORE DUP13 MSTORE KECCAK256 SWAP9 PUSH1 0xFF NOT SWAP10 DUP10 DUP12 DUP3 SLOAD AND OR SWAP1 SSTORE DUP11 PUSH2 0x13D0 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 PUSH2 0x13D9 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x1A41 JUMP JUMPDEST DUP6 MLOAD SWAP4 DUP5 ADD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP3 DUP4 DUP1 SWAP3 PUSH1 0x60 SHL AND DUP8 MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP6 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x5C DUP3 ADD MSTORE PUSH1 0x5C DUP2 MSTORE PUSH2 0x141E DUP2 PUSH2 0x160F JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP15 DUP16 DUP2 MSTORE PUSH1 0x6 DUP12 MSTORE KECCAK256 SWAP5 DUP11 PUSH2 0x1434 PUSH2 0x1A15 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP9 SLOAD AND OR DUP8 SSTORE PUSH2 0x1450 PUSH2 0x1A2B JUMP JUMPDEST DUP13 DUP11 DUP10 ADD SWAP2 AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1465 PUSH2 0x1A41 JUMP JUMPDEST SWAP1 DUP13 PUSH1 0x2 DUP10 ADD SWAP3 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP7 ADD SSTORE DUP5 ADD SSTORE PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1496 PUSH2 0x1A15 JUMP JUMPDEST SWAP8 PUSH2 0x149F PUSH2 0x1A2B JUMP JUMPDEST SWAP2 DUP6 MLOAD SWAP9 DUP10 MSTORE DUP9 ADD MSTORE AND SWAP6 AND SWAP4 LOG4 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x893DCECF PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x1F6D5AEF PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x556 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x556 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x153B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x153B JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x153B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x153B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1582 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x162B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x162B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x170D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16F1 DUP4 PUSH2 0x1679 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x17EF JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x17DB JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x17BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x175C JUMPI JUMPDEST POP POP PUSH2 0x1759 SWAP3 POP SUB DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x17A3 JUMPI POP POP PUSH2 0x1759 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x178B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1759 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x181B JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16F1 DUP4 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP1 DUP1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x18C5 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP5 LT DUP2 EQ PUSH2 0x17DB JUMPI DUP4 DUP8 MSTORE DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x17BB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1866 JUMPI POP POP PUSH2 0x1759 SWAP3 POP SUB DUP3 PUSH2 0x1695 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x18AD JUMPI POP POP PUSH2 0x1759 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x174B JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1895 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1836 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x162B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x18FA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1919 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x162B JUMPI PUSH2 0x1988 SWAP3 PUSH1 0x40 MSTORE PUSH2 0x198A JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x19E6 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x19DD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x19BB JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1A03 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x153B JUMPI SWAP1 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x1A88 JUMPI PUSH2 0x1A81 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1A93 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1B17 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1B0B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1B02 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1B92 JUMPI DUP1 PUSH2 0x1B35 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1B4F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1B7A JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1C99 JUMPI JUMPDEST ISZERO PUSH2 0x1C03 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1C93 DUP2 PUSH2 0x1641 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1BDA JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CED JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1CD3 DUP3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 PUSH2 0x1CE1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1695 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1988 SWAP2 PUSH2 0x1D2B DUP3 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x198A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND DUP1 ISZERO PUSH2 0x1E20 JUMPI JUMPDEST PUSH2 0x1E19 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND DUP1 PUSH2 0x1DDA JUMPI POP DUP1 DUP1 DUP1 DUP5 DUP8 SLOAD AND PUSH1 0x4 DUP9 ADD SLOAD SWAP1 GAS CALL PUSH2 0x1D8C PUSH2 0x1CC2 JUMP JUMPDEST POP ISZERO PUSH2 0x1DC8 JUMPI PUSH1 0x20 PUSH1 0x4 PUSH32 0x133405E74FA883CC1E7A54282140C2473DA655A05387DAE06A5C0DA4C7565829 SWAP3 JUMPDEST DUP6 SLOAD AND SWAP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP DUP3 PUSH2 0x1E14 PUSH1 0x4 SWAP3 PUSH32 0x133405E74FA883CC1E7A54282140C2473DA655A05387DAE06A5C0DA4C7565829 SWAP6 DUP9 SLOAD AND DUP5 DUP10 ADD SLOAD SWAP2 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x1DB9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x1D51 JUMP JUMPDEST SWAP1 PUSH2 0x1E37 DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1E44 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1695 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1E55 PUSH1 0x1F NOT SWAP2 PUSH2 0x16B7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x15CD JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH0 0x2E 0xD8 0xAE PREVRANDAO 0xCC 0xAF SHL 0xAF XOR 0x5C 0xB1 0xC6 0xBE 0xD7 0xC0 0xF9 0x28 INVALID 0xA9 SWAP9 XOR 0xF8 0xB8 0xE1 DUP10 0xC5 0xD9 SWAP13 0x24 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1006:15986:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;;;;;;;;;;;;;2539:43;;1006:15986;2539:43;;;1006:15986;;2539:43;;1006:15986;2539:43;;;1006:15986;2539:43;;;;1006:15986;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;1006:15986:26;;;;2627:22:0;;2623:91;;1006:15986:26;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;3052:40:0;;;;1006:15986:26;;2623:91:0;1006:15986:26;-1:-1:-1;;;2672:31:0;;;;;1006:15986:26;;;;;2672:31:0;1006:15986:26;;;;;;;;;;;;;;;;;;2466:103:13;;;:::i;:::-;1315:72:12;;:::i;:::-;1006:15986:26;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;6129:28;6125:57;;6196:16;;;1006:15986;;;;6196:36;;;;;1006:15986;6192:73;;;1006:15986;6297:16;;1006:15986;6279:15;:34;6275:63;;6377:13;;;1006:15986;;6377:27;;;6429:9;;6373:261;;6648:11;;6644:39;;6738:21;;;6760:10;1006:15986;;;;;;;;;6738:38;6734:106;;6373:261;6760:10;;;;1006:15986;6760:10;;;6952:70;6760:10;;1006:15986;;;;;;;6849:43;1006:15986;;;6849:43;:::i;:::-;1006:15986;;6902:24;;:34;1006:15986;;;6902:34;:::i;:::-;1006:15986;;;;;;;;;;;;;6760:10;6952:70;;7138:21;1006:15986;-1:-1:-1;7110:49:26;7106:106;;6373:261;1006:15986;;;;;;7106:106;7191:9;;;:::i;:::-;7106:106;;;6734;6792:20;;;1006:15986;;;-1:-1:-1;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1006:15986:26;6760:10;1006:15986;;;6734:106;;1006:15986;-1:-1:-1;;;1006:15986:26;;;;;;;;;-1:-1:-1;;;1006:15986:26;;;;;;;;6644:39;1006:15986;-1:-1:-1;;;6668:15:26;;1006:15986;;6668:15;6373:261;1006:15986;;;;;;6478:58;;6510:10;6478:58;;;1006:15986;6530:4;1006:15986;;;;6478:58;;1006:15986;6478:58;;;;;;;;;;;;6373:261;6616:6;6469:67;;;6530:4;;6510:10;;6616:6;;:::i;:::-;6373:261;;6478:58;;;;;;;;;;;;;;;:::i;:::-;;;1006:15986;;;;6616:6;1006:15986;;6478:58;;1006:15986;;;;6478:58;;;;;;1006:15986;;;;;;;;;6275:63;1006:15986;;-1:-1:-1;;;6322:16:26;;1006:15986;;6322:16;6192:73;1006:15986;;-1:-1:-1;;;6241:24:26;;1006:15986;;6241:24;6196:36;1006:15986;;;;;;6196:36;;;6125:57;1006:15986;;-1:-1:-1;;;6166:16:26;;1006:15986;;6166:16;1006:15986;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;2923:30;1006:15986;2923:30;;;;;;;1006:15986;2923:30;;:::i;:::-;1006:15986;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;;16741:13;1006:15986;16733:28;;1006:15986;;;;16802:20;;;;:::i;1006:15986::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;2281:198;1006:15986;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;;;;;;;;;;;;;16153:21;;1006:15986;16188:13;;;1006:15986;;16215:16;;1006:15986;16245:24;;;1006:15986;16283:16;;;;1006:15986;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;;;;;2787:59;1006:15986;;;;;;;;;;;;;2787:59;;1006:15986;2787:59;;1006:15986;;2787:59;;;;1006:15986;;2787:59;1006:15986;2787:59;;1006:15986;2787:59;;;1006:15986;2787:59;;;;1006:15986;2787:59;;;;1006:15986;2787:59;;1006:15986;2787:59;;;1006:15986;;2787:59;;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;6183:5:18;:41;:5;:41;:::i;:::-;6638:47;:8;:47;:::i;:::-;1006:15986:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5674:13:18;;1006:15986:26;;;;5709:4:18;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;2427:20:12;1500:62:0;;;:::i;:::-;1315:72:12;;:::i;:::-;1006:15986:26;;;-1:-1:-1;;;;1006:15986:26;-1:-1:-1;;;1006:15986:26;;;;735:10:10;1006:15986:26;;2427:20:12;1006:15986:26;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;2466:103:13;;;:::i;:::-;1006:15986:26;;;;;;;;;;;;;;;;;;;11401:28;11397:57;;11468:16;;;1006:15986;;;;;;11468:36;;;;;1006:15986;11464:73;;;1006:15986;11570:16;;1006:15986;11551:15;:35;;11547:67;;11648:21;;;11670:10;;1006:15986;;;;;;;;;11695:17;;;11691:46;;11670:10;1006:15986;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;11860:13;;1006:15986;11670:10;;1006:15986;11860:27;;;11670:10;;;;;;;11921:40;;;;:::i;:::-;;11979:8;11975:37;;11856:258;;1006:15986;;;;12129:52;1006:15986;11670:10;12129:52;;1006:15986;;;;;11975:37;1006:15986;;-1:-1:-1;;;11996:16:26;;;11856:258;12090:12;11670:10;;;12090:12;;:::i;:::-;11856:258;;11691:46;1006:15986;;-1:-1:-1;;;11721:16:26;;1006:15986;;11721:16;11547:67;1006:15986;;-1:-1:-1;;;11595:19:26;;1006:15986;;11595:19;11464:73;1006:15986;;-1:-1:-1;;;11513:24:26;;1006:15986;;11513:24;11468:36;1006:15986;;;;;;11468:36;;;11397:57;-1:-1:-1;1006:15986:26;;-1:-1:-1;;;11438:16:26;;;1006:15986;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;1006:15986:26;;-1:-1:-1;;;;;;1006:15986:26;;;;;;;-1:-1:-1;;;;;1006:15986:26;3052:40:0;1006:15986:26;;3052:40:0;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13210:1543;;13500:13;1006:15986;13486:35;;;:::i;:::-;13531:17;;13642:13;;13657:24;;;;;;-1:-1:-1;;14275:9:26;;;-1:-1:-1;14275:9:26;;14315:4;14300:19;;14448:20;;;;:::i;:::-;14487:13;;14502:9;;;;;;1006:15986;;;;;;;;;14630:25;;;;1006:15986;;;;;;;;;;;;;;;;;;;;14630:25;;;;;;;;1006:15986;14630:25;;;;;;;;;;;:::i;:::-;14271:476;;1006:15986;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;14513:3;14555:20;;14513:3;14555:20;;;;;;:::i;:::-;1006:15986;14536:39;;;;:::i;:::-;1006:15986;14513:3;:::i;:::-;14487:13;;;;;14271:476;14686:20;;;1006:15986;14686:20;;1006:15986;;;;;;:::i;:::-;;;14271:476;;;13683:3;13722:16;;;:::i;:::-;1006:15986;;;;;;;;;;;;;;;;;13898:16;;;;1006:15986;;;;;;13897:17;:55;;;;13683:3;13897:125;;;;;13683:3;13897:180;;;13683:3;13893:280;;;;13683:3;;;;;:::i;:::-;13642:13;;13893:280;14097:36;14151:7;14097:36;;13683:3;14097:36;;;;:::i;14151:7::-;13893:280;;;;13897:180;14061:16;1006:15986;14042:15;:35;;;-1:-1:-1;13897:180:26;;;;:125;13973:24;;;1006:15986;14001:21;;;1006:15986;-1:-1:-1;13973:49:26;;-1:-1:-1;13897:125:26;;:55;1006:15986;;;13935:17;;-1:-1:-1;13897:55:26;;;;1006:15986;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;:::i;:::-;;;;2648:62;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;16466:33;1006:15986;;;16466:33;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:7:12;1006:15986:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;1315:72:12;;;:::i;:::-;1006:15986:26;;5119:20;;;:42;;;;1006:15986;5115:71;;5212:15;5200:27;;;5196:56;;1006:15986;;;5285:73;;;;1006:15986;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;5212:15;1006:15986;;;;;5285:73;;;;;:::i;:::-;1006:15986;5275:84;;1006:15986;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;5466:21;1006:15986;5466:21;;1006:15986;5513:13;;;;1006:15986;;;;;;;5544:16;1006:15986;5639:14;1006:15986;;;;;;;;5638:26;5634:132;;1006:15986;-1:-1:-1;;1006:15986:26;;;;;;;;;;;;;5781:65;;1006:15986;;5781:65;1006:15986;;;;;5634:132;1006:15986;;;;;;5680:13;1006:15986;;-1:-1:-1;;;1006:15986:26;;;;;;;;;;;;;;;;5781:65;1006:15986;;5680:13;1006:15986;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5639:14;1006:15986;;;;;;;;;;;;5634:132;;;;;;;1006:15986;-1:-1:-1;;;1006:15986:26;;;;;;;;5196:56;1006:15986;;-1:-1:-1;;;5236:16:26;;1006:15986;;5236:16;5119:42;5143:18;;;5119:42;;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15076:36;;;;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15178:13;;;;;15223:3;1006:15986;;15193:28;;;;;15262:20;;15223:3;15262:20;;;:::i;:::-;1006:15986;;;;;;;;;;15433:16;;;1006:15986;;;;;;15432:17;:55;;;;15223:3;15432:125;;;;;15223:3;15432:180;;;15223:3;15428:315;;;15223:3;;;:::i;:::-;15178:13;;15428:315;15648:9;;;:::i;:::-;15681:47;1006:15986;;;15712:15;1006:15986;;15681:47;15428:315;;;15432:180;1006:15986;15596:16;;;1006:15986;15577:15;:35;;15432:180;;;:125;15508:24;;;1006:15986;15536:21;;;1006:15986;-1:-1:-1;15508:49:26;;-1:-1:-1;15432:125:26;;:55;1006:15986;;;15470:17;;-1:-1:-1;15432:55:26;;;;15193:28;;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;;;;;;3027:46;1006:15986;;;;;;;;;;;;;;-1:-1:-1;1006:15986:26;;;;-1:-1:-1;;1006:15986:26;;;;;;2466:103:13;;:::i;:::-;1315:72:12;;:::i;:::-;1006:15986:26;;;9566:13;1006:15986;;;;;9620:19;1006:15986;9620:19;;;1006:15986;;9619:20;9615:49;;9566:13;9696:25;;1006:15986;9678:15;:43;9674:77;;9783:20;;;1006:15986;;;9678:15;9765:38;9761:71;;9874:18;;;1006:15986;-1:-1:-1;;;;;1006:15986:26;9874:18;1006:15986;;9874:32;1006:15986;;10004:30;1006:15986;10004:30;;1006:15986;;9992:9;;:42;9988:70;;10103:19;;;;;;1006:15986;10103:19;;1006:15986;;10103:67;;;;:::i;:::-;;10188:8;10184:37;;1006:15986;9992:9;;10281:42;10277:236;;9870:891;;;10808:52;10942:201;9870:891;;;10832:28;;1006:15986;;;10808:52;:::i;:::-;1006:15986;;;;10896:30;;1006:15986;10870:22;;;;:56;1006:15986;;;10870:56;:::i;:::-;1006:15986;;;;;;;11036:19;;1006:15986;;;;;;;;;;;;10942:201;1006:15986;;;;;10277:236;9992:9;1006:15986;9992:9;1006:15986;;;;10367:10;;;;;;:70;;;;:::i;:::-;;10459:14;10455:43;;10277:236;;;10455:43;1006:15986;;-1:-1:-1;;;10482:16:26;;;1006:15986;-1:-1:-1;;;1006:15986:26;;;;;;;;10184:37;-1:-1:-1;1006:15986:26;;-1:-1:-1;;;10205:16:26;;;9988:70;1006:15986;;-1:-1:-1;;;10043:15:26;;1006:15986;;10043:15;9870:891;1006:15986;;10706:30;10808:52;1006:15986;10942:201;1006:15986;;;;;10669:19;1006:15986;10669:19;;1006:15986;;10706:30;1006:15986;10706:30;;1006:15986;10706:30;;:::i;:::-;9870:891;;9761:71;1006:15986;;-1:-1:-1;;;9812:20:26;;;9674:77;1006:15986;-1:-1:-1;;;9730:21:26;;1006:15986;;9730:21;9615:49;1006:15986;-1:-1:-1;;;9648:16:26;;1006:15986;;9648:16;1006:15986;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;1796:7:12;1006:15986:26;;;;;;;2140:9:12;2136:62;;-1:-1:-1;;;;;1006:15986:26;1796:7:12;1006:15986:26;;735:10:10;1006:15986:26;;2674:22:12;;1006:15986:26;;2674:22:12;1006:15986:26;;2136:62:12;1006:15986:26;;-1:-1:-1;;;2172:15:12;;;1006:15986:26;;;;;;;-1:-1:-1;;1006:15986:26;;;;;;;-1:-1:-1;1006:15986:26;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:13;;;;:::i;:::-;1315:72:12;;:::i;:::-;7689:13:26;;:::i;:::-;7716:14;;:::i;:::-;7744:13;;;:::i;:::-;1006:15986;7771:25;1006:15986;;7810:23;1006:15986;;7883:20;1006:15986;;7917:13;1006:15986;;;;7716:14;;7622:318;;;;1006:15986;2281:198;1006:15986;;;;;;;;;;;;;;;;;;;7771:25;1006:15986;;;;7810:23;1006:15986;;;;;;;;;7883:20;1006:15986;;;7847:22;1006:15986;;;;;;;;;;;;;;;;;;7622:318;;1006:15986;;;;;;;;;;;;;;;;7612:329;;3993:249:19;;5153:20:18;;:::i;:::-;3993:249:19;;;;-1:-1:-1;;;3993:249:19;;;;;;;;;;;1006:15986:26;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3871:27:17;1006:15986:26;3927:8:17;1006:15986:26;;;;;;;;;3871:27:17;:::i;:::-;3927:8;;;;;:::i;:::-;8078:13:26;;;;:::i;:::-;1006:15986;;;8068:23;8064:54;;8143:13;;;:::i;:::-;1006:15986;;;8132:10;1006:15986;;;;;;;;;;;;;;;;8128:64;;8206:15;;:38;8202:72;;8326:13;1006:15986;9050:19;8326:13;;;;;;;;;;;;;;;9092:189;8326:13;;;:::i;:::-;1006:15986;;;8132:10;1006:15986;;;;;;;;;;;;;;;;;;;;;;;8470:13;;;:::i;:::-;8498:14;;;:::i;:::-;8527:13;;:::i;:::-;1006:15986;;8440:137;;;1006:15986;-1:-1:-1;;;;;1006:15986:26;;;;;7771:25;1006:15986;;;;7771:25;1006:15986;;;;;;7771:25;1006:15986;;;;;;;;;;;8440:137;;;;;:::i;:::-;1006:15986;8430:148;;1006:15986;;;;8631:13;1006:15986;;;8692:13;;;;:::i;:::-;1006:15986;-1:-1:-1;;;;;1006:15986:26;;;;;;;;;;8737:14;;:::i;:::-;8715:19;;;;1006:15986;;;;;;;;;8782:13;;:::i;:::-;8761:18;;3993:249:19;8761:18:26;;1006:15986;;;;;;;;;;8805:30;;1006:15986;8873:28;;1006:15986;8132:10;8937:20;;1006:15986;8631:13;8992:25;;1006:15986;9050:19;1006:15986;;;;;;;9154:13;;:::i;:::-;9181:14;;;:::i;:::-;1006:15986;;;;;;;;;;;;9092:189;;1006:15986;;;;;8202:72;1006:15986;;-1:-1:-1;;;8253:21:26;;;8128:64;1006:15986;;-1:-1:-1;;;8181:11:26;;;8064:54;1006:15986;;-1:-1:-1;;;8100:18:26;;;1006:15986;-1:-1:-1;;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;16606:13;1006:15986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;14630:25;;;1006:15986;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;5680:13;1006:15986;;;;;;5680:13;-1:-1:-1;1006:15986:26;;;;-1:-1:-1;1006:15986:26;:::o;:::-;;;;;;;;;;;;1796:162:0;1006:15986:26;;-1:-1:-1;;;;;1006:15986:26;735:10:10;1855:23:0;1851:101;;1796:162::o;1851:101::-;1006:15986:26;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;1006:15986:26;;;1901:40:0;1006:15986:26;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;14630:25;;;1006:15986;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;3368:267:14:-;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;1006:15986:26;;;;;;:::i;:::-;2324:106:14;;2311:2;1006:15986:26;;2324:106:14;3553:22;:::o;2675:69::-;1006:15986:26;;-1:-1:-1;;;2713:20:14;;;;;3487:142;1006:15986:26;;;-1:-1:-1;6210:13:18;1390:66:14;;;;;;;;;;;;;;;3487:142;1390:66;;;;;;;;;1006:15986:26;;;;;;;;1390:66:14;;;;;;;;;;;;;;;;;;:::i;:::-;3606:12;:::o;1390:66::-;1006:15986:26;;;;6210:13:18;-1:-1:-1;1006:15986:26;;1390:66:14;-1:-1:-1;1390:66:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1390:66:14;;;;;;;1006:15986:26;;;1390:66:14;1006:15986:26;;;;;1390:66:14;1006:15986:26;;;1390:66:14;;;;;;;;;;;;;-1:-1:-1;;;1390:66:14;;;;;;1006:15986:26;1390:66:14;;;;;;;;3368:267;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;1006:15986:26;;;;;;:::i;3487:142:14:-;1006:15986:26;;;-1:-1:-1;6668:16:18;1390:66:14;;;;;;;;;;;;;;;3487:142;1390:66;;;;;;;;;1006:15986:26;;;;;;;;1390:66:14;;;;;;;;;;;;;;;;;:::i;:::-;1006:15986:26;;;;6668:16:18;-1:-1:-1;1006:15986:26;;1390:66:14;-1:-1:-1;1390:66:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1390:66:14;;;;;;;;;;;;;1006:15986:26;;;;;;14630:25;1006:15986;-1:-1:-1;;1006:15986:26;;;;:::o;1878:128:12:-;1006:15986:26;1796:7:12;1006:15986:26;;;;1939:61:12;;1878:128::o;1939:61::-;1006:15986:26;;-1:-1:-1;;;1974:15:12;;;;;1006:15986:26;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1618:188:9;1006:15986:26;;-1:-1:-1;;;1745:53:9;;;;-1:-1:-1;;;;;1006:15986:26;;;1745:53:9;;;1006:15986:26;;;;;;;;;;;;;;;;;1745:53:9;;;1006:15986:26;;;;;;;;;;;;;1745:53:9;1006:15986:26;;;1745:53:9;:::i;:::-;1618:188::o;8370:720::-;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;-1:-1:-1;;;;;;1006:15986:26;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;1006:15986:26;;-1:-1:-1;;;9033:40:9;;-1:-1:-1;;;;;1006:15986:26;;;9033:40:9;;;1006:15986:26;;;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:9;;;;;2575:307:13;1899:1;2702:7;1006:15986:26;2702:18:13;2698:86;;1899:1;2702:7;1006:15986:26;2575:307:13:o;2698:86::-;1006:15986:26;;-1:-1:-1;;;2743:30:13;;;;;1006:15986:26;;;-1:-1:-1;;;;;1006:15986:26;;;;;;;:::o;:::-;7716:14;1006:15986;-1:-1:-1;;;;;1006:15986:26;;;;;;;:::o;:::-;7744:13;1006:15986;-1:-1:-1;;;;;1006:15986:26;;;;;;;:::o;2129:778:17:-;1006:15986:26;;;2129:778:17;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:17;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;5203:1551::-;;;6283:66;6270:79;;6266:164;;1006:15986:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:17;;;;;;;;;;;;;;-1:-1:-1;;;;;1006:15986:26;;6579:20:17;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;1006:15986:26;;;;;;;;;;6266:164:17;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;1006:15986:26;;;;;;7366:29:17;;;7411:7;;:::o;7362:444::-;1006:15986:26;7462:38:17;;1006:15986:26;;;;-1:-1:-1;;;7523:23:17;;1006:15986:26;;7523:23:17;7458:348;7576:35;7567:44;;7576:35;;1006:15986:26;;-1:-1:-1;;;7634:46:17;;1006:15986:26;7634:46:17;;1006:15986:26;;;;;7634:46:17;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;1006:15986:26;;;;7763:32:17;;;;;;1006:15986:26;7763:32:17;;1006:15986:26;7763:32:17;1006:15986:26;;;;7375:20:17;1006:15986:26;;;;;7375:20:17;1006:15986:26;3945:262:18;4029:4;4038:11;-1:-1:-1;;;;;1006:15986:26;4021:28:18;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;1006:15986:26;;4304:80:18;;;1006:15986:26;2079:95:18;1006:15986:26;;4326:11:18;1006:15986:26;2079:95:18;;1006:15986:26;4339:14:18;2079:95;;;1006:15986:26;4355:13:18;2079:95;;;1006:15986:26;4029:4:18;1006:15986:26;2079:95:18;;1006:15986:26;;4304:80:18;;;;;:::i;:::-;1006:15986:26;4294:91:18;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;1006:15986:26;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1006:15986:26;;;;:::o;:::-;;;:::o;1219:160:9:-;1006:15986:26;;-1:-1:-1;;;1328:43:9;;;;-1:-1:-1;;;;;1006:15986:26;;;1328:43:9;;;1006:15986:26;;;;;;;;;1328:43:9;;;;;;1006:15986:26;1328:43:9;:::i;:::-;;:::i;12267:629:26:-;-1:-1:-1;1006:15986:26;;;;12356:8;1006:15986;;;;;12389:16;;;;1006:15986;;;;;12389:36;;;;12267:629;12385:49;;-1:-1:-1;;1006:15986:26;12463:4;1006:15986;;;12520:13;;;1006:15986;-1:-1:-1;;;;;1006:15986:26;12520:13;1006:15986;;12520:27;1006:15986;;;;;;;;;;12356:8;12608:24;;1006:15986;12581:56;;;;;:::i;:::-;;12655:8;12651:37;;1006:15986;12356:8;12821:68;12516:290;;1006:15986;;;12864:24;;1006:15986;;;;;;12821:68;12267:629::o;12651:37::-;1006:15986;;-1:-1:-1;;;12672:16:26;;12356:8;;12672:16;12516:290;1006:15986;;;;12770:24;12356:8;1006:15986;12821:68;1006:15986;;;;12770:24;;;1006:15986;12770:24;;:::i;:::-;12516:290;;12385:49;12427:7;;;;;:::o;12389:36::-;1006:15986;;;;;;12389:36;;1006:15986;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;14630:25;1006:15986;14630:25;;1006:15986;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;1006:15986:26;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"SUBSCRIPTION_CONSENT_TYPEHASH()":"dc93ed78","allInvoiceIds(uint256)":"e739d90d","checkUpkeep(bytes)":"6e04ff0d","createInvoice(address,uint256,address,uint256)":"4dd9d955","createSubscriptionWithConsent((address,address,address,uint256,uint256,uint256,uint256,uint256),bytes)":"3d478ba9","eip712Domain()":"84b0196e","fundInvoice(bytes32)":"e9c9bd99","getContribution(bytes32,address)":"6693643f","getInvoice(bytes32)":"cb802c8b","getInvoiceIdAtIndex(uint256)":"dedc0b04","getTotalInvoiceCount()":"29433dea","invoiceTracked(bytes32)":"42f144be","invoices(bytes32)":"f8a8a076","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","performUpkeep(bytes)":"4585e33b","pullSubscriptionPayment(bytes32)":"41508efa","renounceOwnership()":"715018a6","requestRefund(bytes32)":"775274a1","subscriptions(bytes32)":"94259c6c","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","usedNonces(address,uint256)":"6a8a6894"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConsent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInvoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvoiceAlreadyReleased\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvoiceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvoiceNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoContribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonceUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubscriptionExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SubscriptionNotDue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AutomationTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invoiceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"InvoiceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalContributed\",\"type\":\"uint256\"}],\"name\":\"InvoiceFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvoiceRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvoiceReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPerInterval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalSeconds\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextDue\",\"type\":\"uint256\"}],\"name\":\"SubscriptionPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SUBSCRIPTION_CONSENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allInvoiceIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"invoiceAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createInvoice\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountPerInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct InvoiceSubscription.SubscriptionConsent\",\"name\":\"consent\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"createSubscriptionWithConsent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"}],\"name\":\"fundInvoice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"}],\"name\":\"getInvoice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"invoiceAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInvoiceIdAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalInvoiceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"invoiceTracked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"invoices\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"invoiceAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"released\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionKey\",\"type\":\"bytes32\"}],\"name\":\"pullSubscriptionPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceId\",\"type\":\"bytes32\"}],\"name\":\"requestRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountPerInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced contract for invoice payments and subscription management with Chainlink Automation\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInvoice()\":[{\"details\":\"Custom errors\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"InvoiceCreated(bytes32,address,uint256,address,uint256)\":{\"details\":\"Events\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"params\":{\"checkData\":\"Additional data (not used in this implementation)\"},\"returns\":{\"performData\":\"Encoded invoice IDs that need to be released\",\"upkeepNeeded\":\"True if upkeep is needed\"}},\"createInvoice(address,uint256,address,uint256)\":{\"params\":{\"deadline\":\"Payment deadline timestamp\",\"invoiceAmount\":\"Total amount required\",\"seller\":\"Address that will receive the payment\",\"token\":\"Token address (address(0) for ETH)\"}},\"createSubscriptionWithConsent((address,address,address,uint256,uint256,uint256,uint256,uint256),bytes)\":{\"params\":{\"consent\":\"The subscription consent data\",\"signature\":\"The signed consent\"}},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"fundInvoice(bytes32)\":{\"params\":{\"invoiceId\":\"The invoice to fund\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"performUpkeep(bytes)\":{\"params\":{\"performData\":\"Encoded invoice IDs to release\"}},\"pullSubscriptionPayment(bytes32)\":{\"params\":{\"subscriptionKey\":\"The subscription to process\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requestRefund(bytes32)\":{\"params\":{\"invoiceId\":\"The invoice to refund\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"SUBSCRIPTION_CONSENT_TYPEHASH\":{\"details\":\"EIP-712 type hash for subscription consent\"},\"allInvoiceIds\":{\"details\":\"Array to track all invoice IDs for automation checks\"},\"invoiceTracked\":{\"details\":\"Mapping to check if invoice ID is already tracked\"},\"invoices\":{\"details\":\"Mapping from invoice ID to invoice data\"},\"subscriptions\":{\"details\":\"Mapping from subscription key to active subscription\"},\"usedNonces\":{\"details\":\"Mapping from consent nonce to used status\"}},\"title\":\"InvoiceSubscription\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"Chainlink Automation: Check if any invoices need to be automatically released\"},\"createInvoice(address,uint256,address,uint256)\":{\"notice\":\"Create a new invoice\"},\"createSubscriptionWithConsent((address,address,address,uint256,uint256,uint256,uint256,uint256),bytes)\":{\"notice\":\"Create subscription via EIP-712 signature\"},\"fundInvoice(bytes32)\":{\"notice\":\"Fund an invoice (partial or full payment)\"},\"performUpkeep(bytes)\":{\"notice\":\"Chainlink Automation: Perform the upkeep by releasing funds for ready invoices\"},\"pullSubscriptionPayment(bytes32)\":{\"notice\":\"Execute subscription payment\"},\"requestRefund(bytes32)\":{\"notice\":\"Request refund for expired invoice\"}},\"notice\":\"Handles one-time invoices and subscription-based payments via EIP-712 signatures Features automatic escrow release via Chainlink Automation when invoices are fully funded\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InvoiceSubscription.sol\":\"InvoiceSubscription\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/InvoiceSubscription.sol\":{\"keccak256\":\"0xd6402344849dbd6066a3dd899cf409f2e9c2caf1913c9a221ef88a278b17b1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4abef740800ef6670a1a257c7588e1cce8bc7245a444ed706e9f6d4d59044ffe\",\"dweb:/ipfs/QmZxNdaccntg1653Huw85srw8F8Tzc3y5qzXQHiE52ikac\"]}},\"version\":1}"}},"contracts/SplitBilling.sol":{"SplitBilling":{"abi":[{"inputs":[],"name":"AlreadyPaid","type":"error"},{"inputs":[],"name":"ClaimTransferFailed","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidInput","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SplitExpired","type":"error"},{"inputs":[],"name":"SplitNotFound","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FailedTransferClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"splitId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RecipientPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"splitId","type":"uint256"},{"indexed":true,"internalType":"address","name":"payer","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"recipients","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"name":"SplitCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"splitId","type":"uint256"},{"indexed":true,"internalType":"address","name":"payer","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"successCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"failCount","type":"uint256"}],"name":"SplitExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"splitId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TransferFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"splitId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"UnpaidRecipientAlert","type":"event"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETH_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_RECIPIENTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"splitId","type":"uint256"}],"name":"checkUnpaidRecipients","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"claimFailedTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"createSplit","outputs":[{"internalType":"uint256","name":"splitId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"splitId","type":"uint256"}],"name":"executeSplit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"failedTransfers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getFailedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"splitId","type":"uint256"}],"name":"getSplitDetails","outputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"uint256","name":"successCount","type":"uint256"},{"internalType":"uint256","name":"failCount","type":"uint256"},{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"splitId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"hasRecipientPaid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"splitCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"splitRequests","outputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"uint256","name":"successCount","type":"uint256"},{"internalType":"uint256","name":"failCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x10BB SWAP1 DUP2 PUSH2 0x21 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x91D2788 EQ PUSH2 0xBC8 JUMPI POP DUP1 PUSH4 0x9AE54BE EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x1319AFC3 EQ PUSH2 0xA01 JUMPI DUP1 PUSH4 0x1B60F266 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4BBFFCB1 EQ PUSH2 0x968 JUMPI DUP1 PUSH4 0x58BC8337 EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0x7BEE3C0F EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x9D71463A EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xA24E6E04 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xA6980CE2 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xC854A85D EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xE65C31C4 EQ PUSH2 0x2A0 JUMPI PUSH4 0xF6B30C60 EQ PUSH2 0xC4 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x290 JUMPI JUMPDEST PUSH2 0x27E JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP4 PUSH1 0x7 DUP7 ADD SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH1 0x20 DUP9 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x25F JUMPI POP POP POP DUP5 PUSH2 0x163 SWAP2 SUB DUP6 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH1 0x20 PUSH1 0x8 DUP12 ADD SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x8 DUP3 SWAP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x249 JUMPI POP POP POP DUP8 PUSH2 0x19C SWAP2 SUB DUP9 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x120 SWAP6 DUP7 DUP14 ADD SWAP9 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH2 0x140 DUP6 ADD SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x227 JUMPI POP POP POP PUSH1 0x20 SWAP1 DUP5 DUP4 SUB PUSH2 0x100 DUP7 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x200 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP8 SWAP7 POP PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x186 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x80DF5539 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH2 0x2B9 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x27E JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 SWAP3 DUP4 DUP3 ADD SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 SWAP4 SWAP3 SWAP4 SWAP3 PUSH1 0x7 DUP6 ADD SWAP6 PUSH1 0x9 DUP8 SLOAD SWAP7 ADD SWAP5 JUMPDEST DUP7 DUP2 LT PUSH2 0x3A3 JUMPI STOP JUMPDEST DUP1 PUSH2 0x3B1 PUSH2 0x3DC SWAP3 DUP11 PUSH2 0xD27 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP5 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE DUP9 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3E1 JUMPI JUMPDEST POP PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST DUP7 PUSH32 0xC944E3C30D2006ADF5AFB37E5FE589410B4AE34DAD46F311007DAAC3720EE960 DUP7 PUSH1 0x40 MLOAD DUP10 DUP2 MSTORE LOG3 DUP10 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x367 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29B JUMPI PUSH2 0x45A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC0F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29B JUMPI PUSH2 0x47B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x29B JUMPI PUSH2 0x499 PUSH2 0xD04 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI JUMPDEST PUSH2 0x411 JUMPI DUP1 DUP6 SUB PUSH2 0x411 JUMPI TIMESTAMP PUSH1 0x64 CALLDATALOAD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO SWAP5 DUP6 ISZERO PUSH2 0x8D1 JUMPI CALLVALUE SWAP6 JUMPDEST DUP7 ISZERO DUP1 PUSH2 0x8CA JUMPI JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP3 LT PUSH2 0x86F JUMPI PUSH2 0x2710 SWAP2 POP SUB PUSH2 0x411 JUMPI ISZERO PUSH2 0x783 JUMPI JUMPDEST PUSH2 0x4FE PUSH1 0x3 SLOAD PUSH2 0xC40 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x3 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x752 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x752 JUMPI PUSH1 0x7 DUP2 ADD PUSH2 0x586 DUP5 DUP3 SLOAD DUP2 DUP5 SSTORE DUP4 PUSH2 0xCD0 JUMP JUMPDEST DUP7 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x768 JUMPI POP POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x752 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x752 JUMPI SWAP1 DUP2 PUSH1 0x8 DUP5 SWAP4 ADD PUSH2 0x5CE DUP7 DUP3 SLOAD DUP2 DUP5 SSTORE DUP4 PUSH2 0xCD0 JUMP JUMPDEST DUP7 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x73B JUMPI POP POP POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C0 JUMPI POP POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0xA0 DUP10 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP10 ADD MSTORE MSTORE PUSH1 0xC0 DUP7 ADD SWAP4 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x696 JUMPI POP POP POP DUP5 DUP4 SUB PUSH1 0x80 DUP7 ADD MSTORE DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x29B JUMPI DUP5 PUSH1 0x20 DUP1 SWAP7 DUP7 SWAP5 PUSH32 0xB010E520439FF6123538D2BF911123DCE8A3C0E4007BC029FB3373D9D3BDF8B4 SWAP5 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP10 ADD CALLDATACOPY CALLER SWAP7 ADD SUB ADD SWAP1 LOG3 PUSH2 0x689 DUP2 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x29B JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0x624 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x6CF DUP2 DUP7 DUP9 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD SWAP1 DUP10 DUP3 DUP2 MUL DIV DUP3 EQ DUP11 ISZERO OR ISZERO PUSH2 0x725 JUMPI PUSH2 0x71C SWAP2 PUSH2 0x2710 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP6 DUP11 DUP15 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE DUP12 MUL DIV PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xC40 JUMP JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x5E9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP5 ADD SSTORE DUP7 SWAP6 POP PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x776 DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP6 POP PUSH1 0x20 DUP1 DUP8 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x840 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x834 JUMPI PUSH2 0x806 JUMPI JUMPDEST POP POP PUSH2 0x4F3 JUMP JUMPDEST DUP2 PUSH2 0x825 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x82D JUMPI JUMPDEST PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST POP DUP7 DUP1 PUSH2 0x7FF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP8 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x868 JUMPI JUMPDEST PUSH2 0x858 DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29B JUMPI MLOAD SWAP6 DUP8 PUSH2 0x7C0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x885 PUSH2 0x6FE DUP5 DUP8 DUP12 PUSH2 0xC4F JUMP JUMPDEST AND ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI JUMPDEST PUSH2 0x411 JUMPI PUSH2 0x8AB PUSH2 0x8B1 SWAP2 PUSH2 0x8A4 DUP5 DUP9 DUP11 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC89 JUMP JUMPDEST SWAP2 PUSH2 0xC40 JUMP JUMPDEST SWAP1 PUSH2 0x4DC JUMP JUMPDEST POP PUSH2 0x8C3 DUP3 DUP7 DUP9 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD ISZERO PUSH2 0x88E JUMP JUMPDEST POP DUP1 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x4CC JUMP JUMPDEST POP PUSH1 0x14 DUP6 GT PUSH2 0x4A2 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8FF PUSH2 0xBF9 JUMP JUMPDEST SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x941 JUMPI JUMPDEST PUSH2 0x27E JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x909 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x984 PUSH2 0xD04 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI JUMPDEST PUSH2 0x27E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x9E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x9D2 JUMPI PUSH2 0x9CB SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x289E2D1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD70A0E3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x98D JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 SLOAD AND SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29B JUMPI PUSH2 0xA98 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 PUSH2 0xAA1 PUSH2 0xD04 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP5 MSTORE SWAP1 DUP5 MSTORE SWAP2 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x411 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER PUSH2 0xC350 CALL PUSH2 0xB00 PUSH2 0xD3F JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F65559B767BF231652BB6BBC613C03DA1500C2AF09834B0C638FC41D4B21616 SWAP2 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD PUSH4 0x38116925 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP1 DUP2 PUSH2 0xBAB JUMPI JUMPDEST POP PUSH2 0xBA4 JUMPI PUSH1 0x0 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xBC1 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x82D JUMPI PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST POP DUP6 PUSH2 0xB98 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x29B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x29B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x29B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x29B JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x725 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x29B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x725 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x752 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x29B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x29B JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0xCDE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0xCF9 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xD15 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xD7A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD6E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xC96 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 DUP6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP5 DUP6 SLOAD DUP9 SWAP1 PUSH1 0x7 DUP4 ADD SWAP10 PUSH1 0x1 SWAP11 DUP12 SWAP4 DUP5 DUP7 ADD SWAP13 JUMPDEST PUSH2 0xE1F JUMPI JUMPDEST POP POP POP POP SWAP2 DUP2 DUP6 SWAP4 PUSH32 0xD2AFA6C26B683E76D6A420AF12CB290FB3FD4F25C412E8275BA2D41AC70DA1C6 SWAP9 SWAP7 PUSH1 0x5 PUSH1 0x80 SWAP10 SWAP8 SWAP6 ADD SSTORE DUP6 PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD AND SWAP10 SLOAD AND SWAP5 SLOAD SWAP1 DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP3 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x107A JUMPI PUSH2 0xE3B DUP4 DUP6 PUSH2 0xD27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR DUP2 AND SWAP3 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x1066 JUMPI DUP16 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP16 SWAP3 SWAP1 SWAP2 DUP6 DUP4 SUB PUSH2 0x1053 JUMPI DUP9 SWAP3 JUMPDEST DUP7 LT PUSH2 0x1010 JUMPI JUMPDEST DUP8 DUP13 DUP16 DUP16 SWAP1 DUP6 DUP8 SWAP2 SLOAD AND DUP10 DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0xFA7 JUMPI DUP6 SWAP5 POP DUP5 SWAP4 POP DUP4 SWAP3 SWAP2 POP PUSH2 0xC350 CALL PUSH2 0xEA5 PUSH2 0xD3F JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xF26 JUMPI SWAP1 PUSH2 0xEBD DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0xC40 JUMP JUMPDEST DUP5 DUP9 MSTORE PUSH1 0x9 DUP13 ADD DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP11 OR SWAP1 SSTORE SWAP14 SLOAD DUP14 MLOAD SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x40 DUP2 ADD SUB PUSH32 0xE1E3CFB155281894EFB6D6350898A96E1BBB0B3518440F9E92342C5FD6F4BE09 SWAP2 LOG3 PUSH2 0xF1E SWAP1 PUSH2 0xC40 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xDAE JUMP JUMPDEST SWAP13 SWAP14 SWAP1 PUSH2 0xF39 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0xC40 JUMP JUMPDEST SWAP15 DUP5 DUP9 MSTORE DUP9 DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP3 DUP3 SLOAD AND DUP10 MSTORE DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP4 DUP2 SLOAD SWAP1 PUSH2 0xF5B SWAP2 PUSH2 0xC89 JUMP JUMPDEST SWAP1 SSTORE SLOAD DUP14 MLOAD SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x40 DUP2 ADD SUB PUSH32 0xD7E0FD52BECD56B3D1EB5C8BB25F88A58351AD495AD2B43F0897C755E81ED509 SWAP2 LOG3 PUSH2 0xF1E SWAP1 PUSH2 0xC40 JUMP JUMPDEST SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 PUSH2 0xFF2 JUMPI JUMPDEST POP POP PUSH2 0xFEC JUMPI DUP8 PUSH2 0xEA7 JUMP JUMPDEST DUP10 PUSH2 0xEA7 JUMP JUMPDEST DUP2 PUSH2 0x1008 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x82D JUMPI PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST POP DUP13 CODESIZE PUSH2 0xFE0 JUMP JUMPDEST SWAP3 POP SWAP3 SWAP5 SWAP7 SWAP1 DUP1 SWAP5 SWAP7 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0x103F JUMPI DUP16 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP1 SWAP7 SWAP1 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP16 SWAP3 PUSH2 0xE7B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 DUP9 MSTORE PUSH1 0xA DUP12 ADD DUP13 MSTORE DUP13 DUP9 KECCAK256 SLOAD SWAP3 PUSH2 0xE74 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xDB3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE10C589649A0B7E4A8FCB2B4B0CECC2E 0xC0 0xEF 0x25 ADD 0xC5 JUMP SELFBALANCE 0xBC DUP9 0xC1 PUSH28 0xA08E91BE64736F6C6343000814003300000000000000000000000000 ","sourceMap":"381:9812:27:-:0;;;;;;;1857:1:13;2061:21;1857:1;381:9812:27;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3065,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13350":{"entryPoint":3043,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":3087,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":3256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":3151,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_storage_array_end_array_address_dyn":{"entryPoint":3280,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":3391,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":3222,"id":null,"parameterSlots":2,"returnSlots":0},"fun_executeSplit":{"entryPoint":3455,"id":10719,"parameterSlots":1,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":3332,"id":1721,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":3136,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":3189,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":3367,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c908163091d278814610bc85750806309ae54be14610a7e5780631319afc314610a015780631b60f266146102a05780634bbffcb11461096857806358bc83371461094c5780637bee3c0f146108e35780639d71463a1461042e578063a24e6e0414610348578063a6980ce21461032c578063c854a85d1461030e578063e1f1c4a7146102f1578063e65c31c4146102a05763f6b30c60146100c4573861000f565b3461029b57602036600319011261029b5760043580158015610290575b61027e576000526002602052604060002060018060a01b038154169060018060a01b036001820154169060028101549160038201549360ff6004840154169060058401546006850154936007860194604051928360208854918281520190819860005260206000209060005b81811061025f5750505084610163910385610c96565b6040519586602060088b01549182815201906008829b0160005260206000209060005b818110610249575050508761019c910388610c96565b6040519a8b9a61012095868d01988d5260208d015260408c015260608b0152151560808a015260a089015260c088015260e0870152518091526101408501929060005b81811061022757505050602090848303610100860152519182815201919060005b81811061020e575050500390f35b8251845285945060209384019390920191600101610200565b82516001600160a01b03168552879650602094850194909201916001016101df565b8254845260209093019260019283019201610186565b82546001600160a01b031684526020909301926001928301920161014d565b6040516380df553960e01b8152600490fd5b5060035481116100e1565b600080fd5b3461029b57604036600319011261029b576102b9610be3565b6102c1610bf9565b9060018060a01b038091166000526001602052604060002091166000526020526020604060002054604051908152f35b3461029b57600036600319011261029b5760206040516127108152f35b3461029b57600036600319011261029b576020600354604051908152f35b3461029b57600036600319011261029b57602060405160148152f35b3461029b5760208060031936011261029b576004359081158015610423575b61027e57816000526002815260406000206003928382015480421115610411576000939293926007850195600987549601945b8681106103a357005b806103b16103dc928a610d27565b905490841b1c6001600160a01b03166000818152888652604090205460ff16156103e1575b50610c40565b61039a565b867fc944e3c30d2006adf5afb37e5fe589410b4ae34dad46f311007daac3720ee96086604051898152a3896103d6565b60405163b4fa3fb360e01b8152600490fd5b506003548211610367565b608036600319011261029b5760043567ffffffffffffffff811161029b5761045a903690600401610c0f565b9060243567ffffffffffffffff811161029b5761047b903690600401610c0f565b6044359291906001600160a01b038416840361029b57610499610d04565b841580156108d9575b6104115780850361041157426064351115610411576001600160a01b038416159485156108d15734955b8615806108ca575b610411576000805b84821061086f576127109150036104115715610783575b6104fe600354610c40565b94856003558560005260026020526040600020336bffffffffffffffffffffffff60a01b8254161781556001810160018060a01b0383166bffffffffffffffffffffffff60a01b825416179055876002820155606435600382015567ffffffffffffffff831161075257600160401b8311610752576007810161058684825481845583610cd0565b869060005260206000209060005b8581106107685750505067ffffffffffffffff841161075257600160401b841161075257908160088493016105ce86825481845583610cd0565b869060005260206000209060005b87811061073b5750505060005b8381106106c05750506040519760a089019160018060a01b031689526020890152606435604089015260a060608901525260c0860193906000905b8082106106965750505084830360808601528083526001600160fb1b03811161029b57846020809686947fb010e520439ff6123538d2bf911123dce8a3c0e4007bc029fb3373d9d3bdf8b49460051b809184890137339601030190a361068981610d7f565b6001600055604051908152f35b90919485359060018060a01b03821680920361029b57602081600193829352019601920190610624565b909192506106cf818688610c4f565b3590898281020482148a1517156107255761071c91612710906001600160a01b036107036106fe858a8e610c4f565b610c75565b16600052600a85016020528b0204604060002055610c40565b908392916105e9565b634e487b7160e01b600052601160045260246000fd5b8135818401558695506020909101906001016105dc565b634e487b7160e01b600052604160045260246000fd5b600190602061077684610c75565b9301928185015501610594565b604051636eb1769f60e11b81523360048201523060248201529550602080876044816001600160a01b038a165afa96871561083457600097610840575b506040516323b872dd60e01b815233600482015230602482015260448101889052818160648160006001600160a01b038c165af1801561083457610806575b50506104f3565b8161082592903d1061082d575b61081d8183610c96565b810190610cb8565b5086806107ff565b503d610813565b6040513d6000823e3d90fd5b9080975081813d8311610868575b6108588183610c96565b8101031261029b575195876107c0565b503d61084e565b6001600160a01b036108856106fe84878b610c4f565b161580156108b7575b610411576108ab6108b1916108a484888a610c4f565b3590610c89565b91610c40565b906104dc565b506108c3828688610c4f565b351561088e565b50806104d4565b6000956104cc565b50601485116104a2565b3461029b57604036600319011261029b576004356108ff610bf9565b9080158015610941575b61027e57600052600260205260096040600020019060018060a01b0316600052602052602060ff604060002054166040519015158152f35b506003548111610909565b3461029b57600036600319011261029b57602060405160008152f35b3461029b57602036600319011261029b57600435610984610d04565b801580156109f6575b61027e5780600052600260205260ff600460406000200154166109e45780600052600260205260036040600020015442116109d2576109cb90610d7f565b6001600055005b60405163289e2d1b60e01b8152600490fd5b604051630d70a0e360e41b8152600490fd5b50600354811161098d565b3461029b57602036600319011261029b57600435600052600260205260e0604060002060018060a01b03908181541691600182015416906002810154600382015460ff6004840154169160066005850154940154946040519687526020870152604086015260608501521515608084015260a083015260c0820152f35b3461029b5760208060031936011261029b57610a98610be3565b90610aa1610d04565b3360009081526001825260408082206001600160a01b0385168084529084529120549182156104115733600052600181526040600020826000528152600060408120558115600014610b6d576000808080863361c350f1610b00610d3f565b505b15610b4a57604080516001600160a01b03861681526020810185905233917f6f65559b767bf231652bb6bbc613c03da1500c2af09834b0c638fc41d4b2161691a26001600055005b3360005260018152604060002091600052526004604051633811692560e11b8152fd5b60405163a9059cbb60e01b81523360048201526024810184905281816044816000875af19081610bab575b50610ba4576000610b02565b6001610b02565b610bc190833d851161082d5761081d8183610c96565b5085610b98565b3461029b57600036600319011261029b578061c35060209252f35b600435906001600160a01b038216820361029b57565b602435906001600160a01b038216820361029b57565b9181601f8401121561029b5782359167ffffffffffffffff831161029b576020808501948460051b01011161029b57565b60001981146107255760010190565b9190811015610c5f5760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b038116810361029b5790565b9190820180921161072557565b90601f8019910116810190811067ffffffffffffffff82111761075257604052565b9081602091031261029b5751801515810361029b5790565b9091828110610cde57505050565b60009182526020822092830192015b828110610cf957505050565b818155600101610ced565b600260005414610d15576002600055565b604051633ee5aeb560e01b8152600490fd5b8054821015610c5f5760005260206000200190600090565b3d15610d7a573d9067ffffffffffffffff82116107525760405191610d6e601f8201601f191660200184610c96565b82523d6000602084013e565b606090565b6000908082526020600281526040908184209184908592600285019485548890600783019960019a8b938486019c5b610e1f575b50505050918185937fd2afa6c26b683e76d6a420af12cb290fb3fd4f25c412e8275ba2d41ac70da1c69896600560809997950155856006830155600482019060ff1982541617905560018060a01b038091541699541694549082519586528501528301526060820152a3565b909192939495969782548083101561107a57610e3b8385610d27565b90546001600160a01b0360039290921b1c8116926000198301928311611066578f9b9a99989796959493928f9290918583036110535788925b8610611010575b878c8f8f908587915416898115600014610fa7578594508493508392915061c350f1610ea5610d3f565b505b15610f265790610ebd8a98979695949392610c40565b84885260098c018d528d8820805460ff19168a1790559d548d5191166001600160a01b0316815260208101919091528060408101037fe1e3cfb155281894efb6d6350898a96e1bbb0b3518440f9e92342c5fd6f4be0991a3610f1e90610c40565b909192610dae565b9c9d90610f398a98979695949392610c40565b9e848852888d528d88208282541689528d528d882083815490610f5b91610c89565b9055548d5191166001600160a01b0316815260208101919091528060408101037fd7e0fd52becd56b3d1eb5c8bb25f88a58351ad495ad2b43f0897c755e81ed50991a3610f1e90610c40565b925163a9059cbb60e01b81526001600160a01b03909316600484015260248301919091529092829184916044918391905af19182610ff2575b5050610fec5787610ea7565b89610ea7565b8161100892903d1061082d5761081d8183610c96565b508c38610fe0565b92509294969080949698999a9b9c50810390811161103f578f9b9a999897909690959094909390928f92610e7b565b634e487b7160e01b88526011600452602488fd5b848852600a8b018c528c88205492610e74565b634e487b7160e01b87526011600452602487fd5b509796959493610db356fea26469706673582212206fe10c589649a0b7e4a8fcb2b4b0cecc2ec0ef2501c55647bc88c17ba08e91be64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x91D2788 EQ PUSH2 0xBC8 JUMPI POP DUP1 PUSH4 0x9AE54BE EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x1319AFC3 EQ PUSH2 0xA01 JUMPI DUP1 PUSH4 0x1B60F266 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4BBFFCB1 EQ PUSH2 0x968 JUMPI DUP1 PUSH4 0x58BC8337 EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0x7BEE3C0F EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0x9D71463A EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xA24E6E04 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xA6980CE2 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xC854A85D EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xE65C31C4 EQ PUSH2 0x2A0 JUMPI PUSH4 0xF6B30C60 EQ PUSH2 0xC4 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0x290 JUMPI JUMPDEST PUSH2 0x27E JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP4 PUSH1 0x7 DUP7 ADD SWAP5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH1 0x20 DUP9 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x25F JUMPI POP POP POP DUP5 PUSH2 0x163 SWAP2 SUB DUP6 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH1 0x20 PUSH1 0x8 DUP12 ADD SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x8 DUP3 SWAP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x249 JUMPI POP POP POP DUP8 PUSH2 0x19C SWAP2 SUB DUP9 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x120 SWAP6 DUP7 DUP14 ADD SWAP9 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH2 0x140 DUP6 ADD SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x227 JUMPI POP POP POP PUSH1 0x20 SWAP1 DUP5 DUP4 SUB PUSH2 0x100 DUP7 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x200 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP8 SWAP7 POP PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x186 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x80DF5539 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH2 0x2B9 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x27E JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 SWAP3 DUP4 DUP3 ADD SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 SWAP4 SWAP3 SWAP4 SWAP3 PUSH1 0x7 DUP6 ADD SWAP6 PUSH1 0x9 DUP8 SLOAD SWAP7 ADD SWAP5 JUMPDEST DUP7 DUP2 LT PUSH2 0x3A3 JUMPI STOP JUMPDEST DUP1 PUSH2 0x3B1 PUSH2 0x3DC SWAP3 DUP11 PUSH2 0xD27 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP5 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE DUP9 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3E1 JUMPI JUMPDEST POP PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST DUP7 PUSH32 0xC944E3C30D2006ADF5AFB37E5FE589410B4AE34DAD46F311007DAAC3720EE960 DUP7 PUSH1 0x40 MLOAD DUP10 DUP2 MSTORE LOG3 DUP10 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x367 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29B JUMPI PUSH2 0x45A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC0F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29B JUMPI PUSH2 0x47B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH2 0x29B JUMPI PUSH2 0x499 PUSH2 0xD04 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI JUMPDEST PUSH2 0x411 JUMPI DUP1 DUP6 SUB PUSH2 0x411 JUMPI TIMESTAMP PUSH1 0x64 CALLDATALOAD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO SWAP5 DUP6 ISZERO PUSH2 0x8D1 JUMPI CALLVALUE SWAP6 JUMPDEST DUP7 ISZERO DUP1 PUSH2 0x8CA JUMPI JUMPDEST PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP3 LT PUSH2 0x86F JUMPI PUSH2 0x2710 SWAP2 POP SUB PUSH2 0x411 JUMPI ISZERO PUSH2 0x783 JUMPI JUMPDEST PUSH2 0x4FE PUSH1 0x3 SLOAD PUSH2 0xC40 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x3 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x752 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x752 JUMPI PUSH1 0x7 DUP2 ADD PUSH2 0x586 DUP5 DUP3 SLOAD DUP2 DUP5 SSTORE DUP4 PUSH2 0xCD0 JUMP JUMPDEST DUP7 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x768 JUMPI POP POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x752 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x752 JUMPI SWAP1 DUP2 PUSH1 0x8 DUP5 SWAP4 ADD PUSH2 0x5CE DUP7 DUP3 SLOAD DUP2 DUP5 SSTORE DUP4 PUSH2 0xCD0 JUMP JUMPDEST DUP7 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x73B JUMPI POP POP POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x6C0 JUMPI POP POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0xA0 DUP10 ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP10 ADD MSTORE MSTORE PUSH1 0xC0 DUP7 ADD SWAP4 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x696 JUMPI POP POP POP DUP5 DUP4 SUB PUSH1 0x80 DUP7 ADD MSTORE DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP2 GT PUSH2 0x29B JUMPI DUP5 PUSH1 0x20 DUP1 SWAP7 DUP7 SWAP5 PUSH32 0xB010E520439FF6123538D2BF911123DCE8A3C0E4007BC029FB3373D9D3BDF8B4 SWAP5 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP10 ADD CALLDATACOPY CALLER SWAP7 ADD SUB ADD SWAP1 LOG3 PUSH2 0x689 DUP2 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP5 DUP6 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 SWAP3 SUB PUSH2 0x29B JUMPI PUSH1 0x20 DUP2 PUSH1 0x1 SWAP4 DUP3 SWAP4 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0x624 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH2 0x6CF DUP2 DUP7 DUP9 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD SWAP1 DUP10 DUP3 DUP2 MUL DIV DUP3 EQ DUP11 ISZERO OR ISZERO PUSH2 0x725 JUMPI PUSH2 0x71C SWAP2 PUSH2 0x2710 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x703 PUSH2 0x6FE DUP6 DUP11 DUP15 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA DUP6 ADD PUSH1 0x20 MSTORE DUP12 MUL DIV PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xC40 JUMP JUMPDEST SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x5E9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP5 ADD SSTORE DUP7 SWAP6 POP PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x776 DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP6 POP PUSH1 0x20 DUP1 DUP8 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x840 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x834 JUMPI PUSH2 0x806 JUMPI JUMPDEST POP POP PUSH2 0x4F3 JUMP JUMPDEST DUP2 PUSH2 0x825 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x82D JUMPI JUMPDEST PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xCB8 JUMP JUMPDEST POP DUP7 DUP1 PUSH2 0x7FF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP8 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x868 JUMPI JUMPDEST PUSH2 0x858 DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29B JUMPI MLOAD SWAP6 DUP8 PUSH2 0x7C0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x885 PUSH2 0x6FE DUP5 DUP8 DUP12 PUSH2 0xC4F JUMP JUMPDEST AND ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI JUMPDEST PUSH2 0x411 JUMPI PUSH2 0x8AB PUSH2 0x8B1 SWAP2 PUSH2 0x8A4 DUP5 DUP9 DUP11 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC89 JUMP JUMPDEST SWAP2 PUSH2 0xC40 JUMP JUMPDEST SWAP1 PUSH2 0x4DC JUMP JUMPDEST POP PUSH2 0x8C3 DUP3 DUP7 DUP9 PUSH2 0xC4F JUMP JUMPDEST CALLDATALOAD ISZERO PUSH2 0x88E JUMP JUMPDEST POP DUP1 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x4CC JUMP JUMPDEST POP PUSH1 0x14 DUP6 GT PUSH2 0x4A2 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8FF PUSH2 0xBF9 JUMP JUMPDEST SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x941 JUMPI JUMPDEST PUSH2 0x27E JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x909 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x984 PUSH2 0xD04 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI JUMPDEST PUSH2 0x27E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x9E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x9D2 JUMPI PUSH2 0x9CB SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x289E2D1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD70A0E3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 GT PUSH2 0x98D JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 SLOAD AND SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29B JUMPI PUSH2 0xA98 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 PUSH2 0xAA1 PUSH2 0xD04 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP5 MSTORE SWAP1 DUP5 MSTORE SWAP2 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x411 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP7 CALLER PUSH2 0xC350 CALL PUSH2 0xB00 PUSH2 0xD3F JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F65559B767BF231652BB6BBC613C03DA1500C2AF09834B0C638FC41D4B21616 SWAP2 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD PUSH4 0x38116925 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP1 DUP2 PUSH2 0xBAB JUMPI JUMPDEST POP PUSH2 0xBA4 JUMPI PUSH1 0x0 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xBC1 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x82D JUMPI PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST POP DUP6 PUSH2 0xB98 JUMP JUMPDEST CALLVALUE PUSH2 0x29B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29B JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x29B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x29B JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x29B JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x29B JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x29B JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x725 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x29B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x725 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x752 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x29B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x29B JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0xCDE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0xCF9 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xD15 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xD7A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD6E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xC96 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 DUP6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP5 DUP6 SLOAD DUP9 SWAP1 PUSH1 0x7 DUP4 ADD SWAP10 PUSH1 0x1 SWAP11 DUP12 SWAP4 DUP5 DUP7 ADD SWAP13 JUMPDEST PUSH2 0xE1F JUMPI JUMPDEST POP POP POP POP SWAP2 DUP2 DUP6 SWAP4 PUSH32 0xD2AFA6C26B683E76D6A420AF12CB290FB3FD4F25C412E8275BA2D41AC70DA1C6 SWAP9 SWAP7 PUSH1 0x5 PUSH1 0x80 SWAP10 SWAP8 SWAP6 ADD SSTORE DUP6 PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD AND SWAP10 SLOAD AND SWAP5 SLOAD SWAP1 DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 DUP3 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x107A JUMPI PUSH2 0xE3B DUP4 DUP6 PUSH2 0xD27 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR DUP2 AND SWAP3 PUSH1 0x0 NOT DUP4 ADD SWAP3 DUP4 GT PUSH2 0x1066 JUMPI DUP16 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP16 SWAP3 SWAP1 SWAP2 DUP6 DUP4 SUB PUSH2 0x1053 JUMPI DUP9 SWAP3 JUMPDEST DUP7 LT PUSH2 0x1010 JUMPI JUMPDEST DUP8 DUP13 DUP16 DUP16 SWAP1 DUP6 DUP8 SWAP2 SLOAD AND DUP10 DUP2 ISZERO PUSH1 0x0 EQ PUSH2 0xFA7 JUMPI DUP6 SWAP5 POP DUP5 SWAP4 POP DUP4 SWAP3 SWAP2 POP PUSH2 0xC350 CALL PUSH2 0xEA5 PUSH2 0xD3F JUMP JUMPDEST POP JUMPDEST ISZERO PUSH2 0xF26 JUMPI SWAP1 PUSH2 0xEBD DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0xC40 JUMP JUMPDEST DUP5 DUP9 MSTORE PUSH1 0x9 DUP13 ADD DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP11 OR SWAP1 SSTORE SWAP14 SLOAD DUP14 MLOAD SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x40 DUP2 ADD SUB PUSH32 0xE1E3CFB155281894EFB6D6350898A96E1BBB0B3518440F9E92342C5FD6F4BE09 SWAP2 LOG3 PUSH2 0xF1E SWAP1 PUSH2 0xC40 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xDAE JUMP JUMPDEST SWAP13 SWAP14 SWAP1 PUSH2 0xF39 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0xC40 JUMP JUMPDEST SWAP15 DUP5 DUP9 MSTORE DUP9 DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP3 DUP3 SLOAD AND DUP10 MSTORE DUP14 MSTORE DUP14 DUP9 KECCAK256 DUP4 DUP2 SLOAD SWAP1 PUSH2 0xF5B SWAP2 PUSH2 0xC89 JUMP JUMPDEST SWAP1 SSTORE SLOAD DUP14 MLOAD SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x40 DUP2 ADD SUB PUSH32 0xD7E0FD52BECD56B3D1EB5C8BB25F88A58351AD495AD2B43F0897C755E81ED509 SWAP2 LOG3 PUSH2 0xF1E SWAP1 PUSH2 0xC40 JUMP JUMPDEST SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 GAS CALL SWAP2 DUP3 PUSH2 0xFF2 JUMPI JUMPDEST POP POP PUSH2 0xFEC JUMPI DUP8 PUSH2 0xEA7 JUMP JUMPDEST DUP10 PUSH2 0xEA7 JUMP JUMPDEST DUP2 PUSH2 0x1008 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x82D JUMPI PUSH2 0x81D DUP2 DUP4 PUSH2 0xC96 JUMP JUMPDEST POP DUP13 CODESIZE PUSH2 0xFE0 JUMP JUMPDEST SWAP3 POP SWAP3 SWAP5 SWAP7 SWAP1 DUP1 SWAP5 SWAP7 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 POP DUP2 SUB SWAP1 DUP2 GT PUSH2 0x103F JUMPI DUP16 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP1 SWAP7 SWAP1 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 DUP16 SWAP3 PUSH2 0xE7B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 DUP9 MSTORE PUSH1 0xA DUP12 ADD DUP13 MSTORE DUP13 DUP9 KECCAK256 SLOAD SWAP3 PUSH2 0xE74 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xDB3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE10C589649A0B7E4A8FCB2B4B0CECC2E 0xC0 0xEF 0x25 ADD 0xC5 JUMP SELFBALANCE 0xBC DUP9 0xC1 PUSH28 0xA08E91BE64736F6C6343000814003300000000000000000000000000 ","sourceMap":"381:9812:27:-:0;;;;;;;;;;-1:-1:-1;381:9812:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;9407:12;;:38;;;;381:9812;9403:66;;381:9812;;9517:13;381:9812;;;;;;;;;;;;;;;;;;;;9595:11;;381:9812;;9620:17;9517:13;9620:17;;381:9812;9651:14;381:9812;9651:14;;381:9812;9679:15;381:9812;;9679:15;;381:9812;;9708:18;;;;381:9812;9740:15;;;381:9812;9769:16;;;;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;9799:12;;;381:9812;;;;;;;9799:12;381:9812;9799:12;;381:9812;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:9812:27;;;;;;;;;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;-1:-1:-1;381:9812:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;;;;;;;9403:66;381:9812;;-1:-1:-1;;;9454:15:27;;381:9812;;9454:15;9407:38;381:9812;;;9423:22;;9407:38;;381:9812;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;;489:5;381:9812;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;;541:2;381:9812;;;;;;;;;;;;;;;;;;5338:12;;;:38;;;;381:9812;5334:66;;381:9812;;;5448:13;381:9812;;;;;;5503:14;;;;381:9812;5484:15;;:33;;5480:60;;381:9812;5564:13;;;5583:16;;;;381:9812;5685:13;381:9812;;5685:13;;5559:256;5579:27;;;;;;381:9812;5608:3;5647:19;;5608:3;5647:19;;;:::i;:::-;381:9812;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;;;;;5684:25;5680:125;;5608:3;;;:::i;:::-;5564:13;;5680:125;381:9812;5734:56;381:9812;;;;;;5734:56;5680:125;;;5480:60;381:9812;;-1:-1:-1;;;5526:14:27;;381:9812;;5526:14;5338:38;381:9812;;;5354:22;;5338:38;;381:9812;;;-1:-1:-1;;381:9812:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;2466:103:13;;:::i;:::-;2989:22:27;;:60;;;;381:9812;2985:87;;3086:34;;;3082:61;;3169:15;381:9812;;3157:27;;3153:54;;-1:-1:-1;;;;;381:9812:27;;3248:18;;:34;;;;3269:9;3248:34;;3226:56;3296:16;:38;;;3248:34;3292:65;;381:9812;;3429:17;;;;;;489:5;3601:27;;;3597:54;;3711:18;3707:165;;3409:179;3924:14;381:9812;;3924:14;:::i;:::-;381:9812;;;;;;;3977:13;381:9812;;;;;4023:10;381:9812;;;;;;;;;;4043:11;;381:9812;;;;;;;;;;;;;;;;4072:17;3977:13;4072:17;;381:9812;;;;4113:14;;381:9812;;;;;;-1:-1:-1;;;381:9812:27;;;;4148:16;;;381:9812;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;381:9812:27;;;;4187:12;;;;;;381:9812;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4289:13;;;381:9812;4304:21;;;;;;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;381:9812:27;;;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;4451:83;381:9812;;;;;;;;;4023:10;381:9812;;4451:83;;;;4604:7;;;:::i;:::-;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4327:3;4400:9;;;;;;;;;:::i;:::-;381:9812;;;;;;;;;;;;;;;4327:3;;489:5;;-1:-1:-1;;;;;4368:13:27;;381:9812;;;4368:13;:::i;:::-;;:::i;:::-;381:9812;;;4346:21;;;381:9812;;;;;;;;;4327:3;:::i;:::-;4289:13;;;;;;381:9812;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:9812:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3707:165;381:9812;;-1:-1:-1;;;8744:50:27;;8768:10;381:9812;8744:50;;381:9812;8788:4;381:9812;;;;;-1:-1:-1;381:9812:27;;;;;-1:-1:-1;;;;;381:9812:27;;8744:50;;;;;;;381:9812;8744:50;;;3707:165;-1:-1:-1;381:9812:27;;-1:-1:-1;;;3795:66:27;;8768:10;381:9812;3795:66;;381:9812;8788:4;381:9812;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:9812:27;;3795:66;;;;;;;;3707:165;;;;;3795:66;;;;;;-1:-1:-1;3795:66:27;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;381:9812;;;;;;;;;8744:50;;;;;;;;;;;;;;;;;:::i;:::-;;;381:9812;;;;;8744:50;;;;;;;;;3448:3;-1:-1:-1;;;;;3471:13:27;;;;;;:::i;:::-;381:9812;3471:27;:45;;;;3448:3;3467:72;;3553:24;3448:3;3568:9;;;;;;:::i;:::-;381:9812;3553:24;;:::i;:::-;3448:3;;:::i;:::-;3414:13;;;3471:45;3502:9;;;;;;:::i;:::-;381:9812;3502:14;3471:45;;3296:38;;;;;3248:34;381:9812;3248:34;;;2989:60;3015:34;541:2;3015:34;;2989:60;;381:9812;;;;;;-1:-1:-1;;381:9812:27;;;;;;;;:::i;:::-;10011:12;;;:38;;;;381:9812;10007:66;;381:9812;;10090:13;381:9812;;10090:30;381:9812;;;10090:30;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;10011:38;381:9812;;;10027:22;;10011:38;;381:9812;;;;;;-1:-1:-1;;381:9812:27;;;;;;;;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;2466:103:13;;:::i;:::-;4859:12:27;;:38;;;;381:9812;4855:66;;381:9812;;;4935:13;381:9812;;;;;;;4935:32;381:9812;;4931:58;;381:9812;;;4935:13;381:9812;;;;;;5021:31;381:9812;5003:15;:49;4999:76;;5108:7;;;:::i;:::-;381:9812;;;;4999:76;381:9812;;-1:-1:-1;;;5061:14:27;;381:9812;;5061:14;4931:58;381:9812;;-1:-1:-1;;;4976:13:27;;381:9812;;4976:13;4859:38;381:9812;;;4875:22;;4859:38;;381:9812;;;;;;-1:-1:-1;;381:9812:27;;;;;;;;1153:53;381:9812;;;;;;;;;;;;;;;;1153:53;381:9812;1153:53;;381:9812;;1153:53;;;;381:9812;;1153:53;;381:9812;;;1153:53;;381:9812;;1153:53;;;;;381:9812;1153:53;;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2466:103:13;;;:::i;:::-;6043:10:27;381:9812;;;;6027:15;381:9812;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;;;6075:11;;6071:38;;6043:10;381:9812;;6027:15;381:9812;;;;;;;;;;;;;;;6195:18;;6191:292;381:9812;;;;6043:10;;;;;585:5;6243:50;;;:::i;:::-;;6191:292;6493:226;;;381:9812;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;6043:10;;6525:48;;;6027:15;381:9812;;;6493:226;6043:10;381:9812;;6027:15;381:9812;;;;;;;;;;;;6687:21;;;;;;6191:292;381:9812;;-1:-1:-1;;;6328:42:27;;6043:10;381:9812;6328:42;;381:9812;;;;;;;6043:10;381:9812;;;-1:-1:-1;6328:42:27;;;;;;;6191:292;-1:-1:-1;6324:149:27;;381:9812;6191:292;;6324:149;6027:15;6191:292;;6328:42;;;;;;;;;;;;;:::i;:::-;;;;;381:9812;;;;;;-1:-1:-1;;381:9812:27;;;;;585:5;381:9812;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;381:9812:27;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;381:9812:27;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;381:9812:27;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;2575:307:13;1899:1;2702:7;381:9812:27;2702:18:13;2698:86;;1899:1;2702:7;381:9812:27;2575:307:13:o;2698:86::-;381:9812:27;;-1:-1:-1;;;2743:30:13;;;;;381:9812:27;;;;;;;;-1:-1:-1;381:9812:27;;-1:-1:-1;381:9812:27;;;-1:-1:-1;381:9812:27;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;:::i;:::-;;;;-1:-1:-1;381:9812:27;;;;:::o;:::-;;;:::o;6807:1252::-;-1:-1:-1;381:9812:27;;;;;6895:13;381:9812;;;;;;;6936:24;;6970:21;;7021:17;6895:13;7021:17;;381:9812;;;7054:13;7073:16;;;;7219:1;;7432:11;;;;;;7049:783;7219:1;;;7049:783;7842:18;;;;;;;;7960:92;7842:18;;;381:9812;7842:18;;;;381:9812;7885:15;;;;381:9812;7922:15;;;381:9812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7960:92;6807:1252::o;7098:3::-;381:9812;;;;;;;;;;7069:27;;;;;;7137:19;;;;:::i;:::-;381:9812;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;-1:-1:-1;;381:9812:27;;;;;;;7187:115;;;;;;;;;;;;;;;7188:32;;;;;7187:115;;;7333:31;;7329:56;;7187:115;381:9812;;;;;;;;;;8288:18;;;8284:290;381:9812;;;8336:49;;;;;;;;;;585:5;8336:49;;;:::i;:::-;;8284:290;7404:48;;;7472:14;;;;;;;;;;;:::i;:::-;381:9812;;;7504:13;;;381:9812;;;;;;;-1:-1:-1;;381:9812:27;;;;;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;;;;;7558:54;;;;7098:3;7400:422;7098:3;:::i;:::-;7054:13;;;;;7400:422;7651:11;;;;;;;;;;;;;:::i;:::-;381:9812;;;;;;;;;;;;;;;;;;;;;;;;7680:49;;;;:::i;:::-;381:9812;;;;;;;-1:-1:-1;;;;;381:9812:27;;;;;;;;;;;;;;7752:55;;;;7098:3;7400:422;7098:3;:::i;8284:290::-;381:9812;;-1:-1:-1;;;8420:41:27;;-1:-1:-1;;;;;381:9812:27;;;8420:41;;;381:9812;;;;;;;;;;;;;;;;;;;8420:41;;;;;;8284:290;-1:-1:-1;;8416:148:27;;8534:15;8284:290;;8416:148;8480:14;8284:290;;8420:41;;;;;;-1:-1:-1;8420:41:27;;;;;;:::i;:::-;;;;;;7329:56;381:9812;;;;;;;;;;;;;;;;;;;;;;7366:19;;;;;;;;;;;;;;;;;;7329:56;;381:9812;-1:-1:-1;;;381:9812:27;;;;;;;;7187:115;381:9812;;;7270:21;;;381:9812;;;;;;7187:115;;;381:9812;-1:-1:-1;;;381:9812:27;;;;;;;;7069:27;;;;;;;;"},"methodIdentifiers":{"BASIS_POINTS()":"e1f1c4a7","ETH_TOKEN()":"58bc8337","GAS_LIMIT()":"091d2788","MAX_RECIPIENTS()":"a6980ce2","checkUnpaidRecipients(uint256)":"a24e6e04","claimFailedTransfer(address)":"09ae54be","createSplit(address[],uint256[],address,uint256)":"9d71463a","executeSplit(uint256)":"4bbffcb1","failedTransfers(address,address)":"1b60f266","getFailedAmount(address,address)":"e65c31c4","getSplitDetails(uint256)":"f6b30c60","hasRecipientPaid(uint256,address)":"7bee3c0f","splitCounter()":"c854a85d","splitRequests(uint256)":"1319afc3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SplitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SplitNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FailedTransferClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecipientPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"SplitCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"successCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failCount\",\"type\":\"uint256\"}],\"name\":\"SplitExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"UnpaidRecipientAlert\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RECIPIENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"}],\"name\":\"checkUnpaidRecipients\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimFailedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createSplit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"}],\"name\":\"executeSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"failedTransfers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getFailedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"}],\"name\":\"getSplitDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"successCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"splitId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"hasRecipientPaid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"splitRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"successCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Enhanced contract for splitting payments with deadline management\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"checkUnpaidRecipients(uint256)\":{\"details\":\"Check for unpaid recipients after deadline and emit alerts\",\"params\":{\"splitId\":\"The ID of the split to check\"}},\"claimFailedTransfer(address)\":{\"details\":\"Claim failed transfers\",\"params\":{\"token\":\"Token to claim (address(0) for ETH)\"}},\"createSplit(address[],uint256[],address,uint256)\":{\"details\":\"Create a split payment request with deadline\",\"params\":{\"deadline\":\"Unix timestamp deadline\",\"recipients\":\"Array of recipient addresses (max 20)\",\"shares\":\"Array of shares in basis points (must sum to 10000)\",\"token\":\"Token address (address(0) for ETH)\"}},\"executeSplit(uint256)\":{\"details\":\"Execute split with failure isolation - can be called by anyone after creation\",\"params\":{\"splitId\":\"The ID of the split to execute\"}},\"getFailedAmount(address,address)\":{\"details\":\"Get failed transfer amount\"},\"getSplitDetails(uint256)\":{\"details\":\"Get split request details\"},\"hasRecipientPaid(uint256,address)\":{\"details\":\"Check if recipient has been paid in a split\"}},\"title\":\"SplitBilling  \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows payment splitting among recipients with deadline tracking and failure isolation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SplitBilling.sol\":\"SplitBilling\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/SplitBilling.sol\":{\"keccak256\":\"0x9a100d7ba7c8503d3016c0f4c6d584794c473ff036135431f386d158a75ee699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a32363cffbbb152760e7e84742c558518030b31b12d2e335410107a903a1262\",\"dweb:/ipfs/QmVmcPwUoVVe7rvoug4QnXFihsJyiqMs6u5on9hxhsGtSz\"]}},\"version\":1}"}}}}}